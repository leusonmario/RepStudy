import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties27 = atomikosProperties14.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.containsValue((java.lang.Object) properties29);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.lang.String str38 = properties35.getProperty("hi!");
        java.util.Set<java.lang.String> strSet39 = properties35.stringPropertyNames();
        java.lang.Object obj40 = properties35.clone();
        boolean boolean41 = properties29.containsKey(obj40);
        java.lang.Object obj42 = properties13.remove((java.lang.Object) properties29);
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.store(outputStream43, "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives((int) (byte) -1);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setConsoleFileCount(32);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setAllowSubTransactions(false);
        int int20 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setMaxActives((int) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setSerialJtaTransactions(false);
        java.lang.String str30 = atomikosProperties23.getLogBaseName();
        atomikosProperties23.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setOutputDir("");
        java.lang.String str42 = atomikosProperties33.getConsoleFileName();
        java.lang.String str43 = atomikosProperties33.getLogBaseName();
        atomikosProperties33.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel46);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel46);
        atomikosProperties10.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        properties1.clear();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj29 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str35 = atomikosProperties30.getOutputDir();
        java.util.Properties properties36 = atomikosProperties30.asProperties();
        java.lang.Object obj37 = properties12.remove((java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj56 = properties39.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties57.getRecovery();
        atomikosProperties57.setEnableLogging(false);
        boolean boolean62 = properties39.equals((java.lang.Object) atomikosProperties57);
        boolean boolean63 = properties36.contains((java.lang.Object) atomikosProperties57);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        boolean boolean68 = properties65.containsKey((java.lang.Object) 10.0f);
        java.lang.String str70 = properties65.getProperty("hi!");
        boolean boolean71 = properties36.contains((java.lang.Object) properties65);
        java.util.Set<java.lang.String> strSet72 = properties65.stringPropertyNames();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        boolean boolean85 = properties84.isEmpty();
        boolean boolean86 = properties74.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean85);
        boolean boolean87 = properties74.isEmpty();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties89.elements();
        boolean boolean92 = properties89.containsKey((java.lang.Object) 10.0f);
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        java.lang.Object obj94 = properties1.putIfAbsent((java.lang.Object) properties65, (java.lang.Object) properties89);
        boolean boolean95 = properties65.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration96 = properties65.propertyNames();
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties65.save(outputStream97, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration96);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives((int) '4');
        int int8 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        boolean boolean12 = properties8.containsKey((java.lang.Object) recovery10);
        properties8.clear();
        boolean boolean15 = properties8.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = properties8.equals(obj16);
        java.util.Properties properties18 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int22 = recovery19.getMaxRetries();
        int int23 = recovery19.getMaxRetries();
        long long24 = recovery19.getRetryInterval();
        long long25 = recovery19.getForgetOrphanedLogEntriesDelay();
        int int26 = recovery19.getMaxRetries();
        boolean boolean27 = properties1.remove((java.lang.Object) properties18, (java.lang.Object) int26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setForceShutdownOnVmExit(false);
        java.util.Properties properties41 = atomikosProperties32.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties44.getLogBaseName();
        long long50 = atomikosProperties44.getCheckpointInterval();
        java.lang.String str51 = atomikosProperties44.getLogBaseDir();
        atomikosProperties44.setLogBaseName("hi!");
        boolean boolean54 = properties29.remove((java.lang.Object) properties41, (java.lang.Object) "hi!");
        java.util.Properties properties55 = new java.util.Properties(properties29);
        boolean boolean56 = properties18.equals((java.lang.Object) properties29);
        java.util.Set<java.lang.Object> objSet57 = properties29.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties29.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties29.entrySet();
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.save(outputStream60, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objEntrySet59);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setAllowSubTransactions(true);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties1.keys();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        int int32 = atomikosProperties27.getConsoleFileLimit();
        atomikosProperties27.setDefaultJtaTimeout((long) (short) 0);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.lang.String str42 = properties39.getProperty("");
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj48 = properties36.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties36);
        java.lang.Object obj50 = properties1.putIfAbsent((java.lang.Object) atomikosProperties27, (java.lang.Object) properties36);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj64 = properties52.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        int int67 = atomikosProperties61.getConsoleFileCount();
        boolean boolean68 = atomikosProperties61.isForceShutdownOnVmExit();
        atomikosProperties61.setAllowSubTransactions(false);
        int int71 = atomikosProperties61.getConsoleFileLimit();
        atomikosProperties61.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery74 = atomikosProperties61.getRecovery();
        java.lang.Object obj75 = properties36.remove((java.lang.Object) atomikosProperties61);
        java.lang.String str76 = atomikosProperties61.getLogBaseDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(recovery74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int20 = recovery19.getMaxRetries();
        boolean boolean21 = properties17.containsKey((java.lang.Object) recovery19);
        properties17.clear();
        boolean boolean24 = properties17.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel53);
        boolean boolean57 = properties17.replace((java.lang.Object) properties26, (java.lang.Object) atomikosProperties28, (java.lang.Object) 10.0d);
        java.util.Properties properties58 = new java.util.Properties(properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties17.entrySet();
        boolean boolean60 = properties9.contains((java.lang.Object) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        java.lang.String str66 = atomikosProperties61.getLogBaseName();
        long long67 = atomikosProperties61.getCheckpointInterval();
        java.lang.String str68 = atomikosProperties61.getLogBaseDir();
        atomikosProperties61.setMaxActives(100);
        boolean boolean71 = properties9.equals((java.lang.Object) 100);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream72, "{10=#}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties1.values();
        java.lang.Object obj44 = properties1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{=}");
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.elements();
        java.lang.Object obj16 = properties1.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.String str20 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setMaxTimeout(0L);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties33.setCheckpointInterval((long) 1);
        atomikosProperties33.setAllowSubTransactions(false);
        java.lang.String str44 = atomikosProperties33.getOutputDir();
        boolean boolean45 = atomikosProperties33.isForceShutdownOnVmExit();
        atomikosProperties33.setOutputDir("{}");
        boolean boolean48 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj49 = properties1.getOrDefault((java.lang.Object) atomikosProperties17, (java.lang.Object) boolean48);
        java.io.Writer writer50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer50, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        int int3 = recovery2.getMaxRetries();
        recovery2.setMaxRetries((int) (short) 0);
        recovery2.setDelay((long) '#');
        recovery2.setMaxRetries((int) (byte) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.lang.Object obj46 = properties1.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties47 = new java.util.Properties(properties1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.lang.String str52 = properties49.getProperty("hi!");
        boolean boolean54 = properties49.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet55 = properties49.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int57 = atomikosProperties56.getMaxActives();
        boolean boolean58 = properties49.equals((java.lang.Object) atomikosProperties56);
        atomikosProperties56.setSerialJtaTransactions(false);
        int int61 = atomikosProperties56.getMaxActives();
        atomikosProperties56.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery64 = atomikosProperties56.getRecovery();
        boolean boolean65 = properties47.containsKey((java.lang.Object) atomikosProperties56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 50 + "'", int57 == 50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNotNull(recovery64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        long long52 = atomikosProperties40.getCheckpointInterval();
        atomikosProperties40.setOutputDir("");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties40.getConsoleLogLevel();
        atomikosProperties40.setCheckpointInterval((long) 0);
        boolean boolean58 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setMaxRetries((-1));
        recovery3.setDelay((-1L));
        recovery3.setDelay(35L);
        long long14 = recovery3.getDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int22 = recovery21.getMaxRetries();
        boolean boolean23 = properties19.containsKey((java.lang.Object) recovery21);
        properties19.clear();
        boolean boolean26 = properties19.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setConsoleFileName("");
        java.lang.String str35 = atomikosProperties30.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel55);
        boolean boolean59 = properties19.replace((java.lang.Object) properties28, (java.lang.Object) atomikosProperties30, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet60 = properties28.keySet();
        java.lang.Object obj61 = properties15.remove((java.lang.Object) objSet60);
        java.lang.Object obj62 = properties15.clone();
        int int63 = properties15.size();
        java.io.OutputStream outputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream64, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        atomikosProperties43.setTransactionManagerUniqueName("tmlog");
        atomikosProperties43.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties43.getRecovery();
        java.lang.Object obj57 = properties38.get((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setConsoleFileCount((-1));
        boolean boolean60 = atomikosProperties43.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties43.getConsoleLogLevel();
        atomikosProperties43.setLogBaseDir("hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        atomikosProperties6.setForceShutdownOnVmExit(false);
        atomikosProperties6.setTransactionManagerUniqueName("tmlog");
        atomikosProperties6.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties6.getRecovery();
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj22 = properties1.get((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        atomikosProperties23.setCheckpointInterval((long) 100);
        boolean boolean30 = atomikosProperties23.isAllowSubTransactions();
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        java.lang.String str32 = atomikosProperties23.getLogBaseName();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties34.entrySet();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Object obj39 = properties34.replace((java.lang.Object) "hi!", obj38);
        boolean boolean41 = properties34.equals((java.lang.Object) 1.0f);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        boolean boolean45 = properties43.isEmpty();
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties47.getOutputDir();
        java.util.Properties properties53 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setOutputDir("");
        java.lang.String str63 = atomikosProperties54.getConsoleFileName();
        java.lang.String str64 = atomikosProperties54.getLogBaseName();
        atomikosProperties54.setDefaultJtaTimeout(0L);
        java.lang.Object obj67 = properties43.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties54);
        atomikosProperties54.setSerialJtaTransactions(false);
        int int70 = atomikosProperties54.getMaxActives();
        boolean boolean71 = properties1.replace((java.lang.Object) str32, (java.lang.Object) properties34, (java.lang.Object) int70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setOutputDir("");
        java.lang.String str81 = atomikosProperties72.getConsoleFileName();
        java.util.Properties properties82 = atomikosProperties72.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties82);
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream84, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(recovery19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tm.out" + "'", str81, "tm.out");
        org.junit.Assert.assertNotNull(properties82);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        int int11 = atomikosProperties0.getConsoleFileCount();
        int int12 = atomikosProperties0.getConsoleFileCount();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{{}=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(recovery17);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("{}");
        atomikosProperties0.setLogBaseDir("{10=#}");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        boolean boolean14 = properties13.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.String str22 = properties19.getProperty("");
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        boolean boolean28 = properties16.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean27);
        boolean boolean29 = properties16.isEmpty();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        boolean boolean34 = properties31.containsKey((java.lang.Object) 10.0f);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Set<java.lang.String> strSet36 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        long long43 = atomikosProperties37.getCheckpointInterval();
        atomikosProperties37.setForceShutdownOnVmExit(false);
        atomikosProperties37.setTransactionManagerUniqueName("tmlog");
        boolean boolean48 = atomikosProperties37.isEnableLogging();
        java.lang.Object obj50 = properties16.replace((java.lang.Object) atomikosProperties37, (java.lang.Object) '#');
        properties16.clear();
        java.lang.Object obj54 = properties16.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str56 = properties16.getProperty("hi!");
        java.lang.Object obj57 = properties16.clone();
        java.lang.Object obj58 = properties13.get(obj57);
        java.lang.Object obj59 = properties13.clone();
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
// flaky:         org.junit.Assert.assertEquals(obj59.toString(), "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={10=#}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service={}, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={10=#}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service={}, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={10=#}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service={}, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties13.getOutputDir();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        java.lang.String str29 = atomikosProperties20.getConsoleFileName();
        java.lang.String str30 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setDefaultJtaTimeout(0L);
        java.lang.Object obj33 = properties9.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties20);
        java.lang.String str35 = properties9.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties9.keys();
        boolean boolean37 = properties1.contains((java.lang.Object) properties9);
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration39 = properties38.propertyNames();
        int int40 = properties38.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setEnableLogging(false);
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        boolean boolean16 = atomikosProperties8.isThreadedTwoPhaseCommit();
        boolean boolean17 = atomikosProperties8.isSerialJtaTransactions();
        boolean boolean18 = atomikosProperties8.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        int int9 = properties1.size();
        java.lang.Object obj12 = properties1.setProperty("{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int13 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties14.getRecovery();
        atomikosProperties14.setEnableLogging(false);
        long long19 = atomikosProperties14.getMaxTimeout();
        atomikosProperties14.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str22 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setMaxActives((int) (byte) -1);
        java.util.Properties properties25 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getLogBaseName();
        atomikosProperties26.setAllowSubTransactions(false);
        boolean boolean36 = atomikosProperties26.isEnableLogging();
        atomikosProperties26.setMaxTimeout((long) 10);
        atomikosProperties26.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int45 = recovery44.getMaxRetries();
        boolean boolean46 = properties42.containsKey((java.lang.Object) recovery44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.String str50 = atomikosProperties47.getLogBaseDir();
        atomikosProperties47.setMaxTimeout(0L);
        java.lang.Object obj53 = properties42.remove((java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties47.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getLogBaseDir();
        java.lang.String str57 = atomikosProperties55.getLogBaseDir();
        boolean boolean58 = atomikosProperties55.isAllowSubTransactions();
        boolean boolean59 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setEnableLogging(false);
        atomikosProperties55.setTransactionManagerUniqueName("tmlog");
        java.lang.String str64 = atomikosProperties55.getService();
        atomikosProperties55.setLogBaseName("{{}=}");
        boolean boolean67 = properties25.replace((java.lang.Object) false, (java.lang.Object) atomikosLoggingLevel54, (java.lang.Object) atomikosProperties55);
        java.lang.Object obj68 = null;
        java.lang.Object obj69 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = properties1.replace((java.lang.Object) atomikosLoggingLevel54, obj68, obj69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        long long26 = atomikosProperties5.getMaxTimeout();
        boolean boolean27 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str28 = atomikosProperties5.getService();
        atomikosProperties5.setMaxTimeout((long) 19);
        atomikosProperties5.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setEnableLogging(false);
        atomikosProperties4.setEnableLogging(false);
        boolean boolean19 = atomikosProperties4.isAllowSubTransactions();
        atomikosProperties4.setMaxTimeout((-1L));
        long long22 = atomikosProperties4.getMaxTimeout();
        boolean boolean23 = properties3.containsKey((java.lang.Object) long22);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.String str31 = properties28.getProperty("");
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj37 = properties25.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj42 = properties25.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = atomikosProperties43.getRecovery();
        atomikosProperties43.setEnableLogging(false);
        boolean boolean48 = properties25.equals((java.lang.Object) atomikosProperties43);
        java.lang.String str49 = atomikosProperties43.getOutputDir();
        java.lang.String str50 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = atomikosProperties43.getRecovery();
        boolean boolean52 = properties3.containsValue((java.lang.Object) recovery51);
        java.lang.String str53 = properties3.toString();
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream54, "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(recovery45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(recovery51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxTimeout((long) 'a');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        int int51 = properties25.size();
        boolean boolean52 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long56 = recovery53.getDelay();
        long long57 = recovery53.getForgetOrphanedLogEntriesDelay();
        long long58 = recovery53.getRetryInterval();
        java.lang.Object obj59 = properties25.remove((java.lang.Object) recovery53);
        long long60 = recovery53.getRetryInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 19 + "'", int51 == 19);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Set<java.lang.String> strSet36 = properties31.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration37 = properties31.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getLogBaseDir();
        java.lang.String str44 = atomikosProperties42.getLogBaseDir();
        boolean boolean45 = atomikosProperties42.isAllowSubTransactions();
        boolean boolean46 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setService("");
        int int49 = atomikosProperties42.getConsoleFileCount();
        java.lang.String str50 = atomikosProperties42.getTransactionManagerUniqueName();
        java.lang.Object obj51 = properties31.getOrDefault((java.lang.Object) atomikosProperties38, (java.lang.Object) str50);
        java.lang.String str52 = properties31.toString();
        java.lang.Object obj53 = properties31.clone();
        boolean boolean54 = properties26.containsValue(obj53);
        java.util.Set<java.lang.Object> objSet55 = properties26.keySet();
        java.io.Reader reader56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.load(reader56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objSet55);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getLogBaseDir();
        atomikosProperties43.setLogBaseName("hi!");
        atomikosProperties43.setService("");
        boolean boolean49 = properties38.equals((java.lang.Object) "");
        java.lang.Object obj50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = properties38.contains(obj50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.Object obj27 = properties1.setProperty("{10=#}", "{}");
        java.util.Set<java.lang.Object> objSet28 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties1.entrySet();
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.lang.String str14 = properties12.getProperty("tmlog");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties16.entrySet();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Object obj21 = properties16.replace((java.lang.Object) "hi!", obj20);
        boolean boolean23 = properties16.equals((java.lang.Object) 1.0f);
        java.lang.String str25 = properties16.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery26.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int29 = recovery26.getMaxRetries();
        int int30 = recovery26.getMaxRetries();
        java.lang.Object obj31 = properties16.get((java.lang.Object) recovery26);
        long long32 = recovery26.getRetryInterval();
        recovery26.setRetryInterval((long) 100);
        int int35 = recovery26.getMaxRetries();
        recovery26.setMaxRetries(18);
        boolean boolean38 = properties12.equals((java.lang.Object) 18);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int41 = recovery40.getMaxRetries();
        boolean boolean42 = properties38.containsKey((java.lang.Object) recovery40);
        boolean boolean43 = properties30.containsValue((java.lang.Object) boolean42);
        java.lang.Object obj44 = properties30.clone();
        java.util.Set<java.lang.Object> objSet45 = properties30.keySet();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        boolean boolean49 = properties30.contains((java.lang.Object) properties47);
        java.util.Properties properties50 = new java.util.Properties(properties47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long25 = atomikosProperties16.getCheckpointInterval();
        long long26 = atomikosProperties16.getDefaultJtaTimeout();
        atomikosProperties16.setMaxTimeout((long) (short) 10);
        atomikosProperties16.setConsoleFileLimit((int) (short) -1);
        int int31 = atomikosProperties16.getConsoleFileLimit();
        boolean boolean32 = atomikosProperties16.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setOutputDir("");
        java.lang.String str18 = atomikosProperties9.getConsoleFileName();
        java.lang.String str19 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties9.setAllowSubTransactions(true);
        java.lang.String str25 = atomikosProperties9.getService();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int30 = recovery29.getMaxRetries();
        boolean boolean31 = properties27.containsKey((java.lang.Object) recovery29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        java.lang.String str35 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setMaxTimeout(0L);
        java.lang.Object obj38 = properties27.remove((java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties32.getConsoleLogLevel();
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel39);
        java.lang.String str42 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj14 = properties2.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setConsoleFileLimit((int) '4');
        atomikosProperties11.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties11.getMaxActives();
        boolean boolean21 = properties0.contains((java.lang.Object) int20);
        java.lang.String str22 = properties0.toString();
        java.lang.Object obj25 = properties0.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties0.elements();
        java.lang.String str27 = properties0.toString();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{{}=tmlog}" + "'", str27, "{{}=tmlog}");
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setSerialJtaTransactions(false);
        java.lang.String str12 = atomikosProperties5.getLogBaseName();
        atomikosProperties5.setMaxTimeout((long) (short) -1);
        java.lang.String str15 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setService("tmlog");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj31 = properties19.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setSerialJtaTransactions(false);
        int int34 = atomikosProperties28.getConsoleFileCount();
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setLogBaseName("hi!");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) "tmlog", (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long44 = atomikosProperties28.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleFileCount(5);
        java.lang.String str30 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str35 = atomikosProperties0.getConsoleFileName();
        long long36 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties10.getRecovery();
        long long22 = recovery21.getRetryInterval();
        recovery21.setDelay((long) 0);
        long long25 = recovery21.getRetryInterval();
        long long26 = recovery21.getDelay();
        long long27 = recovery21.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 86400000L + "'", long27 == 86400000L);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("{}");
        long long11 = atomikosProperties0.getCheckpointInterval();
        java.lang.Class<?> wildcardClass12 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setLogBaseDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties6.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel16);
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        long long20 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setDefaultJtaTimeout(97L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 500L + "'", long20 == 500L);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout((-1L));
        long long18 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) '#');
        boolean boolean23 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Properties properties28 = atomikosProperties6.asProperties();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream29, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        java.lang.Object obj30 = properties1.get((java.lang.Object) atomikosProperties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setConsoleFileName("");
        java.lang.String str36 = atomikosProperties31.getLogBaseName();
        long long37 = atomikosProperties31.getCheckpointInterval();
        java.lang.String str38 = atomikosProperties31.getConsoleFileName();
        long long39 = atomikosProperties31.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties31.getLogBaseName();
        atomikosProperties31.setOutputDir("tmlog");
        atomikosProperties31.setDefaultJtaTimeout((long) 100);
        atomikosProperties31.setForceShutdownOnVmExit(false);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Enumeration<?> wildcardEnumeration56 = properties48.propertyNames();
        java.lang.Object obj57 = properties1.put((java.lang.Object) atomikosProperties31, (java.lang.Object) wildcardEnumeration56);
        boolean boolean58 = atomikosProperties31.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        boolean boolean17 = properties15.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.containsValue((java.lang.Object) properties15);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("hi!");
        java.util.Set<java.lang.String> strSet25 = properties21.stringPropertyNames();
        java.lang.Object obj26 = properties21.clone();
        boolean boolean27 = properties15.containsKey(obj26);
        java.lang.Object obj30 = properties15.setProperty("hi!", "{}");
        boolean boolean31 = properties15.isEmpty();
        java.io.Writer writer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(writer32, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Properties properties39 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties40.getOutputDir();
        java.lang.Object obj45 = properties1.get((java.lang.Object) atomikosProperties40);
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream46, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        recovery31.setRetryInterval((long) (short) -1);
        recovery31.setDelay(10L);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.lang.Object obj41 = properties0.getOrDefault((java.lang.Object) recovery31, (java.lang.Object) properties39);
        java.util.Properties properties42 = new java.util.Properties(properties0);
        java.lang.Object obj43 = properties42.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str49 = atomikosProperties44.getOutputDir();
        boolean boolean50 = atomikosProperties44.isForceShutdownOnVmExit();
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        atomikosProperties44.setCheckpointInterval((long) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setOutputDir("");
        java.lang.String str63 = atomikosProperties54.getConsoleFileName();
        java.lang.String str64 = atomikosProperties54.getLogBaseName();
        atomikosProperties54.setCheckpointInterval((long) (short) 100);
        boolean boolean67 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str68 = atomikosProperties54.getTransactionManagerUniqueName();
        java.util.Properties properties69 = atomikosProperties54.asProperties();
        java.lang.Object obj70 = properties42.getOrDefault((java.lang.Object) 50, (java.lang.Object) properties69);
        java.io.InputStream inputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.load(inputStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(obj70);
// flaky:         org.junit.Assert.assertEquals(obj70.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.lang.String str55 = properties52.getProperty("hi!");
        boolean boolean57 = properties52.contains((java.lang.Object) 10.0f);
        boolean boolean58 = properties52.isEmpty();
        boolean boolean59 = properties1.containsValue((java.lang.Object) properties52);
        java.util.Enumeration<?> wildcardEnumeration60 = properties1.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int62 = atomikosProperties61.getMaxActives();
        java.lang.String str63 = atomikosProperties61.getTransactionManagerUniqueName();
        boolean boolean64 = atomikosProperties61.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setOutputDir("");
        java.lang.String str74 = atomikosProperties65.getConsoleFileName();
        java.lang.String str75 = atomikosProperties65.getLogBaseName();
        atomikosProperties65.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties61.setConsoleLogLevel(atomikosLoggingLevel78);
        atomikosProperties61.setConsoleFileCount((int) (byte) 0);
        atomikosProperties61.setCheckpointInterval(0L);
        java.lang.Object obj84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = properties1.remove((java.lang.Object) atomikosProperties61, obj84);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tm.out" + "'", str74, "tm.out");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        boolean boolean31 = properties8.equals((java.lang.Object) atomikosProperties26);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties8.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        java.lang.String str34 = properties8.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        int int36 = properties8.size();
        properties8.clear();
        java.util.Enumeration<?> wildcardEnumeration38 = properties8.propertyNames();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.lang.Object obj57 = properties40.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = atomikosProperties58.getRecovery();
        atomikosProperties58.setEnableLogging(false);
        boolean boolean63 = properties40.equals((java.lang.Object) atomikosProperties58);
        java.lang.String str64 = atomikosProperties58.getOutputDir();
        java.lang.String str65 = atomikosProperties58.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery66 = atomikosProperties58.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int68 = recovery67.getMaxRetries();
        recovery67.setForgetOrphanedLogEntriesDelay((-1L));
        recovery67.setForgetOrphanedLogEntriesDelay((long) (-1));
        int int73 = recovery67.getMaxRetries();
        long long74 = recovery67.getForgetOrphanedLogEntriesDelay();
        long long75 = recovery67.getDelay();
        recovery67.setDelay(300000L);
        recovery67.setMaxRetries(19);
        java.lang.Object obj80 = properties8.put((java.lang.Object) recovery66, (java.lang.Object) 19);
        int int81 = recovery66.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(recovery60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(recovery66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        java.util.Properties properties53 = atomikosProperties26.asProperties();
        int int54 = properties53.size();
        java.io.PrintStream printStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.list(printStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 18 + "'", int54 == 18);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.lang.String str14 = atomikosProperties10.getTransactionManagerUniqueName();
        java.util.Properties properties15 = atomikosProperties10.asProperties();
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.save(outputStream16, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        boolean boolean18 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setConsoleFileLimit(1);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("tm.out");
        java.lang.String str12 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        java.lang.Object obj41 = properties1.remove((java.lang.Object) int40);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties1.entrySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEntrySet42);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.lang.String str43 = properties42.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{}" + "'", str43, "{}");
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setLogBaseDir("");
        atomikosProperties51.setForceShutdownOnVmExit(false);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.lang.String str63 = properties60.getProperty("");
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj69 = properties57.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties66);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.lang.Object obj74 = properties57.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str76 = atomikosProperties75.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = atomikosProperties75.getRecovery();
        atomikosProperties75.setEnableLogging(false);
        boolean boolean80 = properties57.equals((java.lang.Object) atomikosProperties75);
        int int81 = atomikosProperties75.getConsoleFileCount();
        atomikosProperties75.setService("tm.out");
        atomikosProperties75.setConsoleFileLimit((int) (short) 10);
        boolean boolean86 = atomikosProperties75.isAllowSubTransactions();
        atomikosProperties75.setThreadedTwoPhaseCommit(false);
        boolean boolean89 = atomikosProperties75.isAllowSubTransactions();
        java.lang.Object obj90 = properties25.putIfAbsent((java.lang.Object) false, (java.lang.Object) atomikosProperties75);
        java.io.OutputStream outputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.store(outputStream91, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(recovery77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.lang.String str26 = properties25.toString();
        properties25.clear();
        boolean boolean28 = properties25.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout((long) (-1));
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Set<java.lang.Object> objSet34 = properties1.keySet();
        java.io.Reader reader35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setOutputDir("");
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setCheckpointInterval((long) (short) 1);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.lang.String str44 = properties41.getProperty("hi!");
        boolean boolean46 = properties41.contains((java.lang.Object) 10.0f);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean61 = properties49.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean60);
        boolean boolean62 = properties49.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties49.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        long long70 = atomikosProperties64.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties64.getLogBaseDir();
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj74 = properties47.putIfAbsent((java.lang.Object) objEnumeration63, (java.lang.Object) atomikosProperties64);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        boolean boolean77 = properties76.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery78 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int79 = recovery78.getMaxRetries();
        boolean boolean80 = properties76.containsKey((java.lang.Object) recovery78);
        recovery78.setRetryInterval((long) (short) -1);
        recovery78.setDelay(10L);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        boolean boolean87 = properties86.isEmpty();
        java.lang.Object obj88 = properties47.getOrDefault((java.lang.Object) recovery78, (java.lang.Object) properties86);
        java.lang.Object obj89 = properties41.remove((java.lang.Object) recovery78);
        long long90 = recovery78.getForgetOrphanedLogEntriesDelay();
        int int91 = recovery78.getMaxRetries();
        java.lang.Object obj92 = properties1.putIfAbsent((java.lang.Object) atomikosProperties25, (java.lang.Object) int91);
        java.lang.String str93 = properties1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{}");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 86400000L + "'", long90 == 86400000L);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = properties6.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        recovery10.setForgetOrphanedLogEntriesDelay((-1L));
        recovery10.setForgetOrphanedLogEntriesDelay(0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        java.lang.String str21 = atomikosProperties16.getOutputDir();
        java.lang.String str22 = atomikosProperties16.getTransactionManagerUniqueName();
        atomikosProperties16.setCheckpointInterval((long) 'a');
        atomikosProperties16.setMaxActives(100);
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        java.lang.Object obj30 = properties27.setProperty("tm.out", "");
        java.lang.Object obj31 = properties27.clone();
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) 0L, (java.lang.Object) properties27);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties39.entrySet();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Object obj44 = properties39.replace((java.lang.Object) "hi!", obj43);
        boolean boolean46 = properties39.equals((java.lang.Object) 1.0f);
        boolean boolean47 = properties34.containsKey((java.lang.Object) boolean46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties49.elements();
        java.lang.Object obj52 = properties34.remove((java.lang.Object) objEnumeration51);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int57 = recovery56.getMaxRetries();
        boolean boolean58 = properties54.containsKey((java.lang.Object) recovery56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setLogBaseDir("");
        java.lang.Object obj62 = properties34.put((java.lang.Object) properties54, (java.lang.Object) atomikosProperties59);
        boolean boolean63 = properties27.equals((java.lang.Object) atomikosProperties59);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        int int80 = atomikosProperties74.getConsoleFileCount();
        atomikosProperties74.setTransactionManagerUniqueName("tm.out");
        atomikosProperties74.setConsoleFileLimit((int) (short) -1);
        atomikosProperties74.setForceShutdownOnVmExit(false);
        java.util.Properties properties87 = atomikosProperties74.asProperties();
        java.lang.Object obj88 = properties27.remove((java.lang.Object) atomikosProperties74);
        atomikosProperties74.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals(obj31.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxActives((int) (short) 10);
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean25 = properties22.contains((java.lang.Object) 1L);
        int int26 = properties22.size();
        java.util.Enumeration<?> wildcardEnumeration27 = properties22.propertyNames();
        java.lang.Object obj28 = properties20.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = null;
        boolean boolean30 = properties22.equals(obj29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj44 = properties32.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj49 = properties32.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        java.lang.String str55 = atomikosProperties50.getOutputDir();
        java.util.Properties properties56 = atomikosProperties50.asProperties();
        java.lang.Object obj57 = properties32.remove((java.lang.Object) properties56);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        boolean boolean74 = properties73.isEmpty();
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        java.lang.Object obj76 = properties59.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery79 = atomikosProperties77.getRecovery();
        atomikosProperties77.setEnableLogging(false);
        boolean boolean82 = properties59.equals((java.lang.Object) atomikosProperties77);
        int int83 = atomikosProperties77.getConsoleFileCount();
        boolean boolean84 = atomikosProperties77.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setCheckpointInterval((long) (byte) -1);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        java.lang.String str90 = atomikosProperties85.getOutputDir();
        java.util.Properties properties91 = atomikosProperties85.asProperties();
        boolean boolean92 = properties32.remove((java.lang.Object) atomikosProperties77, (java.lang.Object) atomikosProperties85);
        boolean boolean93 = atomikosProperties85.isEnableLogging();
        boolean boolean94 = properties22.equals((java.lang.Object) atomikosProperties85);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery95 = atomikosProperties85.getRecovery();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(recovery79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(recovery95);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) -1);
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileName("{}");
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties42.elements();
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.storeToXML(outputStream50, "{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties54.getRecovery();
        atomikosProperties54.setEnableLogging(false);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties54.setLogBaseDir("hi!");
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.lang.Object obj68 = properties37.remove((java.lang.Object) atomikosProperties54);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties37.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getLogBaseDir();
        atomikosProperties70.setLogBaseName("hi!");
        boolean boolean74 = properties37.containsKey((java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet75 = properties37.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration76 = properties37.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties37.elements();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNotNull(objEnumeration77);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties8.getLogBaseDir();
        java.util.Properties properties19 = atomikosProperties8.asProperties();
        long long20 = atomikosProperties8.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setTransactionManagerUniqueName("{10=#}");
        int int22 = atomikosProperties10.getMaxActives();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setLogBaseName("");
        atomikosProperties6.setSerialJtaTransactions(true);
        atomikosProperties6.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties6.setMaxActives((int) 'a');
        boolean boolean28 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean29 = atomikosProperties6.isSerialJtaTransactions();
        atomikosProperties6.setMaxActives(0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.lang.String str26 = properties25.toString();
        java.lang.Object obj27 = properties25.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        java.lang.String str31 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setMaxTimeout(0L);
        long long34 = atomikosProperties28.getCheckpointInterval();
        boolean boolean35 = properties25.containsKey((java.lang.Object) long34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj55 = properties43.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties52);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel56 = atomikosProperties52.getConsoleLogLevel();
        int int57 = atomikosProperties52.getConsoleFileCount();
        java.lang.Object obj58 = properties37.get((java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(true);
        java.util.Properties properties61 = atomikosProperties52.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.lang.Object obj65 = properties61.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties61.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        boolean boolean70 = properties68.isEmpty();
        java.util.Set<java.lang.String> strSet71 = properties68.stringPropertyNames();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        boolean boolean74 = properties73.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery75 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int76 = recovery75.getMaxRetries();
        boolean boolean77 = properties73.containsKey((java.lang.Object) recovery75);
        recovery75.setRetryInterval((long) (short) -1);
        recovery75.setRetryInterval((long) 0);
        recovery75.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass84 = recovery75.getClass();
        boolean boolean85 = properties68.contains((java.lang.Object) recovery75);
        boolean boolean86 = properties61.equals((java.lang.Object) boolean85);
        int int87 = properties61.size();
        boolean boolean88 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties61.keys();
        java.lang.Object obj90 = properties25.get((java.lang.Object) objEnumeration89);
        java.lang.Object obj93 = properties25.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals(obj27.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel56 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel56.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 19 + "'", int87 == 19);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj26 = properties14.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties23);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setCheckpointInterval(10L);
        java.lang.String str32 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setMaxActives(50);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.elements();
        java.lang.Object obj16 = properties1.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.lang.String str22 = atomikosProperties17.getOutputDir();
        boolean boolean23 = atomikosProperties17.isForceShutdownOnVmExit();
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        atomikosProperties17.setCheckpointInterval((long) 50);
        java.lang.Object obj28 = properties9.replace((java.lang.Object) 50, (java.lang.Object) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setConsoleFileName("");
        java.lang.String str34 = atomikosProperties29.getLogBaseName();
        long long35 = atomikosProperties29.getCheckpointInterval();
        atomikosProperties29.setAllowSubTransactions(false);
        long long38 = atomikosProperties29.getCheckpointInterval();
        boolean boolean39 = properties9.equals((java.lang.Object) long38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        java.lang.String str42 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.String str43 = atomikosProperties40.getLogBaseName();
        boolean boolean44 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setService("tmlog");
        int int47 = atomikosProperties40.getConsoleFileLimit();
        atomikosProperties40.setMaxTimeout((long) (short) -1);
        java.lang.Object obj50 = properties9.get((java.lang.Object) atomikosProperties40);
        java.lang.String str51 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.String str52 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.String str53 = atomikosProperties40.getService();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleFileCount(5);
        java.lang.String str30 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        boolean boolean35 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        long long4 = atomikosProperties0.getCheckpointInterval();
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setCheckpointInterval((long) 100);
        java.lang.String str20 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setMaxActives((int) (short) 10);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setService("{10=#}");
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setService("tm.out");
        java.lang.String str34 = atomikosProperties0.getService();
        java.lang.String str35 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj26 = properties14.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties23);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setCheckpointInterval(10L);
        java.lang.String str32 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setOutputDir("");
        atomikosProperties10.setService("");
        java.lang.String str20 = atomikosProperties10.getService();
        java.lang.String str21 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        java.lang.String str15 = properties12.getProperty("hi!");
        boolean boolean17 = properties12.contains((java.lang.Object) 10.0f);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        boolean boolean33 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setConsoleFileName("");
        java.lang.String str40 = atomikosProperties35.getLogBaseName();
        long long41 = atomikosProperties35.getCheckpointInterval();
        java.lang.String str42 = atomikosProperties35.getLogBaseDir();
        atomikosProperties35.setEnableLogging(true);
        java.lang.Object obj45 = properties18.putIfAbsent((java.lang.Object) objEnumeration34, (java.lang.Object) atomikosProperties35);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int50 = recovery49.getMaxRetries();
        boolean boolean51 = properties47.containsKey((java.lang.Object) recovery49);
        recovery49.setRetryInterval((long) (short) -1);
        recovery49.setDelay(10L);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.lang.Object obj59 = properties18.getOrDefault((java.lang.Object) recovery49, (java.lang.Object) properties57);
        java.lang.Object obj60 = properties12.remove((java.lang.Object) recovery49);
        long long61 = recovery49.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj62 = properties1.remove((java.lang.Object) long61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 86400000L + "'", long61 == 86400000L);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.Object obj14 = properties11.setProperty("tm.out", "");
        java.lang.Object obj15 = properties11.clone();
        java.lang.Object obj18 = properties11.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tm.out=hi!}");
        java.io.Reader reader19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(reader19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        recovery6.setRetryInterval((long) (-1));
        int int9 = recovery6.getMaxRetries();
        recovery6.setMaxRetries(10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.lang.String str19 = properties16.getProperty("");
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        boolean boolean25 = properties13.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean24);
        boolean boolean26 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        long long34 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setEnableLogging(true);
        java.lang.Object obj38 = properties11.putIfAbsent((java.lang.Object) objEnumeration27, (java.lang.Object) atomikosProperties28);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int43 = recovery42.getMaxRetries();
        boolean boolean44 = properties40.containsKey((java.lang.Object) recovery42);
        recovery42.setRetryInterval((long) (short) -1);
        recovery42.setDelay(10L);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        boolean boolean51 = properties50.isEmpty();
        java.lang.Object obj52 = properties11.getOrDefault((java.lang.Object) recovery42, (java.lang.Object) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getLogBaseDir();
        java.lang.String str57 = atomikosProperties55.getLogBaseDir();
        boolean boolean58 = atomikosProperties55.isAllowSubTransactions();
        boolean boolean59 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setService("");
        int int62 = atomikosProperties55.getConsoleFileCount();
        java.lang.String str63 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean64 = properties10.replace((java.lang.Object) properties11, (java.lang.Object) 97L, (java.lang.Object) atomikosProperties55);
        java.lang.String str66 = properties11.getProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.lang.String str25 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setSerialJtaTransactions(true);
        long long28 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties30.entrySet();
        boolean boolean34 = properties20.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) objEntrySet33);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Set<java.lang.String> strSet36 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getMaxActives();
        java.lang.String str39 = atomikosProperties37.getTransactionManagerUniqueName();
        java.lang.String str40 = atomikosProperties37.getLogBaseName();
        boolean boolean41 = atomikosProperties37.isThreadedTwoPhaseCommit();
        atomikosProperties37.setCheckpointInterval((long) 'a');
        atomikosProperties37.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj46 = properties1.get((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties47.getOutputDir();
        java.util.Properties properties53 = atomikosProperties47.asProperties();
        boolean boolean54 = atomikosProperties47.isSerialJtaTransactions();
        boolean boolean55 = atomikosProperties47.isEnableLogging();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.lang.String str63 = properties60.getProperty("");
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        boolean boolean68 = properties67.isEmpty();
        boolean boolean69 = properties57.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean68);
        boolean boolean70 = properties57.isEmpty();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        boolean boolean75 = properties72.containsKey((java.lang.Object) 10.0f);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Set<java.lang.String> strSet77 = properties72.stringPropertyNames();
        java.lang.Object obj78 = properties1.put((java.lang.Object) atomikosProperties47, (java.lang.Object) properties72);
        java.lang.String str80 = properties72.getProperty("{{}=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setSerialJtaTransactions(false);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setOutputDir("");
        java.lang.String str48 = atomikosProperties39.getConsoleFileName();
        java.lang.String str49 = atomikosProperties39.getLogBaseName();
        atomikosProperties39.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = atomikosProperties39.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel52);
        int int54 = atomikosProperties29.getMaxActives();
        atomikosProperties29.setAllowSubTransactions(true);
        int int57 = atomikosProperties29.getConsoleFileCount();
        boolean boolean58 = properties28.containsKey((java.lang.Object) atomikosProperties29);
        java.lang.String str59 = properties28.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        atomikosProperties0.setConsoleFileCount((int) ' ');
        int int7 = atomikosProperties0.getConsoleFileCount();
        int int8 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("tmlog");
        int int7 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int6 = recovery5.getMaxRetries();
        recovery5.setForgetOrphanedLogEntriesDelay((-1L));
        long long9 = recovery5.getForgetOrphanedLogEntriesDelay();
        long long10 = recovery5.getForgetOrphanedLogEntriesDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setEnableLogging(true);
        long long21 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean22 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties11.getOutputDir();
        java.lang.String str24 = atomikosProperties11.getOutputDir();
        atomikosProperties11.setTransactionManagerUniqueName("hi!");
        java.lang.Object obj27 = properties1.replace((java.lang.Object) recovery5, (java.lang.Object) atomikosProperties11);
        java.lang.String str29 = properties1.getProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.lang.Object obj62 = properties45.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.String str68 = atomikosProperties63.getOutputDir();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        java.lang.Object obj70 = properties45.remove((java.lang.Object) properties69);
        boolean boolean71 = properties1.containsKey((java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setForceShutdownOnVmExit(true);
        boolean boolean79 = atomikosProperties72.isAllowSubTransactions();
        boolean boolean80 = properties45.equals((java.lang.Object) atomikosProperties72);
        atomikosProperties72.setCheckpointInterval(300000L);
        atomikosProperties72.setForceShutdownOnVmExit(true);
        boolean boolean85 = atomikosProperties72.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        boolean boolean26 = properties1.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        java.lang.String str31 = properties28.getProperty("hi!");
        boolean boolean33 = properties28.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet34 = properties28.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int36 = atomikosProperties35.getMaxActives();
        boolean boolean37 = properties28.equals((java.lang.Object) atomikosProperties35);
        atomikosProperties35.setSerialJtaTransactions(false);
        int int40 = atomikosProperties35.getMaxActives();
        atomikosProperties35.setConsoleFileCount(52);
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj45 = properties43.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.lang.Object obj47 = null;
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties49.entrySet();
        java.util.Set<java.lang.String> strSet52 = properties49.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        long long59 = atomikosProperties53.getCheckpointInterval();
        java.lang.String str60 = atomikosProperties53.getLogBaseDir();
        atomikosProperties53.setEnableLogging(true);
        long long63 = atomikosProperties53.getDefaultJtaTimeout();
        boolean boolean64 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.String str65 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setTransactionManagerUniqueName("{}");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        boolean boolean72 = properties69.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Enumeration<?> wildcardEnumeration82 = properties74.propertyNames();
        boolean boolean83 = properties69.containsValue((java.lang.Object) wildcardEnumeration82);
        java.lang.Object obj84 = properties49.put((java.lang.Object) atomikosProperties53, (java.lang.Object) properties69);
        java.lang.String str85 = atomikosProperties53.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = properties43.remove(obj47, (java.lang.Object) str85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals(obj45.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=52, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=52, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=52, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10000L + "'", long63 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(wildcardEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{}" + "'", str85, "{}");
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj9 = properties1.remove((java.lang.Object) "");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.Object obj28 = properties11.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.lang.String str34 = atomikosProperties29.getOutputDir();
        java.util.Properties properties35 = atomikosProperties29.asProperties();
        java.lang.Object obj36 = properties11.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties11.clone();
        java.util.Collection<java.lang.Object> objCollection38 = properties11.values();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.String str41 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = properties7.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        long long15 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties9.setAllowSubTransactions(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        properties23.clear();
        int int37 = properties23.size();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.lang.String str52 = atomikosProperties48.getConsoleFileName();
        java.lang.String str53 = atomikosProperties48.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties48.getConsoleLogLevel();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj68 = properties56.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        int int71 = atomikosProperties65.getConsoleFileCount();
        atomikosProperties65.setForceShutdownOnVmExit(false);
        boolean boolean74 = properties23.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) false);
        java.util.Properties properties75 = atomikosProperties48.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.Object obj77 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) properties75);
        java.lang.Object obj78 = properties75.clone();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 18 + "'", int8 == 18);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = atomikosProperties19.getRecovery();
        recovery27.setForgetOrphanedLogEntriesDelay((long) 50);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(recovery27);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseDir("tmlog");
        java.lang.String str53 = atomikosProperties43.getOutputDir();
        java.lang.String str54 = atomikosProperties43.getOutputDir();
        boolean boolean55 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setDefaultJtaTimeout((long) ' ');
        int int58 = atomikosProperties43.getConsoleFileCount();
        boolean boolean59 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean60 = properties42.containsValue((java.lang.Object) atomikosProperties43);
        boolean boolean61 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setSerialJtaTransactions(true);
        atomikosProperties43.setOutputDir("{=}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        boolean boolean28 = atomikosProperties17.isSerialJtaTransactions();
        boolean boolean29 = atomikosProperties17.isForceShutdownOnVmExit();
        java.lang.String str30 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        long long32 = atomikosProperties17.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        java.lang.String str70 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties38.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery74 = atomikosProperties38.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery74);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = new java.util.Properties(properties1);
        java.io.InputStream inputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.load(inputStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.lang.String str5 = atomikosProperties0.getService();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileLimit(32);
        atomikosProperties0.setMaxActives((int) (short) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        int int42 = properties11.size();
        java.lang.Object obj45 = properties11.setProperty("", "{{}=}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties10.isForceShutdownOnVmExit();
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        java.lang.Object obj18 = properties17.clone();
        properties17.clear();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals(obj18.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        boolean boolean7 = properties1.isEmpty();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery9.setRetryInterval((long) 100);
        recovery9.setDelay((long) 50);
        recovery9.setDelay(300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery16.setRetryInterval((long) 100);
        int int19 = recovery16.getMaxRetries();
        recovery16.setDelay((long) (short) 100);
        recovery16.setDelay((long) (byte) 1);
        boolean boolean24 = properties1.remove((java.lang.Object) recovery9, (java.lang.Object) recovery16);
        java.util.Enumeration<?> wildcardEnumeration25 = properties1.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEntrySet27);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setConsoleFileName("");
        atomikosProperties15.setCheckpointInterval((long) 100);
        boolean boolean22 = atomikosProperties15.isAllowSubTransactions();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        java.lang.String str32 = atomikosProperties24.getConsoleFileName();
        java.util.Properties properties33 = atomikosProperties24.asProperties();
        atomikosProperties24.setConsoleFileCount(10);
        java.lang.Object obj36 = properties1.replace((java.lang.Object) properties23, (java.lang.Object) atomikosProperties24);
        java.lang.String str38 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.String> strSet39 = properties1.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        boolean boolean28 = atomikosProperties6.isEnableLogging();
        int int29 = atomikosProperties6.getConsoleFileCount();
        boolean boolean30 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties6.setCheckpointInterval(500L);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties0.getConsoleLogLevel();
        int int17 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        recovery18.setDelay((-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long7 = recovery0.getRetryInterval();
        long long8 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval((long) 100);
        recovery0.setDelay((long) 2);
        long long14 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.lang.String str25 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setSerialJtaTransactions(true);
        long long28 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties30.entrySet();
        boolean boolean34 = properties20.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) objEntrySet33);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setConsoleFileName("");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        long long42 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str43 = atomikosProperties36.getLogBaseDir();
        atomikosProperties36.setEnableLogging(true);
        atomikosProperties36.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setForceShutdownOnVmExit(true);
        atomikosProperties48.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties48.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setConsoleFileName("");
        java.lang.String str64 = atomikosProperties59.getLogBaseName();
        long long65 = atomikosProperties59.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setForceShutdownOnVmExit(false);
        atomikosProperties59.setConsoleFileName("tmlog");
        boolean boolean71 = properties20.remove((java.lang.Object) atomikosLoggingLevel57, (java.lang.Object) "tmlog");
        java.lang.String str72 = properties20.toString();
        java.io.InputStream inputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.loadFromXML(inputStream73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{}" + "'", str72, "{}");
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        long long50 = recovery38.getForgetOrphanedLogEntriesDelay();
        long long51 = recovery38.getRetryInterval();
        recovery38.setForgetOrphanedLogEntriesDelay((long) (byte) 1);
        recovery38.setForgetOrphanedLogEntriesDelay((long) 18);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 86400000L + "'", long50 == 86400000L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setAllowSubTransactions(false);
        long long12 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.lang.Object obj30 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{}");
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.lang.String str39 = properties36.getProperty("");
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        boolean boolean45 = properties33.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean44);
        boolean boolean46 = properties33.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties33.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setConsoleFileName("");
        java.lang.String str53 = atomikosProperties48.getLogBaseName();
        long long54 = atomikosProperties48.getCheckpointInterval();
        java.lang.String str55 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setEnableLogging(true);
        java.lang.Object obj58 = properties31.putIfAbsent((java.lang.Object) objEnumeration47, (java.lang.Object) atomikosProperties48);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties31.keys();
        java.lang.String str61 = properties31.getProperty("tm.out");
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        boolean boolean64 = properties63.isEmpty();
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties31.get((java.lang.Object) properties65);
        java.lang.Object obj69 = properties31.setProperty("", "tmlog");
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.lang.String str77 = properties74.getProperty("");
        properties71.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Enumeration<?> wildcardEnumeration79 = properties71.propertyNames();
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        boolean boolean82 = properties81.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet83 = properties81.entrySet();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Object obj86 = properties81.replace((java.lang.Object) "hi!", obj85);
        java.lang.Object obj87 = properties81.clone();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        boolean boolean90 = properties89.isEmpty();
        java.lang.String str92 = properties89.getProperty("hi!");
        java.util.Set<java.lang.String> strSet93 = properties89.stringPropertyNames();
        java.lang.Object obj94 = properties89.clone();
        boolean boolean95 = properties71.remove(obj87, obj94);
        boolean boolean96 = properties1.remove((java.lang.Object) "", (java.lang.Object) properties71);
        properties1.clear();
        java.lang.Object obj98 = null;
        boolean boolean99 = properties1.equals(obj98);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(wildcardEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objEntrySet83);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{}");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "{}");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setOutputDir("{10=#}");
        int int20 = atomikosProperties10.getConsoleFileCount();
        java.util.Properties properties21 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties10.getRecovery();
        recovery22.setForgetOrphanedLogEntriesDelay(50L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(recovery22);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int3 = recovery0.getMaxRetries();
        int int4 = recovery0.getMaxRetries();
        long long5 = recovery0.getRetryInterval();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int7 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) (byte) 0);
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 86400000L + "'", long4 == 86400000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties8.getLogBaseDir();
        java.util.Properties properties19 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getLogBaseDir();
        java.lang.String str22 = atomikosProperties20.getLogBaseDir();
        long long23 = atomikosProperties20.getCheckpointInterval();
        atomikosProperties20.setTransactionManagerUniqueName("");
        boolean boolean26 = properties19.containsKey((java.lang.Object) atomikosProperties20);
        java.lang.Object obj29 = properties19.setProperty("{10=#}", "{tm.out=hi!}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties19.entrySet();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj44 = properties32.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties41);
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties41.isForceShutdownOnVmExit();
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.Object obj56 = properties48.remove((java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration57 = properties48.propertyNames();
        java.util.Set<java.lang.Object> objSet58 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties48.elements();
        int int60 = properties48.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        java.lang.String str66 = atomikosProperties61.getService();
        atomikosProperties61.setDefaultJtaTimeout((long) 'a');
        long long69 = atomikosProperties61.getMaxTimeout();
        boolean boolean70 = atomikosProperties61.isAllowSubTransactions();
        java.lang.Object obj71 = properties19.putIfAbsent((java.lang.Object) properties48, (java.lang.Object) boolean70);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.store(outputStream72, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 18 + "'", int60 == 18);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval((long) 100);
        int int8 = recovery0.getMaxRetries();
        int int9 = recovery0.getMaxRetries();
        recovery0.setDelay((long) 'a');
        recovery0.setDelay((long) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Set<java.lang.Object> objSet34 = properties1.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        boolean boolean41 = properties36.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet42 = properties36.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        boolean boolean45 = properties36.equals((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int48 = atomikosProperties43.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setConsoleFileName("");
        java.lang.String str54 = atomikosProperties49.getLogBaseName();
        long long55 = atomikosProperties49.getCheckpointInterval();
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.String str57 = atomikosProperties49.getConsoleFileName();
        boolean boolean58 = atomikosProperties49.isThreadedTwoPhaseCommit();
        java.lang.Object obj59 = properties1.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties49);
        boolean boolean60 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        boolean boolean66 = atomikosProperties61.isEnableLogging();
        boolean boolean67 = atomikosProperties61.isAllowSubTransactions();
        atomikosProperties61.setThreadedTwoPhaseCommit(false);
        atomikosProperties61.setCheckpointInterval((long) '4');
        long long72 = atomikosProperties61.getCheckpointInterval();
        java.lang.Object obj73 = properties1.remove((java.lang.Object) atomikosProperties61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 52L + "'", long72 == 52L);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setOutputDir("{{}=tmlog}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setService("{10=#}");
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setService("tm.out");
        java.lang.String str34 = atomikosProperties0.getService();
        int int35 = atomikosProperties0.getMaxActives();
        java.lang.String str36 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(recovery37);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setConsoleFileName("");
        atomikosProperties31.setConsoleFileName("");
        long long38 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean41 = properties0.containsKey((java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        atomikosProperties43.setTransactionManagerUniqueName("tmlog");
        atomikosProperties43.setLogBaseDir("");
        int int56 = atomikosProperties43.getConsoleFileCount();
        java.lang.Object obj57 = properties0.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) atomikosProperties43);
        java.util.Properties properties58 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setConsoleFileName("");
        java.lang.String str64 = atomikosProperties59.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.lang.String str77 = properties74.getProperty("");
        properties71.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj83 = properties71.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties80);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel84 = atomikosProperties80.getConsoleLogLevel();
        atomikosProperties65.setConsoleLogLevel(atomikosLoggingLevel84);
        atomikosProperties59.setConsoleLogLevel(atomikosLoggingLevel84);
        atomikosProperties59.setConsoleFileCount(5);
        boolean boolean89 = atomikosProperties59.isAllowSubTransactions();
        boolean boolean90 = atomikosProperties59.isAllowSubTransactions();
        java.lang.Object obj91 = properties0.remove((java.lang.Object) boolean90);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel84 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel84.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        recovery18.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setConsoleFileName("{10=#}");
        atomikosProperties0.setConsoleFileLimit(1);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.lang.String str8 = properties1.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.lang.Object obj12 = properties1.setProperty("{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties1.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getMaxActives();
        java.lang.String str40 = atomikosProperties38.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties38.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties38.getConsoleLogLevel();
        boolean boolean43 = atomikosProperties38.isForceShutdownOnVmExit();
        java.lang.String str44 = atomikosProperties38.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int46 = atomikosProperties45.getMaxActives();
        java.lang.String str47 = atomikosProperties45.getTransactionManagerUniqueName();
        boolean boolean48 = atomikosProperties45.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = atomikosProperties45.getConsoleLogLevel();
        atomikosProperties45.setAllowSubTransactions(true);
        int int52 = atomikosProperties45.getConsoleFileCount();
        java.lang.Object obj53 = properties1.getOrDefault((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.String str54 = atomikosProperties45.getTransactionManagerUniqueName();
        java.lang.String str55 = atomikosProperties45.getService();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setService("{10=#}");
        atomikosProperties0.setConsoleFileLimit((int) (short) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean22 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setAllowSubTransactions(false);
        atomikosProperties20.setLogBaseName("{10=#}");
        java.lang.Object obj32 = properties1.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) "{10=#}");
        atomikosProperties16.setDefaultJtaTimeout((long) 50);
        int int35 = atomikosProperties16.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties27 = atomikosProperties14.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.containsValue((java.lang.Object) properties29);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.lang.String str38 = properties35.getProperty("hi!");
        java.util.Set<java.lang.String> strSet39 = properties35.stringPropertyNames();
        java.lang.Object obj40 = properties35.clone();
        boolean boolean41 = properties29.containsKey(obj40);
        java.lang.Object obj42 = properties13.remove((java.lang.Object) properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties13.entrySet();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int48 = recovery47.getMaxRetries();
        boolean boolean49 = properties45.containsKey((java.lang.Object) recovery47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.lang.String str57 = properties54.getProperty("");
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj63 = properties51.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties60);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = atomikosProperties60.getConsoleLogLevel();
        int int65 = atomikosProperties60.getConsoleFileCount();
        java.lang.Object obj66 = properties45.get((java.lang.Object) atomikosProperties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        atomikosProperties67.setConsoleFileName("");
        java.lang.String str72 = atomikosProperties67.getLogBaseName();
        long long73 = atomikosProperties67.getCheckpointInterval();
        java.lang.String str74 = atomikosProperties67.getLogBaseDir();
        atomikosProperties67.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties67.getConsoleLogLevel();
        boolean boolean78 = properties45.equals((java.lang.Object) atomikosProperties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setCheckpointInterval((long) (byte) -1);
        atomikosProperties79.setConsoleFileName("");
        java.lang.String str84 = atomikosProperties79.getLogBaseName();
        long long85 = atomikosProperties79.getCheckpointInterval();
        atomikosProperties79.setForceShutdownOnVmExit(false);
        java.util.Properties properties88 = atomikosProperties79.asProperties();
        boolean boolean89 = atomikosProperties79.isAllowSubTransactions();
        atomikosProperties79.setMaxActives((-1));
        java.lang.String str92 = atomikosProperties79.getService();
        atomikosProperties79.setMaxActives((int) '#');
        boolean boolean95 = properties45.containsKey((java.lang.Object) '#');
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream97, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tmlog" + "'", str84, "tmlog");
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseDir("tmlog");
        java.lang.String str53 = atomikosProperties43.getOutputDir();
        java.lang.String str54 = atomikosProperties43.getOutputDir();
        boolean boolean55 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setDefaultJtaTimeout((long) ' ');
        int int58 = atomikosProperties43.getConsoleFileCount();
        boolean boolean59 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean60 = properties42.containsValue((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setService("hi!");
        atomikosProperties43.setSerialJtaTransactions(true);
        java.lang.String str65 = atomikosProperties43.getLogBaseName();
        java.lang.String str66 = atomikosProperties43.getService();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleFileCount(5);
        atomikosProperties0.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setLogBaseDir("");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties32.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel62);
        int int67 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setOutputDir("");
        int int70 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        java.lang.String str20 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setConsoleFileLimit(100);
        atomikosProperties16.setSerialJtaTransactions(true);
        atomikosProperties16.setAllowSubTransactions(false);
        atomikosProperties16.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties16.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel29);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setConsoleFileLimit(100);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        atomikosProperties37.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties37.getConsoleLogLevel();
        java.lang.String str44 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setCheckpointInterval((long) 100);
        atomikosProperties37.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties37.getRecovery();
        recovery49.setForgetOrphanedLogEntriesDelay(10000L);
        recovery49.setMaxRetries((-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        java.lang.String str61 = atomikosProperties54.getOutputDir();
        atomikosProperties54.setLogBaseDir("tmlog");
        atomikosProperties54.setService("tmlog");
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) recovery49, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties67 = atomikosProperties54.asProperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(properties67);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) 100);
        int int3 = recovery0.getMaxRetries();
        long long4 = recovery0.getDelay();
        recovery0.setRetryInterval((long) 52);
        recovery0.setRetryInterval(52L);
        long long9 = recovery0.getRetryInterval();
        recovery0.setDelay((long) 5);
        long long12 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 5L + "'", long12 == 5L);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.lang.Object obj38 = properties0.setProperty("", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.lang.Class<?> wildcardClass40 = objEnumeration39.getClass();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setEnableLogging(true);
        long long21 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean22 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties11.getOutputDir();
        atomikosProperties11.setTransactionManagerUniqueName("{}");
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        boolean boolean30 = properties27.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<?> wildcardEnumeration40 = properties32.propertyNames();
        boolean boolean41 = properties27.containsValue((java.lang.Object) wildcardEnumeration40);
        java.lang.Object obj42 = properties7.put((java.lang.Object) atomikosProperties11, (java.lang.Object) properties27);
        java.lang.Object obj43 = properties7.clone();
        java.lang.Object obj44 = properties1.get((java.lang.Object) properties7);
        java.util.Enumeration<?> wildcardEnumeration45 = properties1.propertyNames();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties47.elements();
        boolean boolean50 = properties1.equals((java.lang.Object) properties47);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int55 = recovery54.getMaxRetries();
        boolean boolean56 = properties52.containsKey((java.lang.Object) recovery54);
        recovery54.setRetryInterval((long) (short) -1);
        recovery54.setRetryInterval((long) 0);
        recovery54.setMaxRetries((int) (byte) 10);
        long long63 = recovery54.getDelay();
        recovery54.setRetryInterval(0L);
        long long66 = recovery54.getRetryInterval();
        boolean boolean67 = properties1.contains((java.lang.Object) recovery54);
        java.util.Properties properties68 = new java.util.Properties(properties1);
        java.lang.Object obj71 = properties1.setProperty("{tm.out=hi!}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery72 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery72.setMaxRetries((-1));
        long long75 = recovery72.getRetryInterval();
        recovery72.setMaxRetries((int) (byte) 10);
        long long78 = recovery72.getForgetOrphanedLogEntriesDelay();
        long long79 = recovery72.getDelay();
        recovery72.setRetryInterval(0L);
        long long82 = recovery72.getForgetOrphanedLogEntriesDelay();
        boolean boolean83 = properties1.containsValue((java.lang.Object) long82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10000L + "'", long63 == 10000L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 86400000L + "'", long78 == 86400000L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10000L + "'", long79 == 10000L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 86400000L + "'", long82 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Properties properties39 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties40.getOutputDir();
        java.lang.Object obj45 = properties1.get((java.lang.Object) atomikosProperties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int50 = recovery49.getMaxRetries();
        boolean boolean51 = properties47.containsKey((java.lang.Object) recovery49);
        long long52 = recovery49.getDelay();
        recovery49.setForgetOrphanedLogEntriesDelay(10L);
        java.lang.Object obj55 = properties1.remove((java.lang.Object) recovery49);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties1.elements();
        java.io.Writer writer57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer57, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10000L + "'", long52 == 10000L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<?> wildcardEnumeration39 = properties31.propertyNames();
        boolean boolean40 = properties26.containsValue((java.lang.Object) wildcardEnumeration39);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int45 = recovery44.getMaxRetries();
        boolean boolean46 = properties42.containsKey((java.lang.Object) recovery44);
        properties42.clear();
        boolean boolean49 = properties42.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties74.getConsoleLogLevel();
        atomikosProperties59.setConsoleLogLevel(atomikosLoggingLevel78);
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel78);
        boolean boolean82 = properties42.replace((java.lang.Object) properties51, (java.lang.Object) atomikosProperties53, (java.lang.Object) 10.0d);
        java.lang.Object obj83 = properties26.remove((java.lang.Object) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties42.elements();
        java.lang.Object obj85 = properties1.remove((java.lang.Object) properties42);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream86, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        boolean boolean17 = properties15.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.containsValue((java.lang.Object) properties15);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("hi!");
        java.util.Set<java.lang.String> strSet25 = properties21.stringPropertyNames();
        java.lang.Object obj26 = properties21.clone();
        boolean boolean27 = properties15.containsKey(obj26);
        java.lang.String str28 = properties15.toString();
        java.lang.String str29 = properties15.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties15.elements();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertNotNull(objEnumeration30);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        int int31 = atomikosProperties26.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        java.lang.String str34 = atomikosProperties32.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties32.getConsoleLogLevel();
        boolean boolean36 = properties25.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosLoggingLevel35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setMaxRetries((-1));
        long long40 = recovery37.getRetryInterval();
        long long41 = recovery37.getDelay();
        recovery37.setDelay((long) 52);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties49.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int53 = recovery52.getMaxRetries();
        recovery52.setForgetOrphanedLogEntriesDelay((-1L));
        recovery52.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean58 = properties45.remove((java.lang.Object) properties49, (java.lang.Object) (-1));
        boolean boolean59 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties45.keySet();
        java.lang.Object obj61 = properties25.putIfAbsent((java.lang.Object) 52, (java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection62 = properties45.values();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        atomikosProperties73.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel79 = atomikosProperties73.getConsoleLogLevel();
        atomikosProperties73.setCheckpointInterval((long) 1);
        atomikosProperties73.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties73.getRecovery();
        long long85 = recovery84.getRetryInterval();
        recovery84.setDelay((long) 0);
        recovery84.setRetryInterval((long) 2);
        boolean boolean90 = properties45.containsKey((java.lang.Object) 2);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel79 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel79.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10000L + "'", long85 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setAllowSubTransactions(true);
        int int7 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setMaxActives((-1));
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setConsoleFileCount(5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.lang.String str14 = atomikosProperties10.getConsoleFileName();
        boolean boolean15 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setMaxTimeout((long) 35);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.setMaxRetries(0);
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int41 = recovery40.getMaxRetries();
        boolean boolean42 = properties38.containsKey((java.lang.Object) recovery40);
        boolean boolean43 = properties30.containsValue((java.lang.Object) boolean42);
        java.util.Collection<java.lang.Object> objCollection44 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties30.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.String> strSet21 = properties16.stringPropertyNames();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Collection<java.lang.Object> objCollection26 = properties23.values();
        java.lang.Object obj27 = properties23.clone();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean32 = properties29.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet33 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = atomikosProperties34.getRecovery();
        atomikosProperties34.setEnableLogging(false);
        atomikosProperties34.setSerialJtaTransactions(true);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        boolean boolean54 = properties42.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean53);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        boolean boolean64 = properties42.contains((java.lang.Object) properties56);
        java.util.Set<java.lang.Object> objSet65 = properties56.keySet();
        java.lang.Object obj66 = properties29.getOrDefault((java.lang.Object) true, (java.lang.Object) properties56);
        properties56.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setSerialJtaTransactions(false);
        java.lang.String str75 = atomikosProperties68.getLogBaseName();
        atomikosProperties68.setAllowSubTransactions(false);
        java.lang.String str78 = atomikosProperties68.getService();
        atomikosProperties68.setSerialJtaTransactions(true);
        atomikosProperties68.setAllowSubTransactions(true);
        boolean boolean83 = properties23.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties68);
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        boolean boolean86 = properties85.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties85.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties85.entrySet();
        java.lang.Object obj89 = properties56.remove((java.lang.Object) objEntrySet88);
        boolean boolean90 = properties16.containsKey((java.lang.Object) properties56);
        java.lang.String str91 = properties56.toString();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(recovery36);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{}" + "'", str91, "{}");
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (short) 1);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(0L);
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{{}=false}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str7 = properties3.toString();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        boolean boolean12 = properties9.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet13 = properties9.keySet();
        java.lang.Object obj15 = properties9.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) "");
        boolean boolean18 = properties3.contains((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        atomikosProperties19.setForceShutdownOnVmExit(false);
        atomikosProperties19.setTransactionManagerUniqueName("tmlog");
        atomikosProperties19.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties19.getRecovery();
        boolean boolean33 = atomikosProperties19.isSerialJtaTransactions();
        boolean boolean34 = properties3.containsValue((java.lang.Object) boolean33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.lang.String str42 = properties39.getProperty("");
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        boolean boolean48 = properties36.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean47);
        boolean boolean49 = properties36.isEmpty();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int54 = recovery53.getMaxRetries();
        boolean boolean55 = properties51.containsKey((java.lang.Object) recovery53);
        properties51.clear();
        boolean boolean58 = properties51.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        boolean boolean61 = properties60.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setConsoleFileName("");
        java.lang.String str67 = atomikosProperties62.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj86 = properties74.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties83);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel87 = atomikosProperties83.getConsoleLogLevel();
        atomikosProperties68.setConsoleLogLevel(atomikosLoggingLevel87);
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel87);
        boolean boolean91 = properties51.replace((java.lang.Object) properties60, (java.lang.Object) atomikosProperties62, (java.lang.Object) 10.0d);
        java.util.Properties properties92 = new java.util.Properties(properties51);
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties92);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet95 = properties3.stringPropertyNames();
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream96, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{10=#}" + "'", str7, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel87 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel87.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strSet95);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseDir("tmlog");
        java.lang.String str53 = atomikosProperties43.getOutputDir();
        java.lang.String str54 = atomikosProperties43.getOutputDir();
        boolean boolean55 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setDefaultJtaTimeout((long) ' ');
        int int58 = atomikosProperties43.getConsoleFileCount();
        boolean boolean59 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean60 = properties42.containsValue((java.lang.Object) atomikosProperties43);
        boolean boolean61 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        atomikosProperties43.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        long long22 = recovery17.getRetryInterval();
        long long23 = recovery17.getForgetOrphanedLogEntriesDelay();
        int int24 = recovery17.getMaxRetries();
        recovery17.setRetryInterval((long) 1);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        boolean boolean28 = properties16.containsKey((java.lang.Object) long27);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Set<java.lang.String> strSet38 = properties33.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setOutputDir("");
        java.lang.String str48 = atomikosProperties39.getConsoleFileName();
        java.lang.String str49 = atomikosProperties39.getLogBaseName();
        atomikosProperties39.setEnableLogging(false);
        atomikosProperties39.setEnableLogging(false);
        long long54 = atomikosProperties39.getDefaultJtaTimeout();
        java.lang.Object obj55 = properties16.putIfAbsent((java.lang.Object) properties33, (java.lang.Object) atomikosProperties39);
        java.io.PrintWriter printWriter56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printWriter56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setConsoleFileLimit(18);
        boolean boolean27 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setMaxTimeout((long) 35);
        atomikosProperties19.setTransactionManagerUniqueName("{{}={}}");
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean36 = properties33.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet37 = properties33.keySet();
        java.lang.Object obj40 = properties33.setProperty("", "");
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        java.lang.String str45 = properties42.getProperty("hi!");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        boolean boolean49 = properties48.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery50 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int51 = recovery50.getMaxRetries();
        boolean boolean52 = properties48.containsKey((java.lang.Object) recovery50);
        recovery50.setRetryInterval((long) (short) -1);
        recovery50.setRetryInterval((long) 0);
        recovery50.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass59 = recovery50.getClass();
        java.lang.Object obj60 = properties42.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery50);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        boolean boolean63 = properties62.isEmpty();
        java.lang.String str65 = properties62.getProperty("hi!");
        java.util.Set<java.lang.String> strSet66 = properties62.stringPropertyNames();
        java.lang.Object obj67 = new java.lang.Object();
        boolean boolean68 = properties33.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties62, obj67);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        boolean boolean72 = properties70.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties70.keys();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties79.elements();
        java.lang.String str82 = properties79.getProperty("");
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj88 = properties76.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties85);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel89 = atomikosProperties85.getConsoleLogLevel();
        boolean boolean90 = atomikosProperties85.isForceShutdownOnVmExit();
        java.lang.String str91 = atomikosProperties85.getService();
        boolean boolean92 = properties70.containsKey((java.lang.Object) atomikosProperties85);
        atomikosProperties85.setTransactionManagerUniqueName("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel95 = atomikosProperties85.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel95);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel89 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel89.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel95 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel95.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setOutputDir("tmlog");
        atomikosProperties10.setConsoleFileCount(100);
        boolean boolean19 = atomikosProperties10.isEnableLogging();
        boolean boolean20 = atomikosProperties10.isEnableLogging();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties54.getRecovery();
        atomikosProperties54.setEnableLogging(false);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties54.setLogBaseDir("hi!");
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.lang.Object obj68 = properties37.remove((java.lang.Object) atomikosProperties54);
        java.util.Properties properties69 = new java.util.Properties();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.lang.String str77 = properties74.getProperty("");
        properties71.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        boolean boolean82 = properties81.isEmpty();
        boolean boolean83 = properties71.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean82);
        boolean boolean84 = properties71.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties71.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setCheckpointInterval((long) (byte) -1);
        atomikosProperties86.setConsoleFileName("");
        java.lang.String str91 = atomikosProperties86.getLogBaseName();
        long long92 = atomikosProperties86.getCheckpointInterval();
        java.lang.String str93 = atomikosProperties86.getLogBaseDir();
        atomikosProperties86.setEnableLogging(true);
        java.lang.Object obj96 = properties69.putIfAbsent((java.lang.Object) objEnumeration85, (java.lang.Object) atomikosProperties86);
        boolean boolean97 = atomikosProperties86.isSerialJtaTransactions();
        java.lang.String str98 = atomikosProperties86.getOutputDir();
        boolean boolean99 = properties37.equals((java.lang.Object) str98);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "tmlog" + "'", str91, "tmlog");
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = properties14.isEmpty();
        properties14.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties14.entrySet();
        java.util.Properties properties18 = new java.util.Properties(properties14);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet17);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setTransactionManagerUniqueName("{=}");
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int5 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        java.util.Enumeration<?> wildcardEnumeration85 = properties54.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int5 = atomikosProperties0.getConsoleFileCount();
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        long long11 = recovery10.getDelay();
        recovery10.setMaxRetries(97);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setConsoleFileCount(52);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        int int18 = atomikosProperties15.getConsoleFileCount();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties20.entrySet();
        boolean boolean25 = properties5.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) properties20, (java.lang.Object) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties27.isEmpty();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj50 = properties38.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties47.getConsoleLogLevel();
        int int52 = atomikosProperties47.getConsoleFileCount();
        java.lang.Object obj53 = properties32.get((java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setConsoleFileName("");
        java.lang.String str59 = atomikosProperties54.getLogBaseName();
        long long60 = atomikosProperties54.getCheckpointInterval();
        java.lang.Object obj61 = properties32.get((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setConsoleFileLimit((int) (short) 100);
        boolean boolean64 = atomikosProperties54.isForceShutdownOnVmExit();
        boolean boolean65 = properties20.containsValue((java.lang.Object) boolean64);
        java.lang.String str68 = properties20.getProperty("{{}=false}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str68, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleFileCount(5);
        java.lang.String str30 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(300000L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        atomikosProperties19.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties19.setCheckpointInterval(0L);
        atomikosProperties19.setLogBaseDir("tmlog");
        java.lang.String str34 = atomikosProperties19.getOutputDir();
        boolean boolean35 = atomikosProperties19.isAllowSubTransactions();
        long long36 = atomikosProperties19.getCheckpointInterval();
        boolean boolean37 = atomikosProperties19.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        long long3 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) 1);
        recovery0.setRetryInterval((long) 'a');
        int int8 = recovery0.getMaxRetries();
        int int9 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str20 = atomikosProperties15.getLogBaseName();
        java.lang.String str21 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setForceShutdownOnVmExit(false);
        atomikosProperties15.setDefaultJtaTimeout((long) 32);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel26);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str26 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream27, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties29.keys();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        int int73 = atomikosProperties68.getConsoleFileCount();
        java.lang.Class<?> wildcardClass74 = atomikosProperties68.getClass();
        java.lang.Object obj75 = properties1.put((java.lang.Object) properties29, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        atomikosProperties76.setConsoleFileName("");
        java.lang.String str81 = atomikosProperties76.getService();
        atomikosProperties76.setDefaultJtaTimeout((long) 'a');
        boolean boolean84 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean85 = atomikosProperties76.isEnableLogging();
        java.lang.Object obj86 = properties1.remove((java.lang.Object) atomikosProperties76);
        java.lang.String str87 = properties1.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties1.entrySet();
        java.util.Collection<java.lang.Object> objCollection89 = properties1.values();
        java.util.Collection<java.lang.Object> objCollection90 = properties1.values();
        java.util.Properties properties91 = new java.util.Properties(properties1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNotNull(objCollection89);
        org.junit.Assert.assertNotNull(objCollection90);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setConsoleFileLimit(52);
        java.lang.String str19 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Set<java.lang.String> strSet16 = properties1.stringPropertyNames();
        java.lang.String str17 = properties1.toString();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        boolean boolean21 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.keys();
        java.util.Collection<java.lang.Object> objCollection23 = properties19.values();
        boolean boolean24 = properties1.equals((java.lang.Object) objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        atomikosProperties4.setForceShutdownOnVmExit(false);
        java.util.Properties properties13 = atomikosProperties4.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        java.lang.String str23 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseName("hi!");
        boolean boolean26 = properties1.remove((java.lang.Object) properties13, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setConsoleFileName("");
        java.lang.String str32 = atomikosProperties27.getLogBaseName();
        java.lang.String str33 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        java.lang.String str40 = properties37.getProperty("hi!");
        boolean boolean42 = properties37.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet43 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int45 = atomikosProperties44.getMaxActives();
        boolean boolean46 = properties37.equals((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str49 = atomikosProperties44.getLogBaseDir();
        java.lang.String str50 = atomikosProperties44.getLogBaseName();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.util.Properties properties54 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setConsoleFileName("");
        java.lang.String str65 = atomikosProperties60.getLogBaseName();
        long long66 = atomikosProperties60.getCheckpointInterval();
        java.lang.String str67 = atomikosProperties60.getLogBaseDir();
        atomikosProperties60.setOutputDir("");
        atomikosProperties60.setTransactionManagerUniqueName("hi!");
        int int72 = atomikosProperties60.getConsoleFileLimit();
        java.lang.String str73 = atomikosProperties60.getTransactionManagerUniqueName();
        boolean boolean74 = properties54.remove((java.lang.Object) atomikosProperties55, (java.lang.Object) str73);
        java.util.Enumeration<?> wildcardEnumeration75 = properties54.propertyNames();
        java.util.Collection<java.lang.Object> objCollection76 = properties54.values();
        boolean boolean77 = properties1.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties44, (java.lang.Object) objCollection76);
        boolean boolean78 = atomikosProperties44.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery79 = atomikosProperties44.getRecovery();
        atomikosProperties44.setConsoleFileCount((int) (byte) 10);
        atomikosProperties44.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(recovery79);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        java.lang.String str4 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        java.lang.String str19 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean22 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("{{}={}}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        java.lang.Object obj14 = properties7.setProperty("", "");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.lang.String str19 = properties16.getProperty("hi!");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        recovery24.setRetryInterval((long) (short) -1);
        recovery24.setRetryInterval((long) 0);
        recovery24.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass33 = recovery24.getClass();
        java.lang.Object obj34 = properties16.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        java.util.Set<java.lang.String> strSet40 = properties36.stringPropertyNames();
        java.lang.Object obj41 = new java.lang.Object();
        boolean boolean42 = properties7.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties36, obj41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean60 = properties7.containsValue((java.lang.Object) atomikosProperties53);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setSerialJtaTransactions(false);
        boolean boolean78 = atomikosProperties72.isForceShutdownOnVmExit();
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        java.lang.Object obj80 = properties79.clone();
        java.util.Properties properties81 = new java.util.Properties(properties79);
        boolean boolean82 = properties7.equals((java.lang.Object) properties79);
        java.lang.String str85 = properties7.getProperty("{}", "hi!");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNotNull(obj80);
// flaky:         org.junit.Assert.assertEquals(obj80.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("tm.out");
        long long10 = atomikosProperties0.getMaxTimeout();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) 1);
        recovery38.setForgetOrphanedLogEntriesDelay((long) 52);
        recovery38.setMaxRetries(52);
        int int56 = recovery38.getMaxRetries();
        int int57 = recovery38.getMaxRetries();
        recovery38.setDelay((long) 'a');
        long long60 = recovery38.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 52L + "'", long60 == 52L);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        atomikosProperties19.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties19.setCheckpointInterval(0L);
        java.util.Properties properties32 = atomikosProperties19.asProperties();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties43.getConsoleLogLevel();
        int int48 = atomikosProperties43.getConsoleFileCount();
        long long49 = atomikosProperties43.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setConsoleFileName("");
        atomikosProperties50.setCheckpointInterval((long) 100);
        atomikosProperties50.setConsoleFileName("tm.out");
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        atomikosProperties50.setConsoleFileName("");
        java.lang.String str62 = atomikosProperties50.getConsoleFileName();
        java.lang.String str63 = atomikosProperties50.getConsoleFileName();
        java.lang.Object obj64 = properties32.getOrDefault((java.lang.Object) long49, (java.lang.Object) str63);
        java.util.Set<java.lang.Object> objSet65 = properties32.keySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(objSet65);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setSerialJtaTransactions(false);
        long long21 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setAllowSubTransactions(true);
        atomikosProperties10.setConsoleFileCount(32);
        java.lang.String str26 = atomikosProperties10.getService();
        atomikosProperties10.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        int int15 = atomikosProperties10.getConsoleFileCount();
        long long16 = atomikosProperties10.getMaxTimeout();
        boolean boolean17 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setLogBaseDir("{{}=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) "hi!", obj29);
        boolean boolean32 = properties25.equals((java.lang.Object) 1.0f);
        java.util.Properties properties33 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties1.replace((java.lang.Object) properties33, (java.lang.Object) properties43);
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objSet45);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        java.lang.Object obj22 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream23, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        int int31 = atomikosProperties26.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        java.lang.String str34 = atomikosProperties32.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties32.getConsoleLogLevel();
        boolean boolean36 = properties25.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosLoggingLevel35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setMaxRetries((-1));
        long long40 = recovery37.getRetryInterval();
        long long41 = recovery37.getDelay();
        recovery37.setDelay((long) 52);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties49.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int53 = recovery52.getMaxRetries();
        recovery52.setForgetOrphanedLogEntriesDelay((-1L));
        recovery52.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean58 = properties45.remove((java.lang.Object) properties49, (java.lang.Object) (-1));
        boolean boolean59 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties45.keySet();
        java.lang.Object obj61 = properties25.putIfAbsent((java.lang.Object) 52, (java.lang.Object) properties45);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        boolean boolean78 = properties77.isEmpty();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.lang.Object obj80 = properties63.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str82 = atomikosProperties81.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery83 = atomikosProperties81.getRecovery();
        atomikosProperties81.setEnableLogging(false);
        boolean boolean86 = properties63.equals((java.lang.Object) atomikosProperties81);
        int int87 = atomikosProperties81.getConsoleFileCount();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setSerialJtaTransactions(true);
        boolean boolean92 = atomikosProperties81.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel93 = atomikosProperties81.getConsoleLogLevel();
        boolean boolean94 = properties45.containsKey((java.lang.Object) atomikosProperties81);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(recovery83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel93 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel93.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.lang.String str30 = properties1.getProperty("tmlog");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj44 = properties32.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties41);
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties41.isForceShutdownOnVmExit();
        java.lang.Class<?> wildcardClass48 = atomikosProperties41.getClass();
        boolean boolean49 = properties1.equals((java.lang.Object) wildcardClass48);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        int int54 = properties53.size();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties53.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        atomikosProperties56.setAllowSubTransactions(false);
        atomikosProperties56.setLogBaseDir("");
        atomikosProperties56.setService("");
        atomikosProperties56.setMaxActives(100);
        atomikosProperties56.setConsoleFileCount(32);
        boolean boolean69 = properties1.remove((java.lang.Object) properties53, (java.lang.Object) atomikosProperties56);
        java.lang.String str71 = properties1.getProperty("{{10=#}=tm.out}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        boolean boolean51 = properties50.isEmpty();
        boolean boolean52 = properties40.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean51);
        boolean boolean53 = properties40.isEmpty();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        boolean boolean58 = properties55.containsKey((java.lang.Object) 10.0f);
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.lang.String str60 = properties40.toString();
        java.lang.String str62 = properties40.getProperty("hi!");
        boolean boolean63 = properties40.isEmpty();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        boolean boolean66 = properties65.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties65.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.keys();
        int int69 = properties65.size();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Enumeration<?> wildcardEnumeration71 = properties65.propertyNames();
        java.lang.Object obj72 = properties1.remove((java.lang.Object) properties65);
        java.lang.String str75 = properties1.getProperty("tm.out", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str75, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setConsoleFileCount(50);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        int int8 = recovery6.getMaxRetries();
        recovery6.setRetryInterval(35L);
        long long11 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setRetryInterval(32L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        boolean boolean18 = properties9.contains((java.lang.Object) 0);
        boolean boolean19 = properties1.containsValue((java.lang.Object) boolean18);
        java.util.Set<java.lang.Object> objSet20 = properties1.keySet();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        properties22.clear();
        boolean boolean29 = properties22.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties31.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel58);
        boolean boolean62 = properties22.replace((java.lang.Object) properties31, (java.lang.Object) atomikosProperties33, (java.lang.Object) 10.0d);
        java.util.Collection<java.lang.Object> objCollection63 = properties31.values();
        java.lang.Object obj64 = properties1.get((java.lang.Object) objCollection63);
        boolean boolean65 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties1.elements();
        boolean boolean68 = properties1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        boolean boolean18 = atomikosProperties15.isAllowSubTransactions();
        boolean boolean19 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setService("");
        int int22 = atomikosProperties15.getConsoleFileCount();
        java.lang.String str23 = atomikosProperties15.getTransactionManagerUniqueName();
        java.lang.Object obj24 = properties4.getOrDefault((java.lang.Object) atomikosProperties11, (java.lang.Object) str23);
        atomikosProperties11.setForceShutdownOnVmExit(true);
        atomikosProperties11.setTransactionManagerUniqueName("{=}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties6.replace((java.lang.Object) "hi!", obj10);
        boolean boolean13 = properties6.equals((java.lang.Object) 1.0f);
        boolean boolean14 = properties1.containsKey((java.lang.Object) boolean13);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.elements();
        java.lang.Object obj19 = properties1.remove((java.lang.Object) objEnumeration18);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int24 = recovery23.getMaxRetries();
        boolean boolean25 = properties21.containsKey((java.lang.Object) recovery23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setLogBaseDir("");
        java.lang.Object obj29 = properties1.put((java.lang.Object) properties21, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties31.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery33 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int34 = recovery33.getMaxRetries();
        boolean boolean35 = properties31.containsKey((java.lang.Object) recovery33);
        properties31.clear();
        boolean boolean38 = properties31.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj39 = null;
        boolean boolean40 = properties31.equals(obj39);
        java.util.Properties properties41 = new java.util.Properties(properties31);
        boolean boolean42 = properties21.equals((java.lang.Object) properties41);
        java.io.Reader reader43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.load(reader43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives(97);
        atomikosProperties0.setCheckpointInterval(10000L);
        boolean boolean20 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        int int52 = atomikosProperties40.getConsoleFileLimit();
        atomikosProperties40.setService("{{}={}}");
        java.lang.String str55 = atomikosProperties40.getService();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{{}={}}" + "'", str55, "{{}={}}");
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery9);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        boolean boolean10 = properties1.contains((java.lang.Object) 0);
        java.util.Collection<java.lang.Object> objCollection11 = properties1.values();
        java.lang.String str12 = properties1.toString();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int17 = recovery16.getMaxRetries();
        boolean boolean18 = properties14.containsKey((java.lang.Object) recovery16);
        properties14.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("hi!");
        boolean boolean26 = properties21.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet27 = properties21.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.String str33 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setConsoleFileName("tmlog");
        boolean boolean36 = properties21.contains((java.lang.Object) "tmlog");
        java.lang.Object obj37 = properties14.get((java.lang.Object) properties21);
        java.lang.String str39 = properties14.getProperty("{}");
        java.util.Set<java.lang.String> strSet40 = properties14.stringPropertyNames();
        java.lang.String str42 = properties14.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration43 = properties14.propertyNames();
        java.util.Set<java.lang.String> strSet44 = properties14.stringPropertyNames();
        java.lang.Object obj45 = properties1.remove((java.lang.Object) strSet44);
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream46, "{{10=#}=tm.out}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(wildcardEnumeration43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        java.lang.String str21 = atomikosProperties10.getOutputDir();
        boolean boolean22 = atomikosProperties10.isForceShutdownOnVmExit();
        boolean boolean23 = atomikosProperties10.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setConsoleFileLimit(18);
        int int10 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        int int14 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Collection<java.lang.Object> objCollection42 = properties10.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery43 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery43.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int46 = recovery43.getMaxRetries();
        int int47 = recovery43.getMaxRetries();
        long long48 = recovery43.getRetryInterval();
        long long49 = recovery43.getForgetOrphanedLogEntriesDelay();
        int int50 = recovery43.getMaxRetries();
        long long51 = recovery43.getForgetOrphanedLogEntriesDelay();
        int int52 = recovery43.getMaxRetries();
        java.lang.Object obj53 = null;
        java.lang.Object obj54 = properties10.getOrDefault((java.lang.Object) int52, obj53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        int int40 = properties39.size();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        boolean boolean54 = properties42.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean53);
        boolean boolean55 = properties42.isEmpty();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        boolean boolean60 = properties57.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Set<java.lang.String> strSet62 = properties57.stringPropertyNames();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        atomikosProperties73.setSerialJtaTransactions(false);
        int int79 = atomikosProperties73.getConsoleFileCount();
        boolean boolean80 = atomikosProperties73.isForceShutdownOnVmExit();
        atomikosProperties73.setAllowSubTransactions(false);
        int int83 = atomikosProperties73.getConsoleFileLimit();
        atomikosProperties73.setEnableLogging(false);
        boolean boolean86 = properties39.remove((java.lang.Object) properties57, (java.lang.Object) false);
        int int87 = properties57.size();
        int int88 = properties57.size();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str21 = atomikosProperties10.getConsoleFileName();
        long long22 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean17 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties1.keySet();
        java.lang.Object obj28 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tmlog");
        java.util.Collection<java.lang.Object> objCollection29 = properties1.values();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int48 = recovery47.getMaxRetries();
        boolean boolean49 = properties45.containsKey((java.lang.Object) recovery47);
        properties45.clear();
        java.util.Properties properties51 = new java.util.Properties(properties45);
        int int52 = properties45.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        long long59 = atomikosProperties53.getCheckpointInterval();
        atomikosProperties53.setAllowSubTransactions(false);
        long long62 = atomikosProperties53.getCheckpointInterval();
        java.lang.Object obj63 = properties45.remove((java.lang.Object) long62);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj67 = properties45.setProperty("{10=#}", "tmlog");
        java.util.Properties properties68 = new java.util.Properties(properties45);
        java.util.Enumeration<?> wildcardEnumeration69 = properties45.propertyNames();
        boolean boolean70 = properties1.containsKey((java.lang.Object) properties45);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(wildcardEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setMaxActives((-1));
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit(1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileName("{{}=}");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream13, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setEnableLogging(true);
        long long16 = atomikosProperties6.getDefaultJtaTimeout();
        boolean boolean17 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str18 = atomikosProperties6.getOutputDir();
        java.lang.String str19 = atomikosProperties6.getOutputDir();
        java.util.Properties properties20 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        java.lang.String str25 = properties22.getProperty("hi!");
        boolean boolean27 = properties22.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet28 = properties22.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        boolean boolean31 = properties22.equals((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setSerialJtaTransactions(false);
        int int34 = atomikosProperties29.getMaxActives();
        boolean boolean35 = atomikosProperties29.isEnableLogging();
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties29.getRecovery();
        boolean boolean38 = properties1.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) recovery37);
        java.util.Enumeration<?> wildcardEnumeration39 = properties1.propertyNames();
        java.util.Set<java.lang.String> strSet40 = properties1.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int46 = recovery45.getMaxRetries();
        boolean boolean47 = properties43.containsKey((java.lang.Object) recovery45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties58.getConsoleLogLevel();
        int int63 = atomikosProperties58.getConsoleFileCount();
        java.lang.Object obj64 = properties43.get((java.lang.Object) atomikosProperties58);
        long long65 = atomikosProperties58.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel66 = atomikosProperties58.getConsoleLogLevel();
        boolean boolean67 = atomikosProperties58.isAllowSubTransactions();
        boolean boolean68 = atomikosProperties58.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery69 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int70 = recovery69.getMaxRetries();
        recovery69.setForgetOrphanedLogEntriesDelay((-1L));
        long long73 = recovery69.getForgetOrphanedLogEntriesDelay();
        recovery69.setMaxRetries((int) (short) 0);
        long long76 = recovery69.getDelay();
        java.lang.Object obj77 = properties41.replace((java.lang.Object) boolean68, (java.lang.Object) recovery69);
        boolean boolean78 = properties1.equals((java.lang.Object) properties41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(recovery37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        atomikosProperties19.setCheckpointInterval((long) 100);
        atomikosProperties19.setMaxTimeout((long) (byte) -1);
        java.lang.String str28 = atomikosProperties19.getLogBaseDir();
        boolean boolean29 = properties4.equals((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setLogBaseName("hi!");
        java.lang.String str32 = atomikosProperties19.getLogBaseName();
        atomikosProperties19.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties19.setMaxActives((int) (short) 0);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.lang.String str7 = properties1.getProperty("{10=#}");
        properties1.clear();
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        int int26 = atomikosProperties20.getConsoleFileCount();
        atomikosProperties20.setTransactionManagerUniqueName("tm.out");
        java.lang.String str29 = atomikosProperties20.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setSerialJtaTransactions(false);
        java.lang.String str37 = atomikosProperties30.getLogBaseName();
        atomikosProperties30.setAllowSubTransactions(false);
        boolean boolean40 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setEnableLogging(false);
        boolean boolean43 = atomikosProperties30.isForceShutdownOnVmExit();
        atomikosProperties30.setLogBaseName("tm.out");
        java.lang.String str46 = atomikosProperties30.getService();
        java.lang.String str47 = atomikosProperties30.getLogBaseName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = properties1.replace((java.lang.Object) str29, (java.lang.Object) str47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.lang.String str8 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        atomikosProperties16.setOutputDir("tmlog");
        atomikosProperties16.setService("tm.out");
        int int30 = atomikosProperties16.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.getRecovery();
        recovery15.setMaxRetries((int) ' ');
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(recovery15);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        recovery31.setRetryInterval((long) (short) -1);
        recovery31.setDelay(10L);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.lang.Object obj41 = properties0.getOrDefault((java.lang.Object) recovery31, (java.lang.Object) properties39);
        java.util.Properties properties42 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.keys();
        java.lang.Object obj44 = properties42.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties42.entrySet();
        java.lang.Object obj46 = properties42.clone();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        int int5 = properties1.size();
        int int6 = properties1.size();
        java.util.Collection<java.lang.Object> objCollection7 = properties1.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objCollection7);
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.Object obj14 = properties11.setProperty("tm.out", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties15.getRecovery();
        atomikosProperties15.setEnableLogging(false);
        long long20 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties15.setLogBaseDir("hi!");
        boolean boolean25 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setDefaultJtaTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties15.getRecovery();
        boolean boolean29 = properties11.contains((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setService("{{10=#}=tm.out}");
        atomikosProperties15.setLogBaseName("{=}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(recovery17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.lang.Object obj62 = properties45.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.String str68 = atomikosProperties63.getOutputDir();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        java.lang.Object obj70 = properties45.remove((java.lang.Object) properties69);
        boolean boolean71 = properties1.containsKey((java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setForceShutdownOnVmExit(true);
        boolean boolean79 = atomikosProperties72.isAllowSubTransactions();
        boolean boolean80 = properties45.equals((java.lang.Object) atomikosProperties72);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties45.elements();
        java.util.Collection<java.lang.Object> objCollection82 = properties45.values();
        java.util.Properties properties83 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str85 = atomikosProperties84.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery86 = atomikosProperties84.getRecovery();
        int int87 = recovery86.getMaxRetries();
        recovery86.setMaxRetries((int) (short) 0);
        recovery86.setForgetOrphanedLogEntriesDelay((long) 10);
        java.lang.Object obj92 = properties45.get((java.lang.Object) recovery86);
        java.lang.String str94 = properties45.getProperty("{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(recovery86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.lang.String str16 = properties7.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        java.lang.Object obj22 = properties7.get((java.lang.Object) recovery17);
        recovery17.setMaxRetries((int) (byte) 1);
        recovery17.setMaxRetries(0);
        long long27 = recovery17.getDelay();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.lang.String str32 = properties29.getProperty("hi!");
        boolean boolean34 = properties29.contains((java.lang.Object) 10.0f);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setConsoleFileName("");
        java.lang.String str57 = atomikosProperties52.getLogBaseName();
        long long58 = atomikosProperties52.getCheckpointInterval();
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        atomikosProperties52.setEnableLogging(true);
        java.lang.Object obj62 = properties35.putIfAbsent((java.lang.Object) objEnumeration51, (java.lang.Object) atomikosProperties52);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        boolean boolean65 = properties64.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery66 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int67 = recovery66.getMaxRetries();
        boolean boolean68 = properties64.containsKey((java.lang.Object) recovery66);
        recovery66.setRetryInterval((long) (short) -1);
        recovery66.setDelay(10L);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        boolean boolean75 = properties74.isEmpty();
        java.lang.Object obj76 = properties35.getOrDefault((java.lang.Object) recovery66, (java.lang.Object) properties74);
        java.lang.Object obj77 = properties29.remove((java.lang.Object) recovery66);
        long long78 = recovery66.getForgetOrphanedLogEntriesDelay();
        int int79 = recovery66.getMaxRetries();
        recovery66.setDelay((long) (short) 100);
        long long82 = recovery66.getRetryInterval();
        long long83 = recovery66.getRetryInterval();
        recovery66.setDelay((long) 32);
        java.lang.Object obj86 = properties1.put((java.lang.Object) recovery17, (java.lang.Object) 32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5 + "'", int67 == 5);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 86400000L + "'", long78 == 86400000L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        long long50 = recovery38.getForgetOrphanedLogEntriesDelay();
        recovery38.setMaxRetries(0);
        long long53 = recovery38.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 86400000L + "'", long50 == 86400000L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 86400000L + "'", long53 == 86400000L);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties1.entrySet();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties11.entrySet();
        java.lang.Object obj15 = properties1.getOrDefault((java.lang.Object) properties8, (java.lang.Object) objEntrySet14);
        boolean boolean16 = properties8.isEmpty();
        java.io.Reader reader17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(reader17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet23 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties29.entrySet();
        java.lang.Object obj33 = properties19.getOrDefault((java.lang.Object) properties26, (java.lang.Object) objEntrySet32);
        java.util.Set<java.lang.Object> objSet34 = properties26.keySet();
        java.lang.Object obj35 = properties1.get((java.lang.Object) objSet34);
        int int36 = properties1.size();
        java.util.Collection<java.lang.Object> objCollection37 = properties1.values();
        int int38 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setConsoleFileName("");
        atomikosProperties39.setConsoleFileName("");
        int int46 = atomikosProperties39.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = atomikosProperties39.getRecovery();
        java.lang.Object obj48 = properties1.get((java.lang.Object) recovery47);
        java.io.InputStream inputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(recovery47);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        properties1.clear();
        java.util.Properties properties27 = new java.util.Properties(properties1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        boolean boolean41 = properties29.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean40);
        properties29.clear();
        int int43 = properties29.size();
        java.util.Set<java.lang.Object> objSet44 = properties29.keySet();
        boolean boolean45 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties29.keys();
        java.util.Properties properties47 = new java.util.Properties(properties29);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.lang.String str57 = properties54.getProperty("");
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj63 = properties51.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties60);
        atomikosProperties60.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel66 = atomikosProperties60.getConsoleLogLevel();
        java.lang.Object obj67 = properties48.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties60);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Collection<java.lang.Object> objCollection77 = properties72.values();
        boolean boolean78 = properties48.containsValue((java.lang.Object) objCollection77);
        java.lang.Object obj79 = properties27.putIfAbsent((java.lang.Object) properties29, (java.lang.Object) objCollection77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives(0);
        int int8 = atomikosProperties0.getConsoleFileCount();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxActives((int) (short) 100);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int22 = recovery21.getMaxRetries();
        boolean boolean23 = properties19.containsKey((java.lang.Object) recovery21);
        properties19.clear();
        boolean boolean26 = properties19.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setConsoleFileName("");
        java.lang.String str35 = atomikosProperties30.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel55);
        boolean boolean59 = properties19.replace((java.lang.Object) properties28, (java.lang.Object) atomikosProperties30, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet60 = properties28.keySet();
        java.lang.Object obj61 = properties15.remove((java.lang.Object) objSet60);
        java.lang.Object obj62 = properties15.clone();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.lang.String str66 = properties64.toString();
        java.util.Set<java.lang.String> strSet67 = properties64.stringPropertyNames();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setCheckpointInterval((long) (byte) -1);
        atomikosProperties69.setConsoleFileName("");
        long long74 = atomikosProperties69.getMaxTimeout();
        java.util.Properties properties75 = atomikosProperties69.asProperties();
        atomikosProperties69.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        boolean boolean80 = properties79.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int82 = recovery81.getMaxRetries();
        boolean boolean83 = properties79.containsKey((java.lang.Object) recovery81);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setCheckpointInterval((long) (byte) -1);
        java.lang.String str87 = atomikosProperties84.getLogBaseDir();
        atomikosProperties84.setMaxTimeout(0L);
        java.lang.Object obj90 = properties79.remove((java.lang.Object) atomikosProperties84);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel91 = atomikosProperties84.getConsoleLogLevel();
        atomikosProperties69.setConsoleLogLevel(atomikosLoggingLevel91);
        atomikosProperties69.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj95 = properties15.get((java.lang.Object) atomikosProperties69);
        java.util.Enumeration<?> wildcardEnumeration96 = properties15.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel91 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel91.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(wildcardEnumeration96);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        atomikosProperties38.setLogBaseDir("{10=#}");
        java.lang.String str72 = atomikosProperties38.getOutputDir();
        java.lang.String str73 = atomikosProperties38.getOutputDir();
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties12.getRecovery();
        atomikosProperties12.setEnableLogging(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        boolean boolean42 = properties20.contains((java.lang.Object) properties34);
        java.util.Set<java.lang.Object> objSet43 = properties34.keySet();
        java.lang.Object obj44 = properties7.getOrDefault((java.lang.Object) true, (java.lang.Object) properties34);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setAllowSubTransactions(false);
        java.lang.String str56 = atomikosProperties46.getService();
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setAllowSubTransactions(true);
        boolean boolean61 = properties1.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties46);
        int int62 = properties1.size();
        java.lang.Object obj65 = properties1.setProperty("{{}=}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        java.lang.String str68 = atomikosProperties66.getTransactionManagerUniqueName();
        java.lang.String str69 = atomikosProperties66.getLogBaseName();
        boolean boolean70 = atomikosProperties66.isThreadedTwoPhaseCommit();
        atomikosProperties66.setCheckpointInterval((long) 'a');
        atomikosProperties66.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str75 = atomikosProperties66.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery76 = atomikosProperties66.getRecovery();
        java.lang.Object obj77 = properties1.get((java.lang.Object) atomikosProperties66);
        atomikosProperties66.setConsoleFileName("hi!");
        boolean boolean80 = atomikosProperties66.isThreadedTwoPhaseCommit();
        java.lang.String str81 = atomikosProperties66.getTransactionManagerUniqueName();
        atomikosProperties66.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertNotNull(recovery76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.lang.String str9 = properties6.getProperty("hi!");
        boolean boolean11 = properties6.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet12 = properties6.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getMaxActives();
        boolean boolean15 = properties6.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setSerialJtaTransactions(false);
        int int18 = atomikosProperties13.getMaxActives();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int23 = recovery22.getMaxRetries();
        boolean boolean24 = properties20.containsKey((java.lang.Object) recovery22);
        long long25 = recovery22.getRetryInterval();
        java.lang.Object obj26 = properties1.getOrDefault((java.lang.Object) atomikosProperties13, (java.lang.Object) recovery22);
        atomikosProperties13.setDefaultJtaTimeout((long) '4');
        atomikosProperties13.setConsoleFileCount(32);
        atomikosProperties13.setLogBaseName("hi!");
        long long33 = atomikosProperties13.getMaxTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        boolean boolean70 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        java.lang.String str74 = atomikosProperties71.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery75 = atomikosProperties71.getRecovery();
        java.lang.String str76 = atomikosProperties71.getService();
        java.lang.String str77 = atomikosProperties71.getLogBaseName();
        boolean boolean78 = atomikosProperties71.isEnableLogging();
        java.util.Properties properties79 = atomikosProperties71.asProperties();
        boolean boolean80 = properties1.containsValue((java.lang.Object) properties79);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties79.keys();
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(recovery75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        int int9 = properties1.size();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean14 = properties11.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet15 = properties11.keySet();
        java.lang.Object obj18 = properties11.setProperty("", "");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.lang.String str23 = properties20.getProperty("hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        recovery28.setRetryInterval((long) (short) -1);
        recovery28.setRetryInterval((long) 0);
        recovery28.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass37 = recovery28.getClass();
        java.lang.Object obj38 = properties20.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery28);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        java.lang.String str43 = properties40.getProperty("hi!");
        java.util.Set<java.lang.String> strSet44 = properties40.stringPropertyNames();
        java.lang.Object obj45 = new java.lang.Object();
        boolean boolean46 = properties11.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties40, obj45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getLogBaseDir();
        java.lang.Class<?> wildcardClass49 = atomikosProperties47.getClass();
        boolean boolean50 = properties1.remove(obj45, (java.lang.Object) wildcardClass49);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties57.entrySet();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Object obj62 = properties57.replace((java.lang.Object) "hi!", obj61);
        boolean boolean64 = properties57.equals((java.lang.Object) 1.0f);
        boolean boolean65 = properties52.containsKey((java.lang.Object) boolean64);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        boolean boolean68 = properties67.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties67.elements();
        java.lang.Object obj70 = properties52.remove((java.lang.Object) objEnumeration69);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        boolean boolean73 = properties72.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery74 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int75 = recovery74.getMaxRetries();
        boolean boolean76 = properties72.containsKey((java.lang.Object) recovery74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setLogBaseDir("");
        java.lang.Object obj80 = properties52.put((java.lang.Object) properties72, (java.lang.Object) atomikosProperties77);
        java.lang.Object obj81 = properties1.remove((java.lang.Object) atomikosProperties77);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties1.keys();
        java.io.Writer writer83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer83, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 5 + "'", int75 == 5);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        properties1.clear();
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties0.setCheckpointInterval((long) 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        atomikosProperties7.setConsoleFileName("");
        java.lang.String str12 = atomikosProperties7.getLogBaseName();
        long long13 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.setForceShutdownOnVmExit(false);
        java.util.Properties properties16 = atomikosProperties7.asProperties();
        long long17 = atomikosProperties7.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setConsoleFileName("");
        java.lang.String str23 = atomikosProperties18.getOutputDir();
        int int24 = atomikosProperties18.getConsoleFileCount();
        atomikosProperties18.setOutputDir("{10=#}");
        atomikosProperties18.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = atomikosProperties18.getRecovery();
        java.lang.Object obj30 = properties1.put((java.lang.Object) atomikosProperties7, (java.lang.Object) atomikosProperties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setForceShutdownOnVmExit(true);
        atomikosProperties31.setConsoleFileName("hi!");
        atomikosProperties31.setService("{}");
        atomikosProperties31.setLogBaseDir("{10=#}");
        atomikosProperties31.setService("");
        boolean boolean46 = properties1.containsKey((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(recovery29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int3 = recovery0.getMaxRetries();
        int int4 = recovery0.getMaxRetries();
        long long5 = recovery0.getRetryInterval();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long7 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long10 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setService("");
        long long15 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        java.lang.String str70 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setAllowSubTransactions(false);
        long long73 = atomikosProperties38.getCheckpointInterval();
        int int74 = atomikosProperties38.getConsoleFileCount();
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        long long12 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties0.getConsoleFileName();
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        boolean boolean7 = properties1.isEmpty();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery9.setRetryInterval((long) 100);
        recovery9.setDelay((long) 50);
        recovery9.setDelay(300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery16.setRetryInterval((long) 100);
        int int19 = recovery16.getMaxRetries();
        recovery16.setDelay((long) (short) 100);
        recovery16.setDelay((long) (byte) 1);
        boolean boolean24 = properties1.remove((java.lang.Object) recovery9, (java.lang.Object) recovery16);
        long long25 = recovery9.getRetryInterval();
        long long26 = recovery9.getDelay();
        recovery9.setDelay((long) 32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 100L + "'", long25 == 100L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setConsoleFileLimit(10);
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        boolean boolean18 = properties9.contains((java.lang.Object) 0);
        boolean boolean19 = properties1.containsValue((java.lang.Object) boolean18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.String str23 = atomikosProperties20.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties20.getRecovery();
        java.lang.String str25 = atomikosProperties20.getService();
        boolean boolean26 = atomikosProperties20.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        java.lang.String str32 = atomikosProperties27.getOutputDir();
        java.lang.String str33 = atomikosProperties27.getOutputDir();
        java.lang.Object obj34 = properties1.replace((java.lang.Object) boolean26, (java.lang.Object) atomikosProperties27);
        atomikosProperties27.setForceShutdownOnVmExit(true);
        atomikosProperties27.setSerialJtaTransactions(false);
        java.lang.Class<?> wildcardClass39 = atomikosProperties27.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        long long14 = recovery13.getDelay();
        recovery13.setMaxRetries(97);
        recovery13.setRetryInterval((long) (byte) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.keys();
        int int30 = properties26.size();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.lang.String str39 = properties36.getProperty("");
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj45 = properties33.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties42);
        atomikosProperties42.setSerialJtaTransactions(false);
        int int48 = atomikosProperties42.getConsoleFileCount();
        atomikosProperties42.setForceShutdownOnVmExit(false);
        atomikosProperties42.setForceShutdownOnVmExit(false);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj66 = properties54.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = atomikosProperties63.getConsoleLogLevel();
        java.lang.String str70 = atomikosProperties63.getLogBaseDir();
        java.lang.Object obj71 = properties1.put((java.lang.Object) false, (java.lang.Object) atomikosProperties63);
        boolean boolean72 = atomikosProperties63.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel69 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel69.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        java.lang.Object obj41 = properties1.remove((java.lang.Object) int40);
        int int42 = properties1.size();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        int int52 = properties44.size();
        java.lang.String str53 = properties44.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery54.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long57 = recovery54.getDelay();
        long long58 = recovery54.getForgetOrphanedLogEntriesDelay();
        long long59 = recovery54.getRetryInterval();
        long long60 = recovery54.getDelay();
        boolean boolean61 = properties1.remove((java.lang.Object) properties44, (java.lang.Object) long60);
        java.util.Properties properties62 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setSerialJtaTransactions(false);
        java.lang.String str70 = atomikosProperties63.getLogBaseName();
        atomikosProperties63.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setOutputDir("");
        java.lang.String str82 = atomikosProperties73.getConsoleFileName();
        java.lang.String str83 = atomikosProperties73.getLogBaseName();
        atomikosProperties73.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel86 = atomikosProperties73.getConsoleLogLevel();
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel86);
        java.lang.Object obj88 = properties62.remove((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setMaxActives((int) (short) 0);
        atomikosProperties63.setMaxActives(2);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10000L + "'", long59 == 10000L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel86 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel86.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.lang.String str6 = properties1.getProperty("hi!");
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection9 = properties1.values();
        java.lang.Object obj12 = properties1.setProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = properties1.get(obj13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int3 = recovery0.getMaxRetries();
        int int4 = recovery0.getMaxRetries();
        long long5 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((-1));
        int int8 = recovery0.getMaxRetries();
        recovery0.setDelay((long) 'a');
        recovery0.setRetryInterval((long) 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setConsoleFileName("");
        java.lang.String str57 = atomikosProperties52.getService();
        java.lang.String str58 = atomikosProperties52.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel59);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties40.getConsoleLogLevel();
        atomikosProperties40.setCheckpointInterval(10000L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet15 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery16.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long19 = recovery16.getDelay();
        recovery16.setForgetOrphanedLogEntriesDelay(35L);
        java.lang.Object obj22 = properties5.get((java.lang.Object) 35L);
        java.util.Properties properties23 = new java.util.Properties(properties5);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties5.entrySet();
        properties5.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEntrySet24);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setMaxTimeout(100L);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        boolean boolean15 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setCheckpointInterval(10L);
        atomikosProperties10.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties54.getRecovery();
        atomikosProperties54.setEnableLogging(false);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties54.setLogBaseDir("hi!");
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.lang.Object obj68 = properties37.remove((java.lang.Object) atomikosProperties54);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties70.isEmpty();
        boolean boolean73 = properties70.contains((java.lang.Object) 1L);
        int int74 = properties70.size();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties70.keys();
        java.util.Set<java.lang.String> strSet76 = properties70.stringPropertyNames();
        boolean boolean77 = properties37.contains((java.lang.Object) properties70);
        java.util.Properties properties78 = new java.util.Properties(properties37);
        java.util.Collection<java.lang.Object> objCollection79 = properties78.values();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objCollection79);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties10.getConsoleLogLevel();
        boolean boolean20 = atomikosProperties10.isAllowSubTransactions();
        atomikosProperties10.setDefaultJtaTimeout((long) 18);
        java.lang.String str23 = atomikosProperties10.getLogBaseDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean25 = properties22.contains((java.lang.Object) 1L);
        int int26 = properties22.size();
        java.util.Enumeration<?> wildcardEnumeration27 = properties22.propertyNames();
        java.lang.Object obj28 = properties20.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = null;
        boolean boolean30 = properties22.equals(obj29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties22.keys();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        int int17 = atomikosProperties10.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties10.getRecovery();
        atomikosProperties10.setMaxActives((int) ' ');
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setOutputDir("{10=#}");
        atomikosProperties10.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj50 = properties38.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileName("");
        java.lang.Object obj53 = properties1.get((java.lang.Object) atomikosProperties47);
        boolean boolean54 = atomikosProperties47.isForceShutdownOnVmExit();
        atomikosProperties47.setConsoleFileLimit(1);
        atomikosProperties47.setOutputDir("{10=#}");
        atomikosProperties47.setService("{[]=WARN}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass17 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{10=#}" + "'", str13, "{10=#}");
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setEnableLogging(true);
        long long16 = atomikosProperties6.getDefaultJtaTimeout();
        boolean boolean17 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str18 = atomikosProperties6.getOutputDir();
        java.lang.String str19 = atomikosProperties6.getOutputDir();
        java.util.Properties properties20 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        java.lang.String str25 = properties22.getProperty("hi!");
        boolean boolean27 = properties22.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet28 = properties22.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        boolean boolean31 = properties22.equals((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setSerialJtaTransactions(false);
        int int34 = atomikosProperties29.getMaxActives();
        boolean boolean35 = atomikosProperties29.isEnableLogging();
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties29.getRecovery();
        boolean boolean38 = properties1.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) recovery37);
        java.lang.Object obj41 = properties1.setProperty("", "");
        java.lang.Object obj44 = properties1.setProperty("{tm.out=hi!}", "{tm.out=hi!}");
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties1.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(recovery37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties13.getOutputDir();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        java.lang.String str29 = atomikosProperties20.getConsoleFileName();
        java.lang.String str30 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setDefaultJtaTimeout(0L);
        java.lang.Object obj33 = properties9.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties20);
        java.lang.String str35 = properties9.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties9.keys();
        boolean boolean37 = properties1.contains((java.lang.Object) properties9);
        java.util.Enumeration<?> wildcardEnumeration38 = properties1.propertyNames();
        java.util.Set<java.lang.Object> objSet39 = properties1.keySet();
        java.lang.String str42 = properties1.getProperty("{}", "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}" + "'", str42, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.lang.String str8 = properties5.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet9 = properties5.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties15.entrySet();
        java.lang.Object obj19 = properties5.getOrDefault((java.lang.Object) properties12, (java.lang.Object) objEntrySet18);
        boolean boolean20 = properties1.containsKey((java.lang.Object) objEntrySet18);
        int int21 = properties1.size();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj35 = properties23.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties32.getConsoleLogLevel();
        atomikosProperties32.setConsoleFileLimit((int) '4');
        atomikosProperties32.setMaxActives((int) ' ');
        atomikosProperties32.setLogBaseName("hi!");
        atomikosProperties32.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties32.setCheckpointInterval((long) 18);
        int int47 = atomikosProperties32.getConsoleFileLimit();
        boolean boolean48 = properties1.containsKey((java.lang.Object) atomikosProperties32);
        long long49 = atomikosProperties32.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setMaxActives((int) (short) -1);
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        boolean boolean19 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setDelay((long) (short) 10);
        recovery0.setRetryInterval((long) (byte) 0);
        int int13 = recovery0.getMaxRetries();
        int int14 = recovery0.getMaxRetries();
        recovery0.setRetryInterval(50L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 5);
        atomikosProperties0.setCheckpointInterval((long) 18);
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setRetryInterval(300000L);
        recovery0.setDelay((long) (byte) 0);
        long long11 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties30.isEmpty();
        java.lang.Object obj33 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) boolean32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties57.getConsoleLogLevel();
        atomikosProperties42.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties34.setCheckpointInterval(10L);
        boolean boolean66 = properties13.equals((java.lang.Object) atomikosProperties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        java.lang.String str70 = atomikosProperties67.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties67.getRecovery();
        long long72 = recovery71.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery73.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long76 = recovery73.getDelay();
        long long77 = recovery73.getForgetOrphanedLogEntriesDelay();
        long long78 = recovery73.getRetryInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str80 = atomikosProperties79.getLogBaseDir();
        atomikosProperties79.setLogBaseName("hi!");
        boolean boolean83 = properties13.replace((java.lang.Object) recovery71, (java.lang.Object) long78, (java.lang.Object) "hi!");
        recovery71.setDelay(10000L);
        long long86 = recovery71.getDelay();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10000L + "'", long72 == 10000L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 10000L + "'", long78 == 10000L);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10000L + "'", long86 == 10000L);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        int int11 = atomikosProperties0.getConsoleFileCount();
        int int12 = atomikosProperties0.getConsoleFileCount();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getMaxActives();
        java.lang.String str17 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setConsoleFileCount(0);
        atomikosProperties15.setConsoleFileCount((int) ' ');
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.lang.String str23 = atomikosProperties15.getLogBaseDir();
        long long24 = atomikosProperties15.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setLogBaseDir("");
        atomikosProperties25.setForceShutdownOnVmExit(false);
        int int30 = atomikosProperties25.getConsoleFileCount();
        boolean boolean31 = atomikosProperties25.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties25.getConsoleLogLevel();
        atomikosProperties15.setConsoleLogLevel(atomikosLoggingLevel32);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel32);
        java.lang.String str35 = atomikosProperties0.getService();
        boolean boolean36 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setConsoleFileName("");
        java.lang.String str15 = atomikosProperties10.getLogBaseName();
        long long16 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        boolean boolean20 = atomikosProperties10.isAllowSubTransactions();
        atomikosProperties10.setMaxActives((-1));
        atomikosProperties10.setMaxTimeout((long) '4');
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        boolean boolean27 = properties4.containsKey((java.lang.Object) atomikosProperties10);
        java.lang.Object obj28 = properties4.clone();
        boolean boolean29 = properties4.isEmpty();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        java.lang.Object obj22 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.InputStream inputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.elements();
        properties9.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("");
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int12 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setMaxTimeout(300000L);
        atomikosProperties4.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setMaxTimeout((long) (byte) -1);
        boolean boolean25 = properties1.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("{[]=WARN}");
        atomikosProperties16.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties16.setMaxActives(18);
        java.lang.String str34 = atomikosProperties16.getService();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int20 = recovery19.getMaxRetries();
        boolean boolean21 = properties17.containsKey((java.lang.Object) recovery19);
        properties17.clear();
        boolean boolean24 = properties17.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel53);
        boolean boolean57 = properties17.replace((java.lang.Object) properties26, (java.lang.Object) atomikosProperties28, (java.lang.Object) 10.0d);
        java.util.Properties properties58 = new java.util.Properties(properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties17.entrySet();
        boolean boolean60 = properties9.contains((java.lang.Object) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        java.lang.String str66 = atomikosProperties61.getLogBaseName();
        long long67 = atomikosProperties61.getCheckpointInterval();
        java.lang.String str68 = atomikosProperties61.getLogBaseDir();
        atomikosProperties61.setMaxActives(100);
        boolean boolean71 = properties9.equals((java.lang.Object) 100);
        java.io.InputStream inputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        boolean boolean3 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int5 = recovery4.getMaxRetries();
        boolean boolean6 = properties2.containsKey((java.lang.Object) recovery4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties17.getConsoleLogLevel();
        int int22 = atomikosProperties17.getConsoleFileCount();
        java.lang.Object obj23 = properties2.get((java.lang.Object) atomikosProperties17);
        long long24 = atomikosProperties17.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties17.getConsoleLogLevel();
        boolean boolean26 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean27 = atomikosProperties17.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        recovery28.setForgetOrphanedLogEntriesDelay((-1L));
        long long32 = recovery28.getForgetOrphanedLogEntriesDelay();
        recovery28.setMaxRetries((int) (short) 0);
        long long35 = recovery28.getDelay();
        java.lang.Object obj36 = properties0.replace((java.lang.Object) boolean27, (java.lang.Object) recovery28);
        recovery28.setRetryInterval((long) 100);
        recovery28.setRetryInterval((long) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.lang.Object obj7 = properties1.clone();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        java.util.Properties properties10 = new java.util.Properties(properties1);
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer11, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        long long3 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay(300000L);
        recovery0.setDelay((-1L));
        long long8 = recovery0.getRetryInterval();
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setMaxActives((int) '4');
        int int12 = atomikosProperties0.getConsoleFileCount();
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        boolean boolean37 = atomikosProperties5.isAllowSubTransactions();
        atomikosProperties5.setCheckpointInterval((long) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties5.getRecovery();
        atomikosProperties5.setConsoleFileCount(5);
        java.lang.String str43 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.lang.String str11 = properties8.getProperty("");
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj17 = properties5.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties14);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setConsoleFileName("");
        java.lang.String str27 = atomikosProperties22.getLogBaseName();
        long long28 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        boolean boolean32 = atomikosProperties22.isAllowSubTransactions();
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = properties5.getOrDefault((java.lang.Object) boolean32, obj33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        properties36.clear();
        boolean boolean43 = properties36.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties47.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties47.setConsoleLogLevel(atomikosLoggingLevel72);
        boolean boolean76 = properties36.replace((java.lang.Object) properties45, (java.lang.Object) atomikosProperties47, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet77 = properties45.keySet();
        boolean boolean78 = properties5.containsValue((java.lang.Object) properties45);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Set<java.lang.String> strSet80 = properties5.stringPropertyNames();
        java.io.Reader reader81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(reader81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strSet80);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        boolean boolean17 = atomikosProperties10.isSerialJtaTransactions();
        long long18 = atomikosProperties10.getDefaultJtaTimeout();
        java.lang.String str19 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setOutputDir("{{}=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval(86400000L);
        atomikosProperties10.setLogBaseDir("{10=#}");
        java.lang.String str21 = atomikosProperties10.getConsoleFileName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties9.entrySet();
        java.lang.Object obj14 = properties9.setProperty("tm.out", "hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        int int36 = atomikosProperties31.getConsoleFileCount();
        java.lang.Object obj37 = properties16.get((java.lang.Object) atomikosProperties31);
        long long38 = atomikosProperties31.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setConsoleFileName("");
        java.lang.String str44 = atomikosProperties39.getLogBaseName();
        long long45 = atomikosProperties39.getCheckpointInterval();
        atomikosProperties39.setForceShutdownOnVmExit(false);
        atomikosProperties39.setTransactionManagerUniqueName("tmlog");
        atomikosProperties39.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = atomikosProperties39.getRecovery();
        boolean boolean53 = atomikosProperties39.isSerialJtaTransactions();
        atomikosProperties39.setConsoleFileLimit(100);
        boolean boolean56 = properties1.replace((java.lang.Object) "tm.out", (java.lang.Object) atomikosProperties31, (java.lang.Object) 100);
        boolean boolean57 = atomikosProperties31.isEnableLogging();
        boolean boolean58 = atomikosProperties31.isEnableLogging();
        boolean boolean59 = atomikosProperties31.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(recovery52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        java.lang.String str5 = atomikosProperties0.getService();
        long long6 = atomikosProperties0.getMaxTimeout();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        java.lang.String str30 = atomikosProperties23.getLogBaseDir();
        atomikosProperties23.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties23.getConsoleLogLevel();
        boolean boolean34 = properties1.equals((java.lang.Object) atomikosProperties23);
        java.util.Set<java.lang.String> strSet35 = properties1.stringPropertyNames();
        java.io.InputStream inputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        boolean boolean17 = properties15.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.containsValue((java.lang.Object) properties15);
        int int20 = properties15.size();
        java.util.Set<java.lang.Object> objSet21 = properties15.keySet();
        java.io.Reader reader22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.load(reader22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties1.entrySet();
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream7, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEntrySet6);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setOutputDir("");
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        atomikosProperties43.setCheckpointInterval((long) (short) 1);
        boolean boolean58 = atomikosProperties43.isThreadedTwoPhaseCommit();
        java.lang.Object obj59 = properties38.remove((java.lang.Object) atomikosProperties43);
        properties38.clear();
        java.util.Set<java.lang.Object> objSet61 = properties38.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties38.entrySet();
        java.io.Writer writer63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.store(writer63, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objEntrySet62);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        boolean boolean26 = properties14.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        boolean boolean36 = properties14.contains((java.lang.Object) properties28);
        java.util.Set<java.lang.Object> objSet37 = properties28.keySet();
        java.lang.Object obj38 = properties1.getOrDefault((java.lang.Object) true, (java.lang.Object) properties28);
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setConsoleFileName("");
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = atomikosProperties40.asProperties();
        int int47 = atomikosProperties40.getConsoleFileCount();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int52 = recovery51.getMaxRetries();
        boolean boolean53 = properties49.containsKey((java.lang.Object) recovery51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties64.getConsoleLogLevel();
        int int69 = atomikosProperties64.getConsoleFileCount();
        java.lang.Object obj70 = properties49.get((java.lang.Object) atomikosProperties64);
        atomikosProperties64.setSerialJtaTransactions(true);
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Properties properties75 = new java.util.Properties(properties73);
        java.util.Enumeration<?> wildcardEnumeration76 = properties73.propertyNames();
        java.lang.Object obj77 = properties28.put((java.lang.Object) int47, (java.lang.Object) wildcardEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties0.keys();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        java.lang.String str68 = atomikosProperties64.getConsoleFileName();
        atomikosProperties64.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj71 = properties0.get((java.lang.Object) atomikosProperties64);
        java.util.Properties properties72 = new java.util.Properties(properties0);
        int int73 = properties72.size();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tm.out" + "'", str68, "tm.out");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        boolean boolean28 = atomikosProperties17.isSerialJtaTransactions();
        boolean boolean29 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean30 = atomikosProperties17.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setConsoleFileName("");
        java.lang.String str30 = atomikosProperties25.getLogBaseName();
        atomikosProperties25.setForceShutdownOnVmExit(true);
        boolean boolean33 = properties8.equals((java.lang.Object) true);
        java.lang.Object obj36 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tmlog");
        java.io.PrintStream printStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) 100);
        int int3 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) 50);
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        recovery0.setRetryInterval(10L);
        recovery0.setForgetOrphanedLogEntriesDelay(86400000L);
        recovery0.setRetryInterval(300000L);
        recovery0.setForgetOrphanedLogEntriesDelay(10L);
        recovery0.setMaxRetries(5);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj26 = properties14.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties23);
        java.lang.String str27 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setConsoleFileLimit(100);
        atomikosProperties23.setSerialJtaTransactions(true);
        atomikosProperties23.setAllowSubTransactions(false);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel36);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties13.getOutputDir();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        java.lang.String str29 = atomikosProperties20.getConsoleFileName();
        java.lang.String str30 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setDefaultJtaTimeout(0L);
        java.lang.Object obj33 = properties9.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties20);
        java.lang.String str35 = properties9.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties9.keys();
        boolean boolean37 = properties1.contains((java.lang.Object) properties9);
        java.util.Enumeration<?> wildcardEnumeration38 = properties1.propertyNames();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        boolean boolean53 = properties41.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean52);
        boolean boolean54 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties41.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        atomikosProperties56.setConsoleFileName("");
        java.lang.String str61 = atomikosProperties56.getLogBaseName();
        long long62 = atomikosProperties56.getCheckpointInterval();
        java.lang.String str63 = atomikosProperties56.getLogBaseDir();
        atomikosProperties56.setEnableLogging(true);
        java.lang.Object obj66 = properties39.putIfAbsent((java.lang.Object) objEnumeration55, (java.lang.Object) atomikosProperties56);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int71 = recovery70.getMaxRetries();
        boolean boolean72 = properties68.containsKey((java.lang.Object) recovery70);
        recovery70.setRetryInterval((long) (short) -1);
        recovery70.setDelay(10L);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        java.lang.Object obj80 = properties39.getOrDefault((java.lang.Object) recovery70, (java.lang.Object) properties78);
        recovery70.setForgetOrphanedLogEntriesDelay((long) (short) 0);
        java.lang.Object obj84 = properties1.put((java.lang.Object) (short) 0, (java.lang.Object) (-1L));
        boolean boolean86 = properties1.containsKey((java.lang.Object) 35L);
        java.io.PrintStream printStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 5 + "'", int71 == 5);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        boolean boolean13 = properties4.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties14.getConsoleLogLevel();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        properties29.clear();
        boolean boolean36 = properties29.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str45 = atomikosProperties40.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj64 = properties52.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties61.getConsoleLogLevel();
        atomikosProperties46.setConsoleLogLevel(atomikosLoggingLevel65);
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel65);
        boolean boolean69 = properties29.replace((java.lang.Object) properties38, (java.lang.Object) atomikosProperties40, (java.lang.Object) 10.0d);
        java.util.Properties properties70 = new java.util.Properties(properties29);
        boolean boolean71 = properties29.isEmpty();
        int int72 = properties29.size();
        java.lang.Object obj73 = properties4.replace((java.lang.Object) atomikosLoggingLevel27, (java.lang.Object) properties29);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        long long75 = atomikosProperties0.getCheckpointInterval();
        boolean boolean76 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean77 = atomikosProperties0.isSerialJtaTransactions();
        long long78 = atomikosProperties0.getMaxTimeout();
        long long79 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean80 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 500L + "'", long75 == 500L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10000L + "'", long79 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.lang.Object obj62 = properties45.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.String str68 = atomikosProperties63.getOutputDir();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        java.lang.Object obj70 = properties45.remove((java.lang.Object) properties69);
        boolean boolean71 = properties1.containsKey((java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setForceShutdownOnVmExit(true);
        boolean boolean79 = atomikosProperties72.isAllowSubTransactions();
        boolean boolean80 = properties45.equals((java.lang.Object) atomikosProperties72);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties45.elements();
        java.util.Collection<java.lang.Object> objCollection82 = properties45.values();
        java.util.Properties properties83 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str85 = atomikosProperties84.getLogBaseDir();
        atomikosProperties84.setLogBaseDir("");
        atomikosProperties84.setCheckpointInterval((long) 10);
        java.lang.Object obj90 = properties83.remove((java.lang.Object) atomikosProperties84);
        atomikosProperties84.setLogBaseName("tmlog");
        atomikosProperties84.setCheckpointInterval(10000L);
        atomikosProperties84.setConsoleFileLimit(50);
        long long97 = atomikosProperties84.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 10000L + "'", long97 == 10000L);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties8.getConsoleLogLevel();
        long long17 = atomikosProperties8.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        java.lang.String str16 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        atomikosProperties0.setService("{{}={}}");
        boolean boolean23 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        java.lang.String str8 = properties1.getProperty("{{}={}}");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        recovery11.setMaxRetries((int) ' ');
        recovery11.setDelay((long) 0);
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        recovery11.setDelay((long) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        boolean boolean33 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getConsoleFileName();
        long long42 = atomikosProperties34.getCheckpointInterval();
        java.lang.Object obj43 = properties19.remove((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setSerialJtaTransactions(true);
        java.lang.String str46 = atomikosProperties34.getTransactionManagerUniqueName();
        java.lang.Object obj47 = properties14.get((java.lang.Object) atomikosProperties34);
        boolean boolean48 = atomikosProperties34.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout(100L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties5.setConsoleLogLevel(atomikosLoggingLevel24);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel24);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setAllowSubTransactions(true);
        int int14 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setCheckpointInterval((long) 32);
        java.lang.String str19 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setAllowSubTransactions(true);
        int int7 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection5 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties6.isThreadedTwoPhaseCommit();
        java.lang.Object obj14 = null;
        java.lang.Object obj15 = properties1.getOrDefault((java.lang.Object) boolean13, obj14);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.lang.Object obj22 = properties19.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str23 = properties19.toString();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        recovery32.setForgetOrphanedLogEntriesDelay((-1L));
        recovery32.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean38 = properties25.remove((java.lang.Object) properties29, (java.lang.Object) (-1));
        boolean boolean39 = properties25.isEmpty();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.String str42 = properties25.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream44, "{{}=false}", "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{10=#}" + "'", str23, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.lang.String str5 = atomikosProperties0.getService();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(false);
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        boolean boolean31 = properties8.equals((java.lang.Object) atomikosProperties26);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties8.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        java.lang.String str34 = properties8.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        int int36 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setMaxRetries((-1));
        long long40 = recovery37.getRetryInterval();
        recovery37.setForgetOrphanedLogEntriesDelay(300000L);
        recovery37.setDelay((-1L));
        recovery37.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery37.setRetryInterval(100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        atomikosProperties49.setOutputDir("");
        java.lang.String str58 = atomikosProperties49.getConsoleFileName();
        java.lang.String str59 = atomikosProperties49.getLogBaseName();
        atomikosProperties49.setCheckpointInterval((long) (short) 100);
        boolean boolean62 = atomikosProperties49.isSerialJtaTransactions();
        boolean boolean63 = properties8.remove((java.lang.Object) recovery37, (java.lang.Object) atomikosProperties49);
        java.lang.String str65 = properties8.getProperty("tm.out");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) 1);
        java.lang.String str18 = atomikosProperties10.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties10.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(recovery19);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        int int20 = atomikosProperties0.getMaxActives();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        int int9 = properties1.size();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean14 = properties11.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet15 = properties11.keySet();
        java.lang.Object obj18 = properties11.setProperty("", "");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.lang.String str23 = properties20.getProperty("hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        recovery28.setRetryInterval((long) (short) -1);
        recovery28.setRetryInterval((long) 0);
        recovery28.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass37 = recovery28.getClass();
        java.lang.Object obj38 = properties20.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery28);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        java.lang.String str43 = properties40.getProperty("hi!");
        java.util.Set<java.lang.String> strSet44 = properties40.stringPropertyNames();
        java.lang.Object obj45 = new java.lang.Object();
        boolean boolean46 = properties11.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties40, obj45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getLogBaseDir();
        java.lang.Class<?> wildcardClass49 = atomikosProperties47.getClass();
        boolean boolean50 = properties1.remove(obj45, (java.lang.Object) wildcardClass49);
        java.lang.String str51 = properties1.toString();
        java.util.Properties properties52 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setRetryInterval((long) 100);
        int int56 = recovery53.getMaxRetries();
        long long57 = recovery53.getDelay();
        long long58 = recovery53.getDelay();
        recovery53.setForgetOrphanedLogEntriesDelay(0L);
        long long61 = recovery53.getRetryInterval();
        boolean boolean62 = properties1.contains((java.lang.Object) recovery53);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        boolean boolean65 = properties64.isEmpty();
        java.lang.String str67 = properties64.getProperty("hi!");
        boolean boolean69 = properties64.contains((java.lang.Object) 10.0f);
        boolean boolean70 = properties64.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        atomikosProperties71.setConsoleFileName("");
        java.lang.String str76 = atomikosProperties71.getLogBaseName();
        long long77 = atomikosProperties71.getCheckpointInterval();
        atomikosProperties71.setForceShutdownOnVmExit(false);
        int int80 = atomikosProperties71.getConsoleFileLimit();
        int int81 = atomikosProperties71.getConsoleFileCount();
        atomikosProperties71.setMaxActives((int) ' ');
        boolean boolean84 = properties64.containsValue((java.lang.Object) atomikosProperties71);
        boolean boolean85 = atomikosProperties71.isAllowSubTransactions();
        java.lang.String str86 = atomikosProperties71.getLogBaseName();
        java.lang.Object obj87 = properties1.remove((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties1.elements();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 100L + "'", long61 == 100L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "tmlog" + "'", str86, "tmlog");
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(objEnumeration88);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        boolean boolean35 = properties30.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet36 = properties30.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getMaxActives();
        boolean boolean39 = properties30.equals((java.lang.Object) atomikosProperties37);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.String str42 = atomikosProperties37.getLogBaseDir();
        boolean boolean43 = properties4.equals((java.lang.Object) str42);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream44, "hi!", "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("tm.out");
        boolean boolean16 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str17 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setConsoleFileName("");
        boolean boolean23 = atomikosProperties18.isEnableLogging();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        int int26 = atomikosProperties18.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setLogBaseDir("");
        atomikosProperties51.setForceShutdownOnVmExit(false);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.lang.String str63 = properties60.getProperty("");
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj69 = properties57.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties66);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.lang.Object obj74 = properties57.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str76 = atomikosProperties75.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = atomikosProperties75.getRecovery();
        atomikosProperties75.setEnableLogging(false);
        boolean boolean80 = properties57.equals((java.lang.Object) atomikosProperties75);
        int int81 = atomikosProperties75.getConsoleFileCount();
        atomikosProperties75.setService("tm.out");
        atomikosProperties75.setConsoleFileLimit((int) (short) 10);
        boolean boolean86 = atomikosProperties75.isAllowSubTransactions();
        atomikosProperties75.setThreadedTwoPhaseCommit(false);
        boolean boolean89 = atomikosProperties75.isAllowSubTransactions();
        java.lang.Object obj90 = properties25.putIfAbsent((java.lang.Object) false, (java.lang.Object) atomikosProperties75);
        atomikosProperties75.setThreadedTwoPhaseCommit(false);
        long long93 = atomikosProperties75.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(recovery77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        boolean boolean7 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties8.getLogBaseName();
        long long14 = atomikosProperties8.getCheckpointInterval();
        atomikosProperties8.setForceShutdownOnVmExit(false);
        int int17 = atomikosProperties8.getConsoleFileLimit();
        int int18 = atomikosProperties8.getConsoleFileCount();
        atomikosProperties8.setMaxActives((int) ' ');
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties8);
        boolean boolean22 = atomikosProperties8.isAllowSubTransactions();
        atomikosProperties8.setConsoleFileName("tm.out");
        int int25 = atomikosProperties8.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setService("{10=#}");
        atomikosProperties0.setConsoleFileLimit((int) (short) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        recovery18.setDelay((long) 50);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setConsoleFileName("tmlog");
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        boolean boolean18 = properties17.isEmpty();
        properties17.clear();
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        recovery31.setRetryInterval((long) (short) -1);
        recovery31.setDelay(10L);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.lang.Object obj41 = properties0.getOrDefault((java.lang.Object) recovery31, (java.lang.Object) properties39);
        recovery31.setMaxRetries((int) (short) -1);
        recovery31.setRetryInterval(10L);
        recovery31.setMaxRetries((int) (byte) 100);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.lang.String str23 = properties20.getProperty("hi!");
        boolean boolean25 = properties20.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet26 = properties20.keySet();
        boolean boolean27 = properties1.contains((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setOutputDir("");
        java.lang.String str37 = atomikosProperties28.getConsoleFileName();
        java.lang.String str38 = atomikosProperties28.getLogBaseName();
        atomikosProperties28.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        boolean boolean45 = properties43.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.keys();
        boolean boolean47 = properties41.containsValue((java.lang.Object) properties43);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        boolean boolean52 = properties49.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet53 = properties49.keySet();
        java.lang.Object obj56 = properties49.setProperty("", "");
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        boolean boolean62 = properties58.containsKey((java.lang.Object) recovery60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties73.getConsoleLogLevel();
        int int78 = atomikosProperties73.getConsoleFileCount();
        java.lang.Object obj79 = properties58.get((java.lang.Object) atomikosProperties73);
        atomikosProperties73.setConsoleFileName("");
        int int82 = atomikosProperties73.getConsoleFileCount();
        atomikosProperties73.setConsoleFileName("");
        boolean boolean85 = properties1.replace((java.lang.Object) properties43, (java.lang.Object) "", (java.lang.Object) atomikosProperties73);
        java.lang.String str86 = properties43.toString();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{}" + "'", str86, "{}");
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj55 = properties43.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties52.getConsoleLogLevel();
        java.lang.String str59 = atomikosProperties52.getTransactionManagerUniqueName();
        atomikosProperties52.setOutputDir("{10=#}");
        long long62 = atomikosProperties52.getDefaultJtaTimeout();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj81 = properties64.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties82.getRecovery();
        atomikosProperties82.setEnableLogging(false);
        boolean boolean87 = properties64.equals((java.lang.Object) atomikosProperties82);
        java.util.Set<java.lang.String> strSet88 = properties64.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery89 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery89.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        boolean boolean92 = properties1.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) properties64, (java.lang.Object) recovery89);
        properties64.clear();
        java.util.Set<java.lang.Object> objSet94 = properties64.keySet();
        java.io.OutputStream outputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.store(outputStream95, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objSet94);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setConsoleFileLimit(1);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileCount(0);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setMaxTimeout((long) 'a');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount(0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        java.lang.String str12 = atomikosProperties0.getConsoleFileName();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("{=}");
        atomikosProperties0.setMaxActives(32);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setConsoleFileName("");
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = atomikosProperties15.asProperties();
        long long22 = atomikosProperties15.getDefaultJtaTimeout();
        atomikosProperties15.setLogBaseDir("tm.out");
        long long25 = atomikosProperties15.getMaxTimeout();
        java.lang.String str26 = atomikosProperties15.getLogBaseName();
        boolean boolean27 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setLogBaseDir("{{}=}");
        atomikosProperties15.setConsoleFileLimit(100);
        long long32 = atomikosProperties15.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties1.get((java.lang.Object) long32);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setService("");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setMaxRetries((-1));
        long long56 = recovery53.getRetryInterval();
        java.lang.Object obj57 = properties1.replace((java.lang.Object) 5, (java.lang.Object) long56);
        java.lang.Object obj58 = properties1.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery60.setMaxRetries((-1));
        java.lang.Object obj63 = properties1.remove((java.lang.Object) (-1));
        java.lang.String str64 = properties1.toString();
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        java.lang.String str73 = properties70.getProperty("");
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj79 = properties67.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties76);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties76.getConsoleLogLevel();
        atomikosProperties76.setConsoleFileLimit((int) '4');
        atomikosProperties76.setForceShutdownOnVmExit(true);
        int int85 = atomikosProperties76.getMaxActives();
        boolean boolean86 = properties65.contains((java.lang.Object) int85);
        java.lang.String str87 = properties65.toString();
        java.lang.Object obj90 = properties65.setProperty("{}", "tmlog");
        java.util.Set<java.lang.String> strSet91 = properties65.stringPropertyNames();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.io.OutputStream outputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream93, "", "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 50 + "'", int85 == 50);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(strSet91);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.lang.Object obj11 = properties1.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        java.lang.String str14 = atomikosProperties12.getLogBaseDir();
        long long15 = atomikosProperties12.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties12.getLogBaseDir();
        boolean boolean17 = atomikosProperties12.isThreadedTwoPhaseCommit();
        boolean boolean18 = properties1.containsValue((java.lang.Object) atomikosProperties12);
        java.lang.String str21 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties54.entrySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEntrySet85);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.String str12 = properties8.toString();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties14.entrySet();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) "hi!", obj18);
        boolean boolean21 = properties14.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties14.keys();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        boolean boolean36 = properties24.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean35);
        properties24.clear();
        int int38 = properties24.size();
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.lang.Object obj40 = properties8.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties24);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.lang.Object obj59 = properties42.clone();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        java.lang.String str64 = properties61.getProperty("hi!");
        boolean boolean66 = properties61.contains((java.lang.Object) 10.0f);
        java.lang.Object obj67 = properties14.replace(obj59, (java.lang.Object) properties61);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Properties properties69 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.keys();
        java.lang.String str71 = properties69.toString();
        java.io.Reader reader72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.load(reader72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        java.lang.String str27 = properties24.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet28 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties34.entrySet();
        java.lang.Object obj38 = properties24.getOrDefault((java.lang.Object) properties31, (java.lang.Object) objEntrySet37);
        boolean boolean39 = properties20.containsKey((java.lang.Object) objEntrySet37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.lang.Object obj46 = properties43.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet47 = properties43.keySet();
        java.lang.Object obj48 = properties1.put((java.lang.Object) objEntrySet37, (java.lang.Object) objSet47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getLogBaseDir();
        java.lang.String str51 = atomikosProperties49.getLogBaseDir();
        boolean boolean52 = atomikosProperties49.isAllowSubTransactions();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        atomikosProperties49.setService("");
        int int56 = atomikosProperties49.getConsoleFileCount();
        boolean boolean57 = atomikosProperties49.isThreadedTwoPhaseCommit();
        boolean boolean58 = properties1.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setMaxActives(10);
        java.util.Properties properties61 = atomikosProperties49.asProperties();
        int int62 = properties61.size();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(obj38);
// flaky:         org.junit.Assert.assertEquals(obj38.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 19 + "'", int62 == 19);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout(35L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setOutputDir("");
        java.lang.String str26 = atomikosProperties17.getConsoleFileName();
        java.lang.String str27 = atomikosProperties17.getLogBaseName();
        atomikosProperties17.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties17.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel30);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.lang.String str8 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setForceShutdownOnVmExit(true);
        java.lang.String str16 = atomikosProperties9.getTransactionManagerUniqueName();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection21 = properties18.values();
        java.lang.String str22 = properties18.toString();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties24.entrySet();
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        long long34 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setEnableLogging(true);
        long long38 = atomikosProperties28.getDefaultJtaTimeout();
        boolean boolean39 = atomikosProperties28.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setTransactionManagerUniqueName("{}");
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<?> wildcardEnumeration57 = properties49.propertyNames();
        boolean boolean58 = properties44.containsValue((java.lang.Object) wildcardEnumeration57);
        java.lang.Object obj59 = properties24.put((java.lang.Object) atomikosProperties28, (java.lang.Object) properties44);
        java.lang.Object obj60 = properties24.clone();
        java.lang.Object obj61 = properties18.get((java.lang.Object) properties24);
        java.util.Enumeration<?> wildcardEnumeration62 = properties18.propertyNames();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        boolean boolean65 = properties64.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties64.elements();
        boolean boolean67 = properties18.equals((java.lang.Object) properties64);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int72 = recovery71.getMaxRetries();
        boolean boolean73 = properties69.containsKey((java.lang.Object) recovery71);
        recovery71.setRetryInterval((long) (short) -1);
        recovery71.setRetryInterval((long) 0);
        recovery71.setMaxRetries((int) (byte) 10);
        long long80 = recovery71.getDelay();
        recovery71.setRetryInterval(0L);
        long long83 = recovery71.getRetryInterval();
        boolean boolean84 = properties18.contains((java.lang.Object) recovery71);
        java.lang.Object obj85 = properties1.getOrDefault((java.lang.Object) atomikosProperties9, (java.lang.Object) recovery71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        long long2 = recovery0.getDelay();
        int int3 = recovery0.getMaxRetries();
        long long4 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setMaxTimeout(300000L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties17.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setMaxActives((int) 'a');
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.lang.String str49 = properties42.toString();
        java.io.Reader reader50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.load(reader50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Object obj13 = properties8.replace((java.lang.Object) "hi!", obj12);
        boolean boolean15 = properties8.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties8.keys();
        boolean boolean17 = properties3.containsKey((java.lang.Object) objEnumeration16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties19.entrySet();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Object obj24 = properties19.replace((java.lang.Object) "hi!", obj23);
        boolean boolean26 = properties19.equals((java.lang.Object) 1.0f);
        java.util.Properties properties27 = new java.util.Properties(properties19);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        int int49 = atomikosProperties44.getConsoleFileCount();
        java.lang.Object obj50 = properties29.get((java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setConsoleFileName("");
        java.lang.String str56 = atomikosProperties51.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = atomikosProperties72.getConsoleLogLevel();
        atomikosProperties57.setConsoleLogLevel(atomikosLoggingLevel76);
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel76);
        atomikosProperties51.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery81.setMaxRetries((-1));
        long long84 = recovery81.getRetryInterval();
        java.lang.Object obj85 = properties29.replace((java.lang.Object) 5, (java.lang.Object) long84);
        java.lang.Object obj86 = properties29.clone();
        boolean boolean87 = properties27.contains((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str89 = atomikosProperties88.getLogBaseDir();
        java.lang.String str90 = atomikosProperties88.getLogBaseDir();
        int int91 = atomikosProperties88.getConsoleFileCount();
        boolean boolean92 = properties29.contains((java.lang.Object) atomikosProperties88);
        java.lang.Object obj93 = properties3.get((java.lang.Object) properties29);
        boolean boolean94 = properties3.isEmpty();
        int int95 = properties3.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel76 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel76.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setMaxRetries((int) (byte) 10);
        recovery0.setDelay(10L);
        recovery0.setMaxRetries(35);
        long long10 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setConsoleFileName("");
        java.lang.String str23 = atomikosProperties18.getLogBaseName();
        long long24 = atomikosProperties18.getCheckpointInterval();
        atomikosProperties18.setForceShutdownOnVmExit(false);
        java.util.Properties properties27 = atomikosProperties18.asProperties();
        boolean boolean28 = atomikosProperties18.isAllowSubTransactions();
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = properties1.getOrDefault((java.lang.Object) boolean28, obj29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        properties32.clear();
        boolean boolean39 = properties32.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties49.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel68);
        boolean boolean72 = properties32.replace((java.lang.Object) properties41, (java.lang.Object) atomikosProperties43, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet73 = properties41.keySet();
        boolean boolean74 = properties1.containsValue((java.lang.Object) properties41);
        java.util.Set<java.lang.Object> objSet75 = properties41.keySet();
        java.io.OutputStream outputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.save(outputStream76, "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objSet75);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getConsoleFileCount();
        int int14 = atomikosProperties0.getMaxActives();
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseName("{=}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long25 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setLogBaseName("");
        java.lang.String str28 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setSerialJtaTransactions(true);
        atomikosProperties16.setEnableLogging(false);
        boolean boolean33 = atomikosProperties16.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setMaxTimeout(300000L);
        atomikosProperties4.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setMaxTimeout((long) (byte) -1);
        boolean boolean25 = properties1.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties16);
        java.lang.String str26 = properties1.toString();
        properties1.clear();
        boolean boolean28 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj23 = properties1.setProperty("hi!", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        java.lang.String str29 = atomikosProperties24.getOutputDir();
        java.lang.String str30 = atomikosProperties24.getTransactionManagerUniqueName();
        atomikosProperties24.setCheckpointInterval((long) 'a');
        atomikosProperties24.setMaxActives(100);
        java.util.Properties properties35 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties24.getConsoleLogLevel();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        boolean boolean51 = properties39.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean50);
        boolean boolean52 = properties39.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setConsoleFileName("");
        java.lang.String str59 = atomikosProperties54.getLogBaseName();
        long long60 = atomikosProperties54.getCheckpointInterval();
        java.lang.String str61 = atomikosProperties54.getLogBaseDir();
        atomikosProperties54.setEnableLogging(true);
        java.lang.Object obj64 = properties37.putIfAbsent((java.lang.Object) objEnumeration53, (java.lang.Object) atomikosProperties54);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties37.keys();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        boolean boolean68 = properties67.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery69 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int70 = recovery69.getMaxRetries();
        boolean boolean71 = properties67.containsKey((java.lang.Object) recovery69);
        properties67.clear();
        java.util.Properties properties73 = new java.util.Properties(properties67);
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        java.util.Set<java.lang.String> strSet75 = properties73.stringPropertyNames();
        java.util.Properties properties76 = new java.util.Properties(properties73);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties76.entrySet();
        java.lang.Object obj78 = properties1.putIfAbsent((java.lang.Object) atomikosLoggingLevel36, (java.lang.Object) properties76);
        properties1.clear();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setConsoleFileName("{{}=}");
        atomikosProperties10.setDefaultJtaTimeout((long) 0);
        atomikosProperties10.setTransactionManagerUniqueName("{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) 52);
        long long9 = atomikosProperties0.getMaxTimeout();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean58 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.String str59 = atomikosProperties53.getService();
        boolean boolean60 = properties38.containsKey((java.lang.Object) atomikosProperties53);
        java.util.Collection<java.lang.Object> objCollection61 = properties38.values();
        int int62 = properties38.size();
        java.io.PrintWriter printWriter63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.list(printWriter63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setLogBaseDir("{10=#}");
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str18 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        boolean boolean28 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setCheckpointInterval((long) ' ');
        long long31 = atomikosProperties17.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        long long42 = atomikosProperties32.getDefaultJtaTimeout();
        boolean boolean43 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties32.getOutputDir();
        atomikosProperties32.setTransactionManagerUniqueName("{}");
        java.lang.String str47 = atomikosProperties32.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setForceShutdownOnVmExit(true);
        atomikosProperties48.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties48.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties48.getConsoleLogLevel();
        atomikosProperties32.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties17.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties17.setConsoleFileCount((int) (byte) 0);
        boolean boolean65 = atomikosProperties17.isEnableLogging();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setMaxRetries((-1));
        long long56 = recovery53.getRetryInterval();
        java.lang.Object obj57 = properties1.replace((java.lang.Object) 5, (java.lang.Object) long56);
        java.lang.Object obj58 = properties1.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties1.entrySet();
        java.util.Enumeration<?> wildcardEnumeration60 = properties1.propertyNames();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.lang.String str68 = properties65.getProperty("");
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        boolean boolean73 = properties72.isEmpty();
        boolean boolean74 = properties62.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean73);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties79.elements();
        java.lang.String str82 = properties79.getProperty("");
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        boolean boolean84 = properties62.contains((java.lang.Object) properties76);
        properties62.clear();
        properties62.clear();
        java.lang.Object obj87 = properties1.remove((java.lang.Object) properties62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties1.keys();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        int int32 = atomikosProperties27.getConsoleFileLimit();
        atomikosProperties27.setDefaultJtaTimeout((long) (short) 0);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.lang.String str42 = properties39.getProperty("");
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj48 = properties36.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties36);
        java.lang.Object obj50 = properties1.putIfAbsent((java.lang.Object) atomikosProperties27, (java.lang.Object) properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties36.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.String str55 = atomikosProperties52.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties52.getRecovery();
        long long57 = atomikosProperties52.getCheckpointInterval();
        java.lang.Object obj58 = properties36.get((java.lang.Object) long57);
        int int59 = properties36.size();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        boolean boolean23 = properties20.contains((java.lang.Object) 1L);
        boolean boolean24 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setConsoleFileName("");
        java.lang.String str30 = atomikosProperties25.getLogBaseName();
        long long31 = atomikosProperties25.getCheckpointInterval();
        java.lang.String str32 = atomikosProperties25.getLogBaseDir();
        atomikosProperties25.setEnableLogging(true);
        long long35 = atomikosProperties25.getDefaultJtaTimeout();
        boolean boolean36 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties25.getOutputDir();
        java.lang.String str38 = atomikosProperties25.getOutputDir();
        java.util.Properties properties39 = atomikosProperties25.asProperties();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.lang.String str44 = properties41.getProperty("hi!");
        boolean boolean46 = properties41.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet47 = properties41.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        boolean boolean50 = properties41.equals((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setSerialJtaTransactions(false);
        int int53 = atomikosProperties48.getMaxActives();
        boolean boolean54 = atomikosProperties48.isEnableLogging();
        java.lang.String str55 = atomikosProperties48.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties48.getRecovery();
        boolean boolean57 = properties20.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) recovery56);
        java.lang.String str58 = atomikosProperties25.getConsoleFileName();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        boolean boolean61 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties60.entrySet();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Object obj65 = properties60.replace((java.lang.Object) "hi!", obj64);
        boolean boolean67 = properties60.equals((java.lang.Object) 1.0f);
        java.util.Properties properties68 = new java.util.Properties(properties60);
        properties60.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.util.Properties properties71 = new java.util.Properties(properties60);
        java.lang.String str73 = properties71.getProperty("tmlog");
        java.lang.Object obj74 = properties0.getOrDefault((java.lang.Object) atomikosProperties25, (java.lang.Object) "tmlog");
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream75, "{{}={}}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 50 + "'", int53 == 50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "tmlog" + "'", obj74, "tmlog");
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setDelay((long) (short) 10);
        long long11 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) -1);
        int int14 = recovery0.getMaxRetries();
        long long15 = recovery0.getDelay();
        recovery0.setRetryInterval((long) (short) 10);
        recovery0.setMaxRetries(1);
        recovery0.setRetryInterval((long) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean24 = properties12.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean23);
        boolean boolean25 = properties12.isEmpty();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        boolean boolean30 = properties27.containsKey((java.lang.Object) 10.0f);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.String str32 = properties12.toString();
        java.lang.String str34 = properties12.getProperty("hi!");
        boolean boolean35 = properties12.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties37.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.keys();
        int int41 = properties37.size();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.String str46 = properties9.getProperty("{[]=WARN}", "{{}=false}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{{}=false}" + "'", str46, "{{}=false}");
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int14 = recovery13.getMaxRetries();
        boolean boolean15 = properties11.containsKey((java.lang.Object) recovery13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties26.getConsoleLogLevel();
        int int31 = atomikosProperties26.getConsoleFileCount();
        java.lang.Object obj32 = properties11.get((java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties33.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery63 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery63.setMaxRetries((-1));
        long long66 = recovery63.getRetryInterval();
        java.lang.Object obj67 = properties11.replace((java.lang.Object) 5, (java.lang.Object) long66);
        java.lang.Object obj68 = properties11.clone();
        boolean boolean69 = properties9.contains((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection70 = properties9.values();
        java.lang.Object obj71 = properties9.clone();
        java.io.PrintStream printStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        atomikosProperties18.setMaxTimeout((long) 'a');
        int int30 = atomikosProperties18.getConsoleFileLimit();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        recovery34.setRetryInterval((long) (short) -1);
        recovery34.setRetryInterval((long) 0);
        recovery34.setMaxRetries((int) (byte) 10);
        recovery34.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery34.setMaxRetries(52);
        long long47 = recovery34.getRetryInterval();
        recovery34.setDelay((long) (short) -1);
        java.lang.Object obj50 = properties17.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) recovery34);
        java.lang.String str51 = atomikosProperties18.getLogBaseName();
        atomikosProperties18.setConsoleFileCount((int) 'a');
        atomikosProperties18.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj45 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = atomikosProperties46.getRecovery();
        atomikosProperties46.setEnableLogging(false);
        boolean boolean51 = properties28.equals((java.lang.Object) atomikosProperties46);
        boolean boolean52 = properties25.contains((java.lang.Object) atomikosProperties46);
        atomikosProperties46.setCheckpointInterval((long) (short) -1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(recovery48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout((long) (-1));
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setConsoleFileCount((int) (byte) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setConsoleFileCount(1);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setAllowSubTransactions(false);
        atomikosProperties20.setLogBaseName("{10=#}");
        java.lang.Object obj32 = properties1.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) "{10=#}");
        boolean boolean34 = properties1.containsKey((java.lang.Object) (byte) -1);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties51.getConsoleLogLevel();
        int int56 = atomikosProperties51.getConsoleFileCount();
        java.lang.Object obj57 = properties36.get((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setSerialJtaTransactions(true);
        java.util.Properties properties60 = atomikosProperties51.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream62, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(properties60);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties21.setConsoleFileLimit((int) '4');
        atomikosProperties21.setMaxActives((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        java.lang.String str34 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setLogBaseDir("");
        atomikosProperties20.setForceShutdownOnVmExit(false);
        long long25 = atomikosProperties20.getCheckpointInterval();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj32 = properties29.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setLogBaseDir("");
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        boolean boolean39 = atomikosProperties33.isThreadedTwoPhaseCommit();
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.String str41 = atomikosProperties33.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.String str47 = atomikosProperties42.getOutputDir();
        java.lang.String str48 = atomikosProperties42.getTransactionManagerUniqueName();
        int int49 = atomikosProperties42.getConsoleFileCount();
        java.lang.String str50 = atomikosProperties42.getLogBaseDir();
        java.lang.String str51 = atomikosProperties42.getConsoleFileName();
        java.lang.Object obj52 = properties29.putIfAbsent((java.lang.Object) str41, (java.lang.Object) atomikosProperties42);
        java.lang.Object obj53 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setConsoleFileName("");
        long long59 = atomikosProperties54.getMaxTimeout();
        java.util.Properties properties60 = atomikosProperties54.asProperties();
        long long61 = atomikosProperties54.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties54.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties42.setConsoleLogLevel(atomikosLoggingLevel63);
        java.lang.String str65 = atomikosProperties42.getLogBaseName();
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        boolean boolean12 = properties8.containsKey((java.lang.Object) recovery10);
        properties8.clear();
        java.util.Properties properties14 = new java.util.Properties(properties8);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties16.isEmpty();
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.lang.String str25 = atomikosProperties20.getOutputDir();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setOutputDir("");
        java.lang.String str36 = atomikosProperties27.getConsoleFileName();
        java.lang.String str37 = atomikosProperties27.getLogBaseName();
        atomikosProperties27.setDefaultJtaTimeout(0L);
        java.lang.Object obj40 = properties16.putIfAbsent((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str42 = properties16.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties16.keys();
        boolean boolean44 = properties8.contains((java.lang.Object) properties16);
        java.util.Properties properties45 = new java.util.Properties(properties8);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties47.getOutputDir();
        java.lang.String str53 = atomikosProperties47.getTransactionManagerUniqueName();
        int int54 = atomikosProperties47.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setConsoleFileName("");
        long long60 = atomikosProperties55.getMaxTimeout();
        java.util.Properties properties61 = atomikosProperties55.asProperties();
        long long62 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties55.getConsoleLogLevel();
        atomikosProperties47.setConsoleLogLevel(atomikosLoggingLevel63);
        int int65 = atomikosProperties47.getMaxActives();
        java.lang.Object obj66 = properties45.remove((java.lang.Object) atomikosProperties47);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties45.elements();
        java.util.Properties properties68 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setCheckpointInterval((long) (byte) -1);
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        atomikosProperties69.setSerialJtaTransactions(false);
        atomikosProperties69.setOutputDir("");
        java.lang.String str78 = atomikosProperties69.getConsoleFileName();
        java.lang.String str79 = atomikosProperties69.getLogBaseName();
        atomikosProperties69.setEnableLogging(false);
        long long82 = atomikosProperties69.getCheckpointInterval();
        java.util.Properties properties83 = atomikosProperties69.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties83.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setCheckpointInterval((long) (byte) -1);
        atomikosProperties85.setConsoleFileName("");
        java.lang.String str90 = atomikosProperties85.getLogBaseName();
        long long91 = atomikosProperties85.getCheckpointInterval();
        java.lang.String str92 = atomikosProperties85.getLogBaseDir();
        long long93 = atomikosProperties85.getDefaultJtaTimeout();
        java.lang.Class<?> wildcardClass94 = atomikosProperties85.getClass();
        java.lang.Object obj95 = properties68.put((java.lang.Object) objEnumeration84, (java.lang.Object) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setLogBaseDir("tm.out");
        int int9 = atomikosProperties0.getConsoleFileCount();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setEnableLogging(true);
        atomikosProperties8.setConsoleFileLimit(32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 5);
        atomikosProperties0.setDefaultJtaTimeout(500L);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setMaxRetries((int) (byte) 10);
        recovery3.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery3.setMaxRetries(52);
        long long16 = recovery3.getRetryInterval();
        recovery3.setDelay((long) (short) -1);
        long long19 = recovery3.getForgetOrphanedLogEntriesDelay();
        recovery3.setDelay((long) (byte) 10);
        recovery3.setForgetOrphanedLogEntriesDelay((long) '4');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        java.lang.Object obj51 = properties1.clone();
        java.lang.String str53 = properties1.getProperty("");
        java.util.Set<java.lang.String> strSet54 = properties1.stringPropertyNames();
        java.util.Set<java.lang.String> strSet55 = properties1.stringPropertyNames();
        java.lang.String str57 = properties1.getProperty("{{}=false}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        boolean boolean41 = properties29.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean40);
        boolean boolean42 = properties29.isEmpty();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Set<java.lang.Object> objSet49 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setOutputDir("");
        java.lang.String str59 = atomikosProperties50.getConsoleFileName();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties50.getConsoleLogLevel();
        java.lang.Object obj64 = properties27.putIfAbsent((java.lang.Object) objSet49, (java.lang.Object) atomikosLoggingLevel63);
        java.util.Set<java.lang.String> strSet65 = properties27.stringPropertyNames();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        java.lang.String str73 = properties70.getProperty("");
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj79 = properties67.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setAllowSubTransactions(false);
        atomikosProperties76.setService("tm.out");
        int int84 = atomikosProperties76.getMaxActives();
        boolean boolean85 = properties27.containsValue((java.lang.Object) atomikosProperties76);
        atomikosProperties76.setAllowSubTransactions(true);
        boolean boolean88 = atomikosProperties76.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 50 + "'", int84 == 50);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.lang.Object obj9 = properties1.setProperty("", "tmlog");
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean24 = properties12.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean23);
        boolean boolean25 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties12.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setConsoleFileName("");
        java.lang.String str32 = atomikosProperties27.getLogBaseName();
        long long33 = atomikosProperties27.getCheckpointInterval();
        java.lang.String str34 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.setEnableLogging(true);
        java.lang.Object obj37 = properties10.putIfAbsent((java.lang.Object) objEnumeration26, (java.lang.Object) atomikosProperties27);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties10.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties10.entrySet();
        boolean boolean40 = properties1.containsKey((java.lang.Object) objEntrySet39);
        java.lang.String str42 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = atomikosProperties43.getRecovery();
        atomikosProperties43.setEnableLogging(false);
        long long48 = atomikosProperties43.getMaxTimeout();
        atomikosProperties43.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties43.setLogBaseDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties43.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties43.getRecovery();
        java.lang.Object obj55 = properties1.get((java.lang.Object) recovery54);
        properties1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(recovery45);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = properties6.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties6.entrySet();
        java.util.Properties properties10 = new java.util.Properties(properties6);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        java.lang.String str15 = properties12.getProperty("hi!");
        boolean boolean17 = properties12.contains((java.lang.Object) 10.0f);
        boolean boolean18 = properties12.isEmpty();
        java.util.Collection<java.lang.Object> objCollection19 = properties12.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery20.setRetryInterval((long) 100);
        recovery20.setDelay((long) 50);
        recovery20.setDelay(300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery27.setRetryInterval((long) 100);
        int int30 = recovery27.getMaxRetries();
        recovery27.setDelay((long) (short) 100);
        recovery27.setDelay((long) (byte) 1);
        boolean boolean35 = properties12.remove((java.lang.Object) recovery20, (java.lang.Object) recovery27);
        java.util.Enumeration<?> wildcardEnumeration36 = properties12.propertyNames();
        java.util.Set<java.lang.Object> objSet37 = properties12.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setOutputDir("");
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setEnableLogging(false);
        atomikosProperties38.setEnableLogging(false);
        boolean boolean53 = atomikosProperties38.isAllowSubTransactions();
        int int54 = atomikosProperties38.getConsoleFileCount();
        java.lang.Object obj55 = properties10.putIfAbsent((java.lang.Object) properties12, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setTransactionManagerUniqueName("{tm.out=hi!}");
        boolean boolean58 = atomikosProperties38.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.lang.String str26 = properties25.toString();
        java.lang.Object obj27 = properties25.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        java.lang.String str31 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setMaxTimeout(0L);
        long long34 = atomikosProperties28.getCheckpointInterval();
        boolean boolean35 = properties25.containsKey((java.lang.Object) long34);
        boolean boolean36 = properties25.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals(obj27.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        int int6 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) '#');
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        long long9 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long12 = recovery0.getDelay();
        recovery0.setDelay(0L);
        recovery0.setForgetOrphanedLogEntriesDelay(5L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        long long28 = atomikosProperties19.getMaxTimeout();
        int int29 = atomikosProperties19.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties19.getRecovery();
        atomikosProperties19.setMaxActives(32);
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties35 = atomikosProperties19.asProperties();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertNotNull(properties35);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        long long29 = atomikosProperties19.getMaxTimeout();
        boolean boolean30 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setForceShutdownOnVmExit(false);
        long long33 = atomikosProperties19.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        atomikosProperties34.setForceShutdownOnVmExit(false);
        atomikosProperties34.setTransactionManagerUniqueName("tmlog");
        boolean boolean45 = atomikosProperties34.isEnableLogging();
        boolean boolean46 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setForceShutdownOnVmExit(false);
        boolean boolean49 = atomikosProperties34.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties34.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel50);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Collection<java.lang.Object> objCollection36 = properties31.values();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.elements();
        boolean boolean38 = properties1.contains((java.lang.Object) objEnumeration37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = atomikosProperties39.getRecovery();
        java.lang.Object obj47 = properties1.remove((java.lang.Object) recovery46);
        recovery46.setMaxRetries((int) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(recovery46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        int int3 = recovery2.getMaxRetries();
        recovery2.setMaxRetries((int) (short) 0);
        long long6 = recovery2.getRetryInterval();
        recovery2.setDelay(5L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setOutputDir("{10=#}");
        int int20 = atomikosProperties10.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties21.getService();
        java.lang.String str27 = atomikosProperties21.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel28);
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.lang.String str16 = properties1.getProperty("");
        java.util.Set<java.lang.Object> objSet17 = properties1.keySet();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream18, "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(objSet17);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval((long) 100);
        int int18 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        long long4 = atomikosProperties0.getCheckpointInterval();
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        long long52 = atomikosProperties40.getCheckpointInterval();
        atomikosProperties40.setOutputDir("");
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties40.setConsoleFileLimit((int) (short) -1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        java.lang.String str5 = atomikosProperties0.getService();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel7);
        long long9 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives(0);
        int int8 = atomikosProperties0.getConsoleFileCount();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxActives((int) (short) 100);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.setRetryInterval((long) (byte) 0);
        recovery7.setForgetOrphanedLogEntriesDelay((long) 19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        java.lang.String str45 = atomikosProperties43.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setSerialJtaTransactions(false);
        int int63 = atomikosProperties57.getConsoleFileCount();
        int int64 = atomikosProperties57.getConsoleFileLimit();
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        atomikosProperties57.setService("tmlog");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.lang.String str72 = properties69.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet73 = properties69.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties42.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) "tmlog", (java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        java.lang.String str80 = atomikosProperties76.getOutputDir();
        boolean boolean81 = properties69.containsValue((java.lang.Object) atomikosProperties76);
        java.util.Collection<java.lang.Object> objCollection82 = properties69.values();
        java.lang.Object obj85 = properties69.setProperty("{10=#}", "");
        java.io.Reader reader86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.load(reader86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleFileCount(5);
        atomikosProperties0.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setLogBaseDir("");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties32.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        long long69 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long16 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.lang.String str24 = properties21.getProperty("");
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        boolean boolean30 = properties18.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean29);
        boolean boolean31 = properties18.isEmpty();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        boolean boolean35 = properties18.contains((java.lang.Object) objEnumeration34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        java.lang.String str42 = atomikosProperties39.getLogBaseDir();
        atomikosProperties39.setSerialJtaTransactions(true);
        long long45 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties47.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties47.entrySet();
        boolean boolean51 = properties37.remove((java.lang.Object) atomikosProperties39, (java.lang.Object) objEntrySet50);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        long long59 = atomikosProperties53.getCheckpointInterval();
        java.lang.String str60 = atomikosProperties53.getLogBaseDir();
        atomikosProperties53.setEnableLogging(true);
        atomikosProperties53.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setForceShutdownOnVmExit(true);
        atomikosProperties65.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel74 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        atomikosProperties76.setConsoleFileName("");
        java.lang.String str81 = atomikosProperties76.getLogBaseName();
        long long82 = atomikosProperties76.getCheckpointInterval();
        java.lang.String str83 = atomikosProperties76.getConsoleFileName();
        atomikosProperties76.setForceShutdownOnVmExit(false);
        atomikosProperties76.setConsoleFileName("tmlog");
        boolean boolean88 = properties37.remove((java.lang.Object) atomikosLoggingLevel74, (java.lang.Object) "tmlog");
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel74);
        boolean boolean90 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel74 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel74.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setAllowSubTransactions(false);
        atomikosProperties20.setLogBaseName("{10=#}");
        java.lang.Object obj32 = properties1.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) "{10=#}");
        boolean boolean34 = properties1.containsKey((java.lang.Object) (byte) -1);
        java.lang.Object obj35 = properties1.clone();
        int int36 = properties1.size();
        java.lang.String str39 = properties1.getProperty("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str39, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout(50L);
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        int int8 = recovery7.getMaxRetries();
        recovery7.setForgetOrphanedLogEntriesDelay((long) (short) 10);
        long long11 = recovery7.getDelay();
        recovery7.setMaxRetries((int) (short) 0);
        long long14 = recovery7.getDelay();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long16 = atomikosProperties0.getMaxTimeout();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str20 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("tmlog");
        java.lang.String str23 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int14 = recovery13.getMaxRetries();
        boolean boolean15 = properties11.containsKey((java.lang.Object) recovery13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties26.getConsoleLogLevel();
        int int31 = atomikosProperties26.getConsoleFileCount();
        java.lang.Object obj32 = properties11.get((java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties33.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery63 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery63.setMaxRetries((-1));
        long long66 = recovery63.getRetryInterval();
        java.lang.Object obj67 = properties11.replace((java.lang.Object) 5, (java.lang.Object) long66);
        java.lang.Object obj68 = properties11.clone();
        boolean boolean69 = properties9.contains((java.lang.Object) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setCheckpointInterval((long) (byte) -1);
        atomikosProperties70.setConsoleFileName("");
        java.lang.String str75 = atomikosProperties70.getLogBaseName();
        long long76 = atomikosProperties70.getCheckpointInterval();
        java.lang.String str77 = atomikosProperties70.getConsoleFileName();
        long long78 = atomikosProperties70.getCheckpointInterval();
        java.lang.String str79 = atomikosProperties70.getLogBaseName();
        atomikosProperties70.setOutputDir("tmlog");
        atomikosProperties70.setDefaultJtaTimeout((long) 100);
        atomikosProperties70.setForceShutdownOnVmExit(false);
        boolean boolean86 = properties9.contains((java.lang.Object) false);
        int int87 = properties9.size();
        properties9.clear();
        java.util.Collection<java.lang.Object> objCollection89 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties9.keys();
        boolean boolean91 = properties9.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(objCollection89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        java.util.Collection<java.lang.Object> objCollection85 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties58.keys();
        java.lang.Object obj87 = properties58.clone();
        java.lang.String str89 = properties58.getProperty("{=}");
        java.util.Enumeration<?> wildcardEnumeration90 = properties58.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{}");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(wildcardEnumeration90);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.lang.Object obj45 = properties1.remove((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileName("tm.out");
        atomikosProperties46.setMaxActives((-1));
        boolean boolean51 = properties1.containsValue((java.lang.Object) atomikosProperties46);
        int int52 = properties1.size();
        java.util.Properties properties53 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties1.keys();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str7 = properties3.toString();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        boolean boolean12 = properties9.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet13 = properties9.keySet();
        java.lang.Object obj15 = properties9.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) "");
        boolean boolean18 = properties3.contains((java.lang.Object) "");
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties3.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties3.entrySet();
        properties3.clear();
        java.lang.Object obj24 = properties3.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tmlog");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{10=#}" + "'", str7, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.String str10 = properties1.getProperty("{}");
        properties1.clear();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        java.lang.Object obj14 = properties7.setProperty("", "");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.lang.String str19 = properties16.getProperty("hi!");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        recovery24.setRetryInterval((long) (short) -1);
        recovery24.setRetryInterval((long) 0);
        recovery24.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass33 = recovery24.getClass();
        java.lang.Object obj34 = properties16.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        java.util.Set<java.lang.String> strSet40 = properties36.stringPropertyNames();
        java.lang.Object obj41 = new java.lang.Object();
        boolean boolean42 = properties7.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties36, obj41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean60 = properties7.containsValue((java.lang.Object) atomikosProperties53);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.lang.String str64 = properties1.getProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str64, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.setMaxRetries(1);
        recovery7.setMaxRetries(19);
        recovery7.setRetryInterval(97L);
        long long14 = recovery7.getRetryInterval();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 97L + "'", long14 == 97L);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties9.toString();
        java.lang.Object obj11 = null;
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.String str22 = properties19.getProperty("");
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        boolean boolean28 = properties16.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean27);
        boolean boolean29 = properties16.isEmpty();
        boolean boolean30 = properties12.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties16);
        java.lang.Object obj31 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        java.lang.String str39 = atomikosProperties32.getOutputDir();
        boolean boolean40 = atomikosProperties32.isEnableLogging();
        java.lang.Object obj41 = properties12.get((java.lang.Object) atomikosProperties32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = properties9.replace(obj11, (java.lang.Object) atomikosProperties32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(properties9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}" + "'", str10, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        properties1.clear();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj29 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str35 = atomikosProperties30.getOutputDir();
        java.util.Properties properties36 = atomikosProperties30.asProperties();
        java.lang.Object obj37 = properties12.remove((java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj56 = properties39.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties57.getRecovery();
        atomikosProperties57.setEnableLogging(false);
        boolean boolean62 = properties39.equals((java.lang.Object) atomikosProperties57);
        boolean boolean63 = properties36.contains((java.lang.Object) atomikosProperties57);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        boolean boolean68 = properties65.containsKey((java.lang.Object) 10.0f);
        java.lang.String str70 = properties65.getProperty("hi!");
        boolean boolean71 = properties36.contains((java.lang.Object) properties65);
        java.util.Set<java.lang.String> strSet72 = properties65.stringPropertyNames();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        boolean boolean85 = properties84.isEmpty();
        boolean boolean86 = properties74.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean85);
        boolean boolean87 = properties74.isEmpty();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties89.elements();
        boolean boolean92 = properties89.containsKey((java.lang.Object) 10.0f);
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        java.lang.Object obj94 = properties1.putIfAbsent((java.lang.Object) properties65, (java.lang.Object) properties89);
        boolean boolean95 = properties65.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration96 = properties65.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet97 = properties65.entrySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration96);
        org.junit.Assert.assertNotNull(objEntrySet97);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str46 = atomikosProperties41.getLogBaseName();
        long long47 = atomikosProperties41.getCheckpointInterval();
        java.lang.String str48 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setForceShutdownOnVmExit(false);
        java.lang.Object obj51 = properties0.replace((java.lang.Object) false, (java.lang.Object) atomikosProperties41);
        java.lang.String str52 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) "hi!", obj29);
        boolean boolean32 = properties25.equals((java.lang.Object) 1.0f);
        java.util.Properties properties33 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties1.replace((java.lang.Object) properties33, (java.lang.Object) properties43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        boolean boolean58 = properties46.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean57);
        boolean boolean59 = properties46.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileName("tm.out");
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.lang.String str74 = properties71.getProperty("");
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        boolean boolean80 = properties68.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean79);
        boolean boolean81 = properties68.isEmpty();
        boolean boolean82 = properties64.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties68);
        boolean boolean83 = properties46.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean82);
        java.util.Properties properties84 = new java.util.Properties(properties46);
        boolean boolean85 = properties43.containsKey((java.lang.Object) properties84);
        java.lang.String str87 = properties84.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.String> strSet88 = properties84.stringPropertyNames();
        java.io.InputStream inputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties84.loadFromXML(inputStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(strSet88);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        int int24 = properties1.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        boolean boolean38 = properties26.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        boolean boolean48 = properties26.contains((java.lang.Object) properties40);
        boolean boolean49 = properties40.isEmpty();
        java.util.Properties properties50 = new java.util.Properties(properties40);
        boolean boolean51 = properties1.containsKey((java.lang.Object) properties40);
        java.util.Enumeration<?> wildcardEnumeration52 = properties1.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setLogBaseDir("");
        java.lang.String str56 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setMaxActives(1);
        java.lang.String str59 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj62 = properties1.get((java.lang.Object) atomikosProperties53);
        java.io.Writer writer63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer63, "{{10=#}=tm.out}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setConsoleFileLimit(1);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseDir("hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        java.util.Collection<java.lang.Object> objCollection49 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int51 = atomikosProperties50.getMaxActives();
        atomikosProperties50.setMaxTimeout((long) (short) 0);
        boolean boolean54 = properties1.containsKey((java.lang.Object) atomikosProperties50);
        java.util.Set<java.lang.String> strSet55 = properties1.stringPropertyNames();
        java.util.Properties properties56 = new java.util.Properties(properties1);
        java.lang.Object obj59 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}", "{10=#}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setOutputDir("");
        java.lang.String str25 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setAllowSubTransactions(false);
        int int28 = atomikosProperties16.getMaxActives();
        boolean boolean29 = properties15.containsKey((java.lang.Object) int28);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int31 = recovery30.getMaxRetries();
        recovery30.setForgetOrphanedLogEntriesDelay((-1L));
        long long34 = recovery30.getForgetOrphanedLogEntriesDelay();
        recovery30.setMaxRetries((int) (short) 0);
        long long37 = recovery30.getRetryInterval();
        long long38 = recovery30.getForgetOrphanedLogEntriesDelay();
        long long39 = recovery30.getRetryInterval();
        java.lang.Object obj40 = properties15.remove((java.lang.Object) recovery30);
        java.util.Properties properties41 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties15.elements();
        java.io.Writer writer43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(writer43, "{[]=WARN}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        long long6 = recovery3.getRetryInterval();
        int int7 = recovery3.getMaxRetries();
        recovery3.setForgetOrphanedLogEntriesDelay((long) ' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("{10=#}");
        atomikosProperties0.setSerialJtaTransactions(true);
        long long14 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str16 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        java.util.Collection<java.lang.Object> objCollection49 = properties1.values();
        java.lang.Object obj50 = properties1.clone();
        java.lang.Object obj51 = properties1.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties1.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertNotNull(objEnumeration52);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setMaxTimeout(300000L);
        atomikosProperties4.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setMaxTimeout((long) (byte) -1);
        boolean boolean25 = properties1.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        atomikosProperties26.setLogBaseName("hi!");
        atomikosProperties26.setService("");
        boolean boolean32 = atomikosProperties26.isAllowSubTransactions();
        java.lang.String str33 = atomikosProperties26.getService();
        java.lang.Object obj34 = properties1.remove((java.lang.Object) str33);
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream35, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}", "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        int int9 = properties1.size();
        properties1.clear();
        int int11 = properties1.size();
        java.lang.Class<?> wildcardClass12 = properties1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        java.lang.String str21 = atomikosProperties10.getOutputDir();
        boolean boolean22 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setOutputDir("{}");
        boolean boolean25 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setOutputDir("tmlog");
        atomikosProperties10.setLogBaseDir("{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int12 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        boolean boolean43 = properties1.isEmpty();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        boolean boolean56 = properties55.isEmpty();
        boolean boolean57 = properties45.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean56);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean67 = properties45.contains((java.lang.Object) properties59);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Enumeration<?> wildcardEnumeration69 = properties45.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration70 = properties45.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration69);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        int int8 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setConsoleFileLimit(1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        int int15 = properties14.size();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.elements();
        java.util.Collection<java.lang.Object> objCollection17 = properties14.values();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 18 + "'", int15 == 18);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objCollection17);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setEnableLogging(false);
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setAllowSubTransactions(false);
        atomikosProperties8.setLogBaseName("tm.out");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection25 = properties8.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objCollection25);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setLogBaseName("hi!");
        boolean boolean22 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.setEnableLogging(false);
        int int25 = atomikosProperties6.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties11.entrySet();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.lang.String str21 = properties18.getProperty("hi!");
        boolean boolean23 = properties18.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet24 = properties18.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int26 = atomikosProperties25.getMaxActives();
        boolean boolean27 = properties18.equals((java.lang.Object) atomikosProperties25);
        long long28 = atomikosProperties25.getCheckpointInterval();
        java.lang.Object obj29 = properties11.remove((java.lang.Object) atomikosProperties25);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties49.isForceShutdownOnVmExit();
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setSerialJtaTransactions(false);
        java.lang.Object obj64 = properties56.remove((java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration65 = properties56.propertyNames();
        java.util.Set<java.lang.Object> objSet66 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        atomikosProperties67.setSerialJtaTransactions(false);
        java.lang.String str74 = atomikosProperties67.getOutputDir();
        boolean boolean75 = atomikosProperties67.isSerialJtaTransactions();
        java.lang.Object obj76 = properties1.putIfAbsent((java.lang.Object) objSet66, (java.lang.Object) atomikosProperties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = atomikosProperties67.getRecovery();
        java.lang.String str78 = atomikosProperties67.getLogBaseName();
        java.lang.String str79 = atomikosProperties67.getTransactionManagerUniqueName();
        atomikosProperties67.setCheckpointInterval((long) (byte) 100);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(recovery77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tmlog" + "'", str78, "tmlog");
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.keys();
        java.util.Set<java.lang.String> strSet9 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        java.lang.String str11 = properties7.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        boolean boolean8 = properties5.containsKey((java.lang.Object) 100);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        boolean boolean22 = properties10.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean21);
        boolean boolean23 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties10.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setConsoleFileName("");
        java.lang.String str30 = atomikosProperties25.getLogBaseName();
        long long31 = atomikosProperties25.getCheckpointInterval();
        atomikosProperties25.setForceShutdownOnVmExit(false);
        atomikosProperties25.setTransactionManagerUniqueName("tmlog");
        atomikosProperties25.setLogBaseDir("");
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        boolean boolean51 = properties39.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean50);
        boolean boolean52 = properties10.remove((java.lang.Object) "", (java.lang.Object) boolean51);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj66 = properties54.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.lang.Object obj71 = properties54.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.lang.String str77 = atomikosProperties72.getOutputDir();
        java.util.Properties properties78 = atomikosProperties72.asProperties();
        java.lang.Object obj79 = properties54.remove((java.lang.Object) properties78);
        boolean boolean80 = properties10.containsKey((java.lang.Object) properties54);
        java.lang.Object obj81 = properties1.put((java.lang.Object) properties5, (java.lang.Object) boolean80);
        java.util.Properties properties82 = new java.util.Properties(properties1);
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties83.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties83.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNotNull(objEntrySet85);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        int int14 = atomikosProperties0.getMaxActives();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration16 = properties15.propertyNames();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet29 = properties4.stringPropertyNames();
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream30, "{{}=false}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        long long23 = atomikosProperties16.getMaxTimeout();
        atomikosProperties16.setCheckpointInterval((long) 'a');
        atomikosProperties16.setMaxActives(19);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet23 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties29.entrySet();
        java.lang.Object obj33 = properties19.getOrDefault((java.lang.Object) properties26, (java.lang.Object) objEntrySet32);
        java.util.Set<java.lang.Object> objSet34 = properties26.keySet();
        java.lang.Object obj35 = properties1.get((java.lang.Object) objSet34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getLogBaseDir();
        java.lang.String str38 = atomikosProperties36.getLogBaseDir();
        long long39 = atomikosProperties36.getCheckpointInterval();
        atomikosProperties36.setTransactionManagerUniqueName("");
        atomikosProperties36.setOutputDir("{{}=}");
        java.lang.Object obj44 = properties1.get((java.lang.Object) "{{}=}");
        java.lang.String str47 = properties1.getProperty("{10=#}", "{{10=#}=tm.out}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{{10=#}=tm.out}" + "'", str47, "{{10=#}=tm.out}");
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        int int51 = properties25.size();
        boolean boolean52 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties25.keys();
        java.util.Enumeration<?> wildcardEnumeration54 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setOutputDir("");
        java.lang.String str64 = atomikosProperties55.getConsoleFileName();
        java.lang.String str65 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setConsoleFileCount((int) (byte) -1);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        atomikosProperties55.setAllowSubTransactions(true);
        boolean boolean72 = properties25.containsKey((java.lang.Object) atomikosProperties55);
        boolean boolean73 = atomikosProperties55.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 19 + "'", int51 == 19);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.lang.String str6 = properties1.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int13 = recovery12.getMaxRetries();
        boolean boolean14 = properties10.containsKey((java.lang.Object) recovery12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.String str22 = properties19.getProperty("");
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj28 = properties16.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties25);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties25.getConsoleLogLevel();
        int int30 = atomikosProperties25.getConsoleFileCount();
        java.lang.Object obj31 = properties10.get((java.lang.Object) atomikosProperties25);
        long long32 = atomikosProperties25.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties25.getConsoleLogLevel();
        boolean boolean34 = atomikosProperties25.isAllowSubTransactions();
        boolean boolean35 = atomikosProperties25.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int37 = recovery36.getMaxRetries();
        recovery36.setForgetOrphanedLogEntriesDelay((-1L));
        long long40 = recovery36.getForgetOrphanedLogEntriesDelay();
        recovery36.setMaxRetries((int) (short) 0);
        long long43 = recovery36.getDelay();
        java.lang.Object obj44 = properties8.replace((java.lang.Object) boolean35, (java.lang.Object) recovery36);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = properties1.contains(obj44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        boolean boolean37 = properties34.containsKey((java.lang.Object) 10.0f);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.String str39 = properties19.toString();
        java.lang.String str41 = properties19.getProperty("hi!");
        boolean boolean42 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties19.keySet();
        java.lang.Object obj46 = properties19.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tmlog");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        atomikosProperties58.setSerialJtaTransactions(false);
        int int64 = atomikosProperties58.getConsoleFileCount();
        atomikosProperties58.setTransactionManagerUniqueName("tm.out");
        atomikosProperties58.setConsoleFileName("{{}=}");
        java.lang.String str69 = atomikosProperties58.getOutputDir();
        boolean boolean70 = properties19.containsValue((java.lang.Object) atomikosProperties58);
        java.util.Properties properties71 = new java.util.Properties(properties19);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = properties7.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        long long15 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties9.setAllowSubTransactions(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        properties23.clear();
        int int37 = properties23.size();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.lang.String str52 = atomikosProperties48.getConsoleFileName();
        java.lang.String str53 = atomikosProperties48.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties48.getConsoleLogLevel();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj68 = properties56.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        int int71 = atomikosProperties65.getConsoleFileCount();
        atomikosProperties65.setForceShutdownOnVmExit(false);
        boolean boolean74 = properties23.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) false);
        java.util.Properties properties75 = atomikosProperties48.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.Object obj77 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) properties75);
        properties75.clear();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 18 + "'", int8 == 18);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setOutputDir("{10=#}");
        int int20 = atomikosProperties10.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties21.getService();
        java.lang.String str27 = atomikosProperties21.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel28);
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setCheckpointInterval((long) (byte) 10);
        long long34 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        int int40 = properties39.size();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        boolean boolean54 = properties42.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean53);
        boolean boolean55 = properties42.isEmpty();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        boolean boolean60 = properties57.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Set<java.lang.String> strSet62 = properties57.stringPropertyNames();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        atomikosProperties73.setSerialJtaTransactions(false);
        int int79 = atomikosProperties73.getConsoleFileCount();
        boolean boolean80 = atomikosProperties73.isForceShutdownOnVmExit();
        atomikosProperties73.setAllowSubTransactions(false);
        int int83 = atomikosProperties73.getConsoleFileLimit();
        atomikosProperties73.setEnableLogging(false);
        boolean boolean86 = properties39.remove((java.lang.Object) properties57, (java.lang.Object) false);
        java.io.PrintWriter printWriter87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.list(printWriter87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        long long22 = recovery17.getRetryInterval();
        long long23 = recovery17.getForgetOrphanedLogEntriesDelay();
        int int24 = recovery17.getMaxRetries();
        recovery17.setRetryInterval((long) 1);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        boolean boolean28 = properties16.containsKey((java.lang.Object) long27);
        java.io.InputStream inputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.loadFromXML(inputStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getLogBaseDir();
        int int5 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<?> wildcardEnumeration14 = properties6.propertyNames();
        boolean boolean15 = properties1.containsValue((java.lang.Object) wildcardEnumeration14);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int20 = recovery19.getMaxRetries();
        boolean boolean21 = properties17.containsKey((java.lang.Object) recovery19);
        properties17.clear();
        boolean boolean24 = properties17.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel53);
        boolean boolean57 = properties17.replace((java.lang.Object) properties26, (java.lang.Object) atomikosProperties28, (java.lang.Object) 10.0d);
        java.lang.Object obj58 = properties1.remove((java.lang.Object) properties17);
        java.util.Collection<java.lang.Object> objCollection59 = properties1.values();
        java.lang.Object obj62 = properties1.setProperty("tm.out", "tm.out");
        java.lang.String str64 = properties1.getProperty("tmlog");
        java.util.Set<java.lang.String> strSet65 = properties1.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection66 = properties1.values();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(objCollection66);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Collection<java.lang.Object> objCollection36 = properties31.values();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.elements();
        boolean boolean38 = properties1.contains((java.lang.Object) objEnumeration37);
        java.io.PrintWriter printWriter39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setConsoleFileCount((int) '#');
        int int4 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 35 + "'", int4 == 35);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        long long17 = recovery11.getRetryInterval();
        recovery11.setRetryInterval((long) ' ');
        recovery11.setMaxRetries((int) '#');
        int int22 = recovery11.getMaxRetries();
        recovery11.setMaxRetries((int) (byte) -1);
        long long25 = recovery11.getDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Enumeration<?> wildcardEnumeration28 = properties1.propertyNames();
        java.lang.Object obj31 = properties1.setProperty("", "tmlog");
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties33.entrySet();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Object obj38 = properties33.replace((java.lang.Object) "hi!", obj37);
        boolean boolean40 = properties33.equals((java.lang.Object) 1.0f);
        java.util.Properties properties41 = new java.util.Properties(properties33);
        properties33.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties33.elements();
        java.util.Enumeration<?> wildcardEnumeration44 = properties33.propertyNames();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties46.entrySet();
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setConsoleFileName("");
        java.lang.String str55 = atomikosProperties50.getLogBaseName();
        long long56 = atomikosProperties50.getCheckpointInterval();
        java.lang.String str57 = atomikosProperties50.getLogBaseDir();
        atomikosProperties50.setEnableLogging(true);
        long long60 = atomikosProperties50.getDefaultJtaTimeout();
        boolean boolean61 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.String str62 = atomikosProperties50.getOutputDir();
        atomikosProperties50.setTransactionManagerUniqueName("{}");
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        boolean boolean69 = properties66.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.lang.String str77 = properties74.getProperty("");
        properties71.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Enumeration<?> wildcardEnumeration79 = properties71.propertyNames();
        boolean boolean80 = properties66.containsValue((java.lang.Object) wildcardEnumeration79);
        java.lang.Object obj81 = properties46.put((java.lang.Object) atomikosProperties50, (java.lang.Object) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setCheckpointInterval((long) (byte) -1);
        atomikosProperties82.setConsoleFileName("");
        java.lang.String str87 = atomikosProperties82.getLogBaseName();
        atomikosProperties82.setForceShutdownOnVmExit(true);
        java.lang.Object obj90 = properties46.remove((java.lang.Object) true);
        java.lang.Object obj91 = properties46.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties46.entrySet();
        boolean boolean93 = properties1.remove((java.lang.Object) properties33, (java.lang.Object) properties46);
        java.lang.String str95 = properties46.getProperty("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(wildcardEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(objEntrySet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Set<java.lang.Object> objSet34 = properties1.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.lang.String str42 = properties39.getProperty("");
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj48 = properties36.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.lang.String str59 = properties56.getProperty("");
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj65 = properties53.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties62.isForceShutdownOnVmExit();
        boolean boolean69 = properties1.remove((java.lang.Object) boolean51, (java.lang.Object) boolean68);
        java.lang.String str70 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection71 = properties1.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{{}={}}" + "'", str70, "{{}={}}");
        org.junit.Assert.assertNotNull(objCollection71);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setConsoleFileName("");
        int int25 = atomikosProperties16.getConsoleFileCount();
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean29 = atomikosProperties16.isEnableLogging();
        java.lang.String str30 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery33 = atomikosProperties16.getRecovery();
        atomikosProperties16.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(recovery33);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) 97);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties13.getOutputDir();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        java.lang.String str29 = atomikosProperties20.getConsoleFileName();
        java.lang.String str30 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setDefaultJtaTimeout(0L);
        java.lang.Object obj33 = properties9.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties20);
        java.lang.String str35 = properties9.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties9.keys();
        boolean boolean37 = properties1.contains((java.lang.Object) properties9);
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration39 = properties38.propertyNames();
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.save(outputStream40, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties10.getRecovery();
        boolean boolean22 = atomikosProperties10.isEnableLogging();
        java.lang.String str23 = atomikosProperties10.getService();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        atomikosProperties0.setConsoleFileName("{{}=}");
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setConsoleFileName("");
        java.lang.String str23 = atomikosProperties18.getLogBaseName();
        long long24 = atomikosProperties18.getCheckpointInterval();
        atomikosProperties18.setForceShutdownOnVmExit(false);
        java.util.Properties properties27 = atomikosProperties18.asProperties();
        boolean boolean28 = atomikosProperties18.isAllowSubTransactions();
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = properties1.getOrDefault((java.lang.Object) boolean28, obj29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        properties32.clear();
        boolean boolean39 = properties32.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties49.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel68);
        boolean boolean72 = properties32.replace((java.lang.Object) properties41, (java.lang.Object) atomikosProperties43, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet73 = properties41.keySet();
        boolean boolean74 = properties1.containsValue((java.lang.Object) properties41);
        java.io.Writer writer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.store(writer75, "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout((long) (-1));
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseDir("{[]=WARN}");
        atomikosProperties0.setOutputDir("{}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getOutputDir();
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        atomikosProperties19.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties19.setCheckpointInterval(0L);
        java.util.Properties properties32 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.lang.String str38 = atomikosProperties33.getOutputDir();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        atomikosProperties33.setCheckpointInterval((long) 'a');
        atomikosProperties33.setMaxActives(100);
        java.util.Properties properties44 = atomikosProperties33.asProperties();
        java.lang.Object obj47 = properties44.setProperty("tm.out", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery50 = atomikosProperties48.getRecovery();
        atomikosProperties48.setEnableLogging(false);
        long long53 = atomikosProperties48.getMaxTimeout();
        atomikosProperties48.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties48.setLogBaseDir("hi!");
        boolean boolean58 = atomikosProperties48.isForceShutdownOnVmExit();
        atomikosProperties48.setDefaultJtaTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = atomikosProperties48.getRecovery();
        boolean boolean62 = properties44.contains((java.lang.Object) atomikosProperties48);
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        long long70 = atomikosProperties64.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties64.getConsoleFileName();
        long long72 = atomikosProperties64.getCheckpointInterval();
        java.lang.String str73 = atomikosProperties64.getLogBaseName();
        atomikosProperties64.setForceShutdownOnVmExit(false);
        boolean boolean76 = properties44.containsKey((java.lang.Object) atomikosProperties64);
        java.lang.String str77 = atomikosProperties64.getConsoleFileName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(recovery50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(recovery61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        int int26 = atomikosProperties5.getMaxActives();
        long long27 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.setCheckpointInterval(300000L);
        atomikosProperties5.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount(10);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        long long15 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        java.lang.String str12 = atomikosProperties0.getConsoleFileName();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setAllowSubTransactions(true);
        boolean boolean19 = atomikosProperties10.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        properties1.clear();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj29 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str35 = atomikosProperties30.getOutputDir();
        java.util.Properties properties36 = atomikosProperties30.asProperties();
        java.lang.Object obj37 = properties12.remove((java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj56 = properties39.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties57.getRecovery();
        atomikosProperties57.setEnableLogging(false);
        boolean boolean62 = properties39.equals((java.lang.Object) atomikosProperties57);
        boolean boolean63 = properties36.contains((java.lang.Object) atomikosProperties57);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        boolean boolean68 = properties65.containsKey((java.lang.Object) 10.0f);
        java.lang.String str70 = properties65.getProperty("hi!");
        boolean boolean71 = properties36.contains((java.lang.Object) properties65);
        java.util.Set<java.lang.String> strSet72 = properties65.stringPropertyNames();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        boolean boolean85 = properties84.isEmpty();
        boolean boolean86 = properties74.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean85);
        boolean boolean87 = properties74.isEmpty();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties89.elements();
        boolean boolean92 = properties89.containsKey((java.lang.Object) 10.0f);
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        java.lang.Object obj94 = properties1.putIfAbsent((java.lang.Object) properties65, (java.lang.Object) properties89);
        boolean boolean95 = properties65.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration96 = properties65.propertyNames();
        java.lang.String str97 = properties65.toString();
        java.util.Set<java.lang.Object> objSet98 = properties65.keySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "{}" + "'", str97, "{}");
        org.junit.Assert.assertNotNull(objSet98);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setAllowSubTransactions(false);
        atomikosProperties20.setLogBaseName("{10=#}");
        java.lang.Object obj32 = properties1.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) "{10=#}");
        boolean boolean34 = properties1.containsKey((java.lang.Object) (byte) -1);
        java.lang.Object obj35 = properties1.clone();
        java.lang.Object obj36 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.String str40 = atomikosProperties37.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties37.getRecovery();
        java.util.Properties properties42 = atomikosProperties37.asProperties();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setConsoleFileCount((int) (byte) 1);
        int int47 = atomikosProperties37.getConsoleFileLimit();
        java.lang.String str48 = atomikosProperties37.getService();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        boolean boolean52 = properties50.isEmpty();
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        java.lang.String str59 = atomikosProperties54.getOutputDir();
        java.util.Properties properties60 = atomikosProperties54.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setOutputDir("");
        java.lang.String str70 = atomikosProperties61.getConsoleFileName();
        java.lang.String str71 = atomikosProperties61.getLogBaseName();
        atomikosProperties61.setDefaultJtaTimeout(0L);
        java.lang.Object obj74 = properties50.putIfAbsent((java.lang.Object) atomikosProperties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setMaxTimeout((long) (byte) -1);
        int int77 = atomikosProperties61.getConsoleFileCount();
        boolean boolean78 = atomikosProperties61.isThreadedTwoPhaseCommit();
        boolean boolean79 = atomikosProperties61.isForceShutdownOnVmExit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = properties1.putIfAbsent((java.lang.Object) str48, (java.lang.Object) boolean79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        boolean boolean16 = properties15.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.String str18 = properties15.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}" + "'", str18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}");
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setService("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setLogBaseDir("");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties40.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties14.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel44);
        java.util.Properties properties49 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties49);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties0.getRecovery();
        recovery16.setDelay((long) 50);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery16);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection28 = properties1.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties30.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getLogBaseDir();
        atomikosProperties45.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.String str56 = atomikosProperties49.getLogBaseName();
        atomikosProperties49.setAllowSubTransactions(false);
        atomikosProperties49.setLogBaseName("{10=#}");
        java.lang.Object obj61 = properties30.putIfAbsent((java.lang.Object) atomikosProperties45, (java.lang.Object) "{10=#}");
        java.lang.String str62 = properties30.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) ' ');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setService("tm.out");
        int int18 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties21 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties10.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(recovery22);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.lang.Object obj38 = properties0.setProperty("", "tmlog");
        java.lang.Object obj39 = properties0.clone();
        java.io.Writer writer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer40, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setDelay(10L);
        long long10 = recovery3.getRetryInterval();
        recovery3.setRetryInterval(10L);
        recovery3.setDelay(86400000L);
        long long15 = recovery3.getDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 86400000L + "'", long15 == 86400000L);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        boolean boolean40 = properties1.equals((java.lang.Object) ' ');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str46 = atomikosProperties41.getLogBaseName();
        long long47 = atomikosProperties41.getCheckpointInterval();
        atomikosProperties41.setForceShutdownOnVmExit(false);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.lang.String str57 = properties54.getProperty("");
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<?> wildcardEnumeration59 = properties51.propertyNames();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.lang.String str67 = properties64.getProperty("");
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        boolean boolean73 = properties61.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean72);
        boolean boolean74 = properties61.isEmpty();
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        boolean boolean79 = properties76.containsKey((java.lang.Object) 10.0f);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Set<java.lang.String> strSet81 = properties61.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setCheckpointInterval((long) (byte) -1);
        atomikosProperties82.setThreadedTwoPhaseCommit(true);
        atomikosProperties82.setSerialJtaTransactions(false);
        atomikosProperties82.setOutputDir("");
        java.lang.Object obj91 = properties51.putIfAbsent((java.lang.Object) properties61, (java.lang.Object) "");
        java.lang.Object obj92 = properties1.putIfAbsent((java.lang.Object) false, (java.lang.Object) properties51);
        properties1.clear();
        java.lang.Object obj96 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        java.lang.Object obj97 = properties1.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        atomikosProperties19.setCheckpointInterval((long) 100);
        atomikosProperties19.setMaxTimeout((long) (byte) -1);
        java.lang.String str28 = atomikosProperties19.getLogBaseDir();
        boolean boolean29 = properties4.equals((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setLogBaseName("hi!");
        java.util.Properties properties32 = atomikosProperties19.asProperties();
        java.lang.String str33 = atomikosProperties19.getOutputDir();
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setCheckpointInterval(10000L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        int int12 = recovery11.getMaxRetries();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties8.getLogBaseDir();
        java.util.Properties properties19 = atomikosProperties8.asProperties();
        java.lang.Object obj20 = properties19.clone();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties37.getConsoleLogLevel();
        int int42 = atomikosProperties37.getConsoleFileCount();
        java.lang.Object obj43 = properties22.get((java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties44.getLogBaseName();
        long long50 = atomikosProperties44.getCheckpointInterval();
        java.lang.Object obj51 = properties22.get((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setConsoleFileLimit((int) (short) 100);
        java.util.Properties properties54 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int56 = atomikosProperties55.getMaxActives();
        java.lang.String str57 = atomikosProperties55.getTransactionManagerUniqueName();
        java.lang.String str58 = atomikosProperties55.getLogBaseName();
        boolean boolean59 = atomikosProperties55.isThreadedTwoPhaseCommit();
        java.lang.Object obj60 = properties19.put((java.lang.Object) properties54, (java.lang.Object) atomikosProperties55);
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties54.loadFromXML(inputStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        boolean boolean26 = properties14.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        boolean boolean36 = properties14.contains((java.lang.Object) properties28);
        java.util.Set<java.lang.Object> objSet37 = properties28.keySet();
        java.lang.Object obj38 = properties1.getOrDefault((java.lang.Object) true, (java.lang.Object) properties28);
        properties28.clear();
        java.lang.String str40 = properties28.toString();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int50 = recovery49.getMaxRetries();
        recovery49.setForgetOrphanedLogEntriesDelay((-1L));
        recovery49.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean55 = properties42.remove((java.lang.Object) properties46, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getLogBaseDir();
        java.lang.String str58 = atomikosProperties56.getLogBaseDir();
        int int59 = atomikosProperties56.getConsoleFileCount();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties61.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet64 = properties61.entrySet();
        boolean boolean66 = properties46.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties61, (java.lang.Object) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        boolean boolean70 = properties68.isEmpty();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        boolean boolean72 = properties28.containsKey((java.lang.Object) properties61);
        boolean boolean73 = properties61.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration74 = properties61.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEntrySet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration74);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long16 = atomikosProperties0.getMaxTimeout();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str18 = atomikosProperties0.getService();
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objCollection22);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.setMaxRetries(1);
        recovery7.setMaxRetries(19);
        recovery7.setRetryInterval(50L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.lang.String str9 = properties6.getProperty("hi!");
        boolean boolean11 = properties6.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet12 = properties6.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getMaxActives();
        boolean boolean15 = properties6.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setSerialJtaTransactions(false);
        int int18 = atomikosProperties13.getMaxActives();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int23 = recovery22.getMaxRetries();
        boolean boolean24 = properties20.containsKey((java.lang.Object) recovery22);
        long long25 = recovery22.getRetryInterval();
        java.lang.Object obj26 = properties1.getOrDefault((java.lang.Object) atomikosProperties13, (java.lang.Object) recovery22);
        atomikosProperties13.setDefaultJtaTimeout((long) '4');
        atomikosProperties13.setConsoleFileCount(32);
        atomikosProperties13.setLogBaseName("hi!");
        boolean boolean33 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.setConsoleFileLimit(2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(recovery6);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileName("{}");
        boolean boolean30 = atomikosProperties0.isEnableLogging();
        long long31 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
    }
}
