import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        int int27 = atomikosProperties14.getConsoleFileLimit();
        atomikosProperties14.setConsoleFileLimit((int) (short) -1);
        java.lang.String str30 = atomikosProperties14.getService();
        java.lang.String str31 = atomikosProperties14.getOutputDir();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        recovery4.setMaxRetries((int) (byte) 0);
        recovery4.setForgetOrphanedLogEntriesDelay(0L);
        recovery4.setDelay(86400000L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNotNull(recovery4);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.keys();
        java.lang.String str5 = properties2.getProperty("{}");
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setOutputDir("hi!");
        int int14 = atomikosProperties10.getConsoleFileLimit();
        java.lang.Object obj15 = properties7.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        boolean boolean18 = atomikosProperties10.isThreadedTwoPhaseCommit();
        atomikosProperties10.setDefaultJtaTimeout((long) 10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount(100);
        atomikosProperties21.setAllowSubTransactions(true);
        boolean boolean26 = atomikosProperties21.isForceShutdownOnVmExit();
        atomikosProperties21.setConsoleFileCount(10);
        atomikosProperties21.setConsoleFileCount(50);
        atomikosProperties21.setForceShutdownOnVmExit(true);
        boolean boolean33 = properties2.remove((java.lang.Object) atomikosProperties10, (java.lang.Object) true);
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.storeToXML(outputStream34, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.util.Set<java.lang.String> strSet35 = properties22.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setDelay((long) 5);
        boolean boolean40 = properties22.containsKey((java.lang.Object) 5);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        properties44.clear();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Collection<java.lang.Object> objCollection47 = properties44.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.util.Properties properties53 = atomikosProperties48.asProperties();
        boolean boolean54 = properties44.containsValue((java.lang.Object) atomikosProperties48);
        java.lang.String str55 = atomikosProperties48.getService();
        atomikosProperties48.setCheckpointInterval((long) 100);
        atomikosProperties48.setLogBaseDir("hi!");
        boolean boolean60 = properties22.containsValue((java.lang.Object) atomikosProperties48);
        boolean boolean61 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties48.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setDelay((long) (short) 1);
        long long8 = recovery0.getRetryInterval();
        long long9 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        int int12 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getService();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.elements();
        java.util.Properties properties7 = new java.util.Properties(properties0);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean11 = properties9.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        atomikosProperties12.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties12.getConsoleFileCount();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setService("{}");
        atomikosProperties12.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj27 = properties7.put((java.lang.Object) 10L, (java.lang.Object) atomikosProperties12);
        java.lang.String str30 = properties7.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        boolean boolean10 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.lang.String str16 = atomikosProperties11.getService();
        java.lang.String str17 = atomikosProperties11.getOutputDir();
        boolean boolean18 = properties1.contains((java.lang.Object) str17);
        boolean boolean19 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.lang.String str23 = atomikosProperties20.getOutputDir();
        atomikosProperties20.setLogBaseName("tm.out");
        atomikosProperties20.setForceShutdownOnVmExit(true);
        int int28 = atomikosProperties20.getConsoleFileCount();
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties20.isForceShutdownOnVmExit();
        boolean boolean32 = properties1.contains((java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = new java.util.Properties(properties1);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        boolean boolean14 = atomikosProperties6.isThreadedTwoPhaseCommit();
        java.lang.String str15 = atomikosProperties6.getOutputDir();
        java.util.Properties properties16 = atomikosProperties6.asProperties();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        atomikosProperties4.setOutputDir("hi!");
        atomikosProperties4.setConsoleFileLimit((int) '#');
        atomikosProperties4.setEnableLogging(true);
        java.lang.String str22 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setMaxTimeout(100L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        int int34 = properties29.size();
        java.util.Properties properties35 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount(100);
        atomikosProperties36.setAllowSubTransactions(true);
        boolean boolean41 = atomikosProperties36.isForceShutdownOnVmExit();
        atomikosProperties36.setConsoleFileCount(10);
        atomikosProperties36.setConsoleFileCount(50);
        java.lang.String str46 = atomikosProperties36.getService();
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.save(outputStream49, "{hi!=10}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        int int15 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) (byte) -1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        java.lang.String str16 = atomikosProperties4.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        long long18 = atomikosProperties4.getMaxTimeout();
        atomikosProperties4.setLogBaseDir("hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) '#');
        atomikosProperties0.setConsoleFileCount((int) 'a');
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(recovery15);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setService("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.getRecovery();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Class<?> wildcardClass11 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.Object obj10 = properties8.clone();
        java.io.PrintWriter printWriter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        boolean boolean24 = properties23.isEmpty();
        java.lang.String str26 = properties23.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        properties23.clear();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        boolean boolean29 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setOutputDir("{}");
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setConsoleFileLimit(10);
        atomikosProperties19.setConsoleFileCount((int) (byte) 100);
        java.lang.String str38 = atomikosProperties19.getLogBaseName();
        int int39 = atomikosProperties19.getMaxActives();
        atomikosProperties19.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        int int12 = properties11.size();
        boolean boolean13 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        boolean boolean19 = properties17.isEmpty();
        boolean boolean20 = properties11.containsValue((java.lang.Object) boolean19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties11.elements();
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        java.lang.String str26 = atomikosProperties23.getOutputDir();
        atomikosProperties23.setLogBaseName("tm.out");
        atomikosProperties23.setForceShutdownOnVmExit(true);
        int int31 = atomikosProperties23.getConsoleFileCount();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long37 = recovery36.getForgetOrphanedLogEntriesDelay();
        recovery36.setDelay((long) (short) 1);
        long long40 = recovery36.getRetryInterval();
        long long41 = recovery36.getForgetOrphanedLogEntriesDelay();
        int int42 = recovery36.getMaxRetries();
        java.lang.Object obj43 = properties11.put((java.lang.Object) atomikosProperties23, (java.lang.Object) recovery36);
        java.lang.Object obj44 = properties9.get((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<?> wildcardEnumeration45 = properties9.propertyNames();
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream46, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 86400000L + "'", long37 == 86400000L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 86400000L + "'", long41 == 86400000L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        int int7 = atomikosProperties0.getMaxActives();
        int int8 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout((long) 18);
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        java.lang.String str17 = atomikosProperties11.getService();
        atomikosProperties11.setService("hi!");
        atomikosProperties11.setConsoleFileName("tm.out");
        boolean boolean22 = atomikosProperties11.isSerialJtaTransactions();
        java.util.Properties properties23 = atomikosProperties11.asProperties();
        java.util.Enumeration<?> wildcardEnumeration24 = properties23.propertyNames();
        boolean boolean25 = properties1.equals((java.lang.Object) properties23);
        java.util.Properties properties26 = new java.util.Properties(properties1);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        properties32.clear();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj37 = properties30.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount((-1));
        java.lang.String str42 = atomikosProperties39.getOutputDir();
        atomikosProperties39.setLogBaseName("tm.out");
        boolean boolean45 = properties30.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount(100);
        atomikosProperties46.setAllowSubTransactions(true);
        java.lang.Object obj51 = properties30.remove((java.lang.Object) atomikosProperties46);
        atomikosProperties46.setAllowSubTransactions(false);
        atomikosProperties46.setSerialJtaTransactions(true);
        boolean boolean56 = atomikosProperties46.isSerialJtaTransactions();
        atomikosProperties46.setOutputDir("{}");
        java.lang.String str59 = atomikosProperties46.getTransactionManagerUniqueName();
        atomikosProperties46.setEnableLogging(false);
        atomikosProperties46.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties46.setCheckpointInterval(500L);
        boolean boolean66 = properties1.equals((java.lang.Object) atomikosProperties46);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setConsoleFileLimit((int) (short) 1);
        java.lang.String str15 = atomikosProperties0.getOutputDir();
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        int int17 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        boolean boolean24 = properties23.isEmpty();
        java.lang.Object obj27 = properties23.setProperty("{=hi!}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        int int31 = atomikosProperties28.getConsoleFileCount();
        atomikosProperties28.setOutputDir("");
        java.lang.String str34 = atomikosProperties28.getConsoleFileName();
        long long35 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setMaxActives(100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties28.getConsoleLogLevel();
        java.lang.String str39 = atomikosProperties28.getLogBaseName();
        atomikosProperties28.setThreadedTwoPhaseCommit(false);
        atomikosProperties28.setEnableLogging(true);
        java.lang.Object obj44 = properties23.get((java.lang.Object) atomikosProperties28);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        recovery4.setRetryInterval(19L);
        recovery4.setRetryInterval(97L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNotNull(recovery4);
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        atomikosProperties0.setConsoleFileCount((int) (byte) 10);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int3 = recovery2.getMaxRetries();
        recovery2.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        java.lang.Object obj6 = properties1.get((java.lang.Object) (short) -1);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.lang.Object obj16 = properties8.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties11);
        atomikosProperties11.setLogBaseName("tm.out");
        atomikosProperties11.setForceShutdownOnVmExit(false);
        int int21 = atomikosProperties11.getMaxActives();
        java.lang.Object obj22 = properties1.remove((java.lang.Object) int21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        int int25 = properties24.size();
        boolean boolean26 = properties24.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        boolean boolean32 = properties30.isEmpty();
        boolean boolean33 = properties24.containsValue((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.keys();
        boolean boolean38 = properties24.containsKey((java.lang.Object) objEnumeration37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration49 = properties46.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount(100);
        atomikosProperties50.setAllowSubTransactions(true);
        boolean boolean55 = atomikosProperties50.isForceShutdownOnVmExit();
        atomikosProperties50.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties50.setConsoleLogLevel(atomikosLoggingLevel60);
        boolean boolean62 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties63 = atomikosProperties50.asProperties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        properties71.clear();
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        boolean boolean75 = properties69.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj76 = properties64.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getConsoleFileName();
        atomikosProperties77.setOutputDir("hi!");
        int int81 = atomikosProperties77.getConsoleFileLimit();
        java.util.Properties properties82 = atomikosProperties77.asProperties();
        java.lang.String str83 = atomikosProperties77.getService();
        atomikosProperties77.setService("hi!");
        atomikosProperties77.setThreadedTwoPhaseCommit(false);
        atomikosProperties77.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties77.setTransactionManagerUniqueName("");
        boolean boolean92 = properties64.containsValue((java.lang.Object) "");
        java.util.Properties properties93 = new java.util.Properties(properties64);
        boolean boolean94 = properties63.equals((java.lang.Object) properties93);
        java.lang.Object obj95 = properties24.replace((java.lang.Object) properties46, (java.lang.Object) boolean94);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties97 = new java.util.Properties(properties1);
        java.lang.Object obj98 = properties97.clone();
        java.util.Enumeration<?> wildcardEnumeration99 = properties97.propertyNames();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration99);
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        java.lang.Object obj24 = properties20.put((java.lang.Object) atomikosProperties21, (java.lang.Object) 0L);
        java.util.Properties properties25 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        atomikosProperties26.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj31 = properties20.remove((java.lang.Object) atomikosProperties26);
        boolean boolean32 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean37 = properties35.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties42.getConsoleLogLevel();
        java.lang.Object obj48 = properties35.putIfAbsent((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosLoggingLevel47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties49.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long56 = recovery55.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getConsoleFileName();
        atomikosProperties61.setOutputDir("hi!");
        int int65 = atomikosProperties61.getConsoleFileLimit();
        java.lang.Object obj66 = properties58.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties61.getConsoleLogLevel();
        java.lang.String str68 = atomikosProperties61.getTransactionManagerUniqueName();
        atomikosProperties61.setThreadedTwoPhaseCommit(false);
        boolean boolean71 = properties35.replace((java.lang.Object) atomikosProperties49, (java.lang.Object) recovery55, (java.lang.Object) false);
        java.lang.Object obj72 = properties15.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties15.keys();
        java.util.Properties properties74 = new java.util.Properties(properties15);
        java.util.Properties properties75 = new java.util.Properties(properties74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str9, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        atomikosProperties4.setOutputDir("hi!");
        atomikosProperties4.setConsoleFileLimit((int) '#');
        atomikosProperties4.setEnableLogging(true);
        boolean boolean22 = atomikosProperties4.isEnableLogging();
        java.util.Properties properties23 = atomikosProperties4.asProperties();
        atomikosProperties4.setAllowSubTransactions(true);
        java.lang.String str26 = atomikosProperties4.getOutputDir();
        atomikosProperties4.setSerialJtaTransactions(true);
        atomikosProperties4.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str31 = atomikosProperties4.getService();
        long long32 = atomikosProperties4.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties19 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.Object obj23 = properties19.put((java.lang.Object) atomikosProperties20, (java.lang.Object) 0L);
        java.lang.Object obj26 = properties19.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties28.getConsoleLogLevel();
        java.lang.Object obj34 = properties14.getOrDefault((java.lang.Object) properties19, (java.lang.Object) atomikosProperties28);
        boolean boolean35 = properties0.contains((java.lang.Object) properties19);
        java.util.Properties properties36 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        java.lang.Object obj40 = properties36.put((java.lang.Object) atomikosProperties37, (java.lang.Object) 0L);
        java.lang.Object obj43 = properties36.setProperty("", "");
        java.lang.Object obj46 = properties36.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setAllowSubTransactions(false);
        boolean boolean51 = properties36.containsKey((java.lang.Object) atomikosProperties47);
        java.lang.Object obj52 = properties19.remove((java.lang.Object) properties36);
        java.io.OutputStream outputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.save(outputStream53, "{hi!=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setConsoleFileCount(1);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        atomikosProperties4.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties4.setCheckpointInterval((long) (short) -1);
        atomikosProperties4.setEnableLogging(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        boolean boolean7 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties8.getRecovery();
        recovery12.setMaxRetries((int) (short) 0);
        recovery12.setRetryInterval((long) (short) 0);
        recovery12.setDelay(1L);
        recovery12.setForgetOrphanedLogEntriesDelay(5L);
        long long21 = recovery12.getDelay();
        recovery12.setForgetOrphanedLogEntriesDelay((long) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setCheckpointInterval((long) (short) 10);
        java.lang.String str29 = atomikosProperties24.getOutputDir();
        java.lang.Object obj30 = properties5.put((java.lang.Object) recovery12, (java.lang.Object) atomikosProperties24);
        recovery12.setForgetOrphanedLogEntriesDelay(100L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        int int27 = atomikosProperties14.getConsoleFileLimit();
        boolean boolean28 = atomikosProperties14.isForceShutdownOnVmExit();
        atomikosProperties14.setLogBaseName("");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties14.setConsoleFileLimit(35);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getLogBaseDir();
        int int26 = atomikosProperties19.getConsoleFileLimit();
        atomikosProperties19.setConsoleFileName("{10=10.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = atomikosProperties19.getRecovery();
        long long30 = recovery29.getRetryInterval();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(recovery29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay(500L);
        long long4 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        int int7 = recovery0.getMaxRetries();
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties3.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties3.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        int int18 = properties17.size();
        boolean boolean19 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties23.isEmpty();
        boolean boolean26 = properties17.containsValue((java.lang.Object) boolean25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties17.elements();
        java.lang.Class<?> wildcardClass28 = properties17.getClass();
        java.lang.Object obj29 = properties3.remove((java.lang.Object) properties17);
        java.util.Enumeration<?> wildcardEnumeration30 = properties3.propertyNames();
        java.util.Set<java.lang.Object> objSet31 = properties3.keySet();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream32, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(objSet31);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj20 = properties13.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        java.lang.String str25 = atomikosProperties22.getOutputDir();
        atomikosProperties22.setLogBaseName("tm.out");
        boolean boolean28 = properties13.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount(100);
        atomikosProperties29.setAllowSubTransactions(true);
        java.lang.Object obj34 = properties13.remove((java.lang.Object) atomikosProperties29);
        java.util.Set<java.lang.Object> objSet35 = properties13.keySet();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj42 = properties13.get((java.lang.Object) properties39);
        properties39.clear();
        java.util.Properties properties44 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        java.lang.Object obj48 = properties44.put((java.lang.Object) atomikosProperties45, (java.lang.Object) 0L);
        java.util.Properties properties49 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount((-1));
        atomikosProperties50.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj55 = properties44.remove((java.lang.Object) atomikosProperties50);
        boolean boolean56 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties39.putIfAbsent((java.lang.Object) boolean56, (java.lang.Object) 500L);
        java.util.Collection<java.lang.Object> objCollection59 = properties39.values();
        boolean boolean60 = properties1.containsValue((java.lang.Object) objCollection59);
        java.lang.Object obj61 = properties1.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties1.keys();
        properties1.clear();
        boolean boolean64 = properties1.isEmpty();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{10=10.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{10=10.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{10=10.0}");
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        atomikosProperties17.setLogBaseDir("tm.out");
        atomikosProperties17.setSerialJtaTransactions(false);
        boolean boolean27 = atomikosProperties17.isThreadedTwoPhaseCommit();
        long long28 = atomikosProperties17.getMaxTimeout();
        java.lang.Object obj29 = properties16.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setMaxTimeout(19L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        boolean boolean6 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean38 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.setOutputDir("{}");
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties3.put((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosProperties28);
        java.util.Properties properties44 = atomikosProperties4.asProperties();
        java.util.Set<java.lang.String> strSet45 = properties44.stringPropertyNames();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Collection<java.lang.Object> objCollection14 = properties12.values();
        java.util.Properties properties15 = new java.util.Properties(properties12);
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream16, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objCollection14);
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties6.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet12 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        int int19 = atomikosProperties13.getConsoleFileCount();
        boolean boolean20 = properties6.containsKey((java.lang.Object) atomikosProperties13);
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj32 = properties25.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount((-1));
        java.lang.String str37 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setLogBaseName("tm.out");
        boolean boolean40 = properties25.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        java.lang.Object obj46 = properties25.remove((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setAllowSubTransactions(false);
        atomikosProperties41.setSerialJtaTransactions(true);
        boolean boolean51 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setOutputDir("{}");
        boolean boolean54 = atomikosProperties41.isAllowSubTransactions();
        atomikosProperties41.setAllowSubTransactions(false);
        atomikosProperties41.setCheckpointInterval((long) 5);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection60 = properties59.values();
        java.util.Properties properties61 = new java.util.Properties(properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel66 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel66);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean70 = properties61.containsValue((java.lang.Object) atomikosProperties62);
        java.util.Collection<java.lang.Object> objCollection71 = properties61.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel74 = atomikosProperties72.getConsoleLogLevel();
        atomikosProperties72.setMaxTimeout(1L);
        int int77 = atomikosProperties72.getMaxActives();
        boolean boolean78 = properties1.replace((java.lang.Object) atomikosProperties41, (java.lang.Object) properties61, (java.lang.Object) atomikosProperties72);
        java.util.Properties properties79 = new java.util.Properties(properties61);
        java.lang.Object obj80 = properties79.clone();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel74 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel74.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.lang.Object obj5 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        boolean boolean24 = properties9.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount(100);
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setAllowSubTransactions(false);
        int int33 = atomikosProperties25.getConsoleFileCount();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setCheckpointInterval((long) (short) -1);
        boolean boolean38 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setConsoleFileLimit(18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        atomikosProperties41.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties41.setConsoleLogLevel(atomikosLoggingLevel51);
        boolean boolean53 = atomikosProperties41.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties41.asProperties();
        boolean boolean55 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) atomikosProperties41);
        boolean boolean56 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.String str57 = atomikosProperties25.getService();
        java.util.Properties properties58 = atomikosProperties25.asProperties();
        java.io.Writer writer59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.store(writer59, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(properties58);
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        int int33 = properties32.size();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties32.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.lang.String str42 = atomikosProperties36.getService();
        int int43 = atomikosProperties36.getMaxActives();
        boolean boolean44 = properties32.equals((java.lang.Object) atomikosProperties36);
        int int45 = atomikosProperties36.getConsoleFileCount();
        java.util.Properties properties46 = atomikosProperties36.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration48 = properties46.propertyNames();
        java.util.Properties properties49 = new java.util.Properties(properties46);
        int int50 = properties46.size();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 19 + "'", int50 == 19);
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        boolean boolean43 = atomikosProperties19.isEnableLogging();
        int int44 = atomikosProperties19.getConsoleFileCount();
        int int45 = atomikosProperties19.getMaxActives();
        long long46 = atomikosProperties19.getDefaultJtaTimeout();
        java.lang.String str47 = atomikosProperties19.getService();
        java.util.Properties properties48 = atomikosProperties19.asProperties();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getConsoleFileName();
        atomikosProperties53.setOutputDir("hi!");
        int int57 = atomikosProperties53.getConsoleFileLimit();
        java.lang.Object obj58 = properties50.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setLogBaseName("tm.out");
        atomikosProperties53.setForceShutdownOnVmExit(false);
        java.lang.String str63 = atomikosProperties53.getLogBaseDir();
        atomikosProperties53.setConsoleFileCount(0);
        long long66 = atomikosProperties53.getCheckpointInterval();
        java.util.Properties properties67 = atomikosProperties53.asProperties();
        boolean boolean68 = properties48.containsKey((java.lang.Object) properties67);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) 10);
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str12 = properties9.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}" + "'", str12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        atomikosProperties33.setAllowSubTransactions(false);
        boolean boolean38 = properties3.contains((java.lang.Object) false);
        java.util.Properties properties39 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        java.lang.Object obj43 = properties39.put((java.lang.Object) atomikosProperties40, (java.lang.Object) 0L);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.lang.Object obj53 = properties45.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties45.entrySet();
        java.util.Properties properties55 = new java.util.Properties(properties45);
        boolean boolean56 = properties3.remove((java.lang.Object) 0L, (java.lang.Object) properties45);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection58 = properties57.values();
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.keys();
        boolean boolean61 = properties45.containsValue((java.lang.Object) properties59);
        java.util.Properties properties62 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        java.lang.Object obj66 = properties62.put((java.lang.Object) atomikosProperties63, (java.lang.Object) 0L);
        long long67 = atomikosProperties63.getCheckpointInterval();
        boolean boolean68 = properties59.contains((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setCheckpointInterval(19L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery28);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        boolean boolean24 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties22.keySet();
        java.lang.Object obj26 = properties0.replace((java.lang.Object) properties18, (java.lang.Object) objSet25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        boolean boolean31 = atomikosProperties27.isThreadedTwoPhaseCommit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        atomikosProperties27.setCheckpointInterval((long) ' ');
        atomikosProperties27.setMaxActives((-1));
        long long37 = atomikosProperties27.getMaxTimeout();
        atomikosProperties27.setCheckpointInterval((long) 35);
        java.lang.Object obj40 = properties18.get((java.lang.Object) 35);
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.loadFromXML(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties11.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        atomikosProperties17.setAllowSubTransactions(false);
        boolean boolean22 = properties11.containsValue((java.lang.Object) false);
        boolean boolean23 = properties5.contains((java.lang.Object) properties11);
        java.util.Properties properties24 = new java.util.Properties(properties11);
        java.lang.Object obj27 = properties11.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{}");
        java.io.InputStream inputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(inputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        int int8 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        int int10 = recovery9.getMaxRetries();
        long long11 = recovery9.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) 0);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        java.lang.String str19 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{hi!=}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.keys();
        boolean boolean20 = properties18.isEmpty();
        java.util.Properties properties21 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str23 = atomikosProperties22.getConsoleFileName();
        java.lang.Object obj25 = properties21.put((java.lang.Object) atomikosProperties22, (java.lang.Object) 0L);
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.lang.Object obj28 = properties21.get((java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount((-1));
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj42 = properties35.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        boolean boolean50 = properties35.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setConsoleFileCount(100);
        atomikosProperties51.setAllowSubTransactions(true);
        java.lang.Object obj56 = properties35.remove((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setAllowSubTransactions(false);
        atomikosProperties51.setSerialJtaTransactions(true);
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        atomikosProperties65.setOutputDir("hi!");
        int int69 = atomikosProperties65.getConsoleFileLimit();
        java.lang.Object obj70 = properties62.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel71);
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel71);
        atomikosProperties29.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Set<java.lang.String> strSet78 = properties77.stringPropertyNames();
        java.lang.Object obj79 = properties21.replace((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) properties77);
        properties77.clear();
        java.util.Properties properties81 = new java.util.Properties(properties77);
        boolean boolean82 = properties18.containsValue((java.lang.Object) properties81);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str84 = atomikosProperties83.getConsoleFileName();
        java.lang.String str85 = atomikosProperties83.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel86 = atomikosProperties83.getConsoleLogLevel();
        atomikosProperties83.setLogBaseDir("tm.out");
        java.lang.String str89 = atomikosProperties83.getLogBaseDir();
        atomikosProperties83.setConsoleFileCount((int) (byte) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery92 = atomikosProperties83.getRecovery();
        java.lang.Object obj93 = properties18.remove((java.lang.Object) recovery92);
        java.util.Enumeration<?> wildcardEnumeration94 = properties18.propertyNames();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tm.out" + "'", str84, "tm.out");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel86 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel86.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tm.out" + "'", str89, "tm.out");
        org.junit.Assert.assertNotNull(recovery92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(wildcardEnumeration94);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties1.asProperties();
        atomikosProperties1.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str13 = atomikosProperties1.getOutputDir();
        long long14 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str15 = atomikosProperties1.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.lang.Object obj5 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        boolean boolean24 = properties9.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount(100);
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setAllowSubTransactions(false);
        int int33 = atomikosProperties25.getConsoleFileCount();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setCheckpointInterval((long) (short) -1);
        boolean boolean38 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setConsoleFileLimit(18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        atomikosProperties41.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties41.setConsoleLogLevel(atomikosLoggingLevel51);
        boolean boolean53 = atomikosProperties41.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties41.asProperties();
        boolean boolean55 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) atomikosProperties41);
        atomikosProperties25.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str58 = atomikosProperties25.getOutputDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        int int8 = atomikosProperties0.getConsoleFileCount();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties4.asProperties();
        java.lang.String str16 = atomikosProperties4.getLogBaseDir();
        boolean boolean17 = atomikosProperties4.isSerialJtaTransactions();
        int int18 = atomikosProperties4.getConsoleFileLimit();
        long long19 = atomikosProperties4.getMaxTimeout();
        long long20 = atomikosProperties4.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Properties properties11 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        atomikosProperties12.setConsoleFileName("");
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.lang.Object obj26 = properties18.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties12.setMaxActives((int) ' ');
        atomikosProperties12.setDefaultJtaTimeout((long) 1);
        java.lang.Object obj33 = properties1.remove((java.lang.Object) 1);
        java.lang.Object obj36 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        int int39 = properties38.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties38.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        int int47 = atomikosProperties41.getConsoleFileCount();
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        boolean boolean49 = properties38.equals((java.lang.Object) atomikosProperties41);
        java.util.Set<java.lang.String> strSet50 = properties38.stringPropertyNames();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.lang.Object obj59 = properties52.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties61 = new java.util.Properties(properties52);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties61.keys();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration63);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.String str17 = atomikosProperties12.getService();
        java.lang.String str18 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setOutputDir("tmlog");
        long long21 = atomikosProperties12.getMaxTimeout();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        int int23 = atomikosProperties12.getConsoleFileCount();
        atomikosProperties12.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        boolean boolean31 = atomikosProperties26.isForceShutdownOnVmExit();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) atomikosProperties12, (java.lang.Object) boolean31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setAllowSubTransactions(true);
        atomikosProperties33.setMaxTimeout((long) '4');
        java.lang.String str40 = atomikosProperties33.getLogBaseDir();
        int int41 = atomikosProperties33.getConsoleFileCount();
        int int42 = atomikosProperties33.getMaxActives();
        int int43 = atomikosProperties33.getMaxActives();
        boolean boolean44 = properties11.contains((java.lang.Object) atomikosProperties33);
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        atomikosProperties33.setMaxActives(2);
        java.util.Properties properties48 = atomikosProperties33.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int50 = recovery49.getMaxRetries();
        recovery49.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery49.setMaxRetries((int) '4');
        recovery49.setMaxRetries((int) '#');
        long long57 = recovery49.getDelay();
        boolean boolean58 = properties48.contains((java.lang.Object) long57);
        java.io.Writer writer59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.store(writer59, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.lang.Object obj22 = properties14.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties17);
        boolean boolean23 = atomikosProperties17.isForceShutdownOnVmExit();
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties17.getService();
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj29 = properties5.get((java.lang.Object) "");
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        int int32 = properties31.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.lang.String str39 = atomikosProperties34.getService();
        atomikosProperties34.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        java.lang.Object obj51 = properties43.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties46);
        boolean boolean52 = atomikosProperties46.isForceShutdownOnVmExit();
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str55 = atomikosProperties46.getService();
        atomikosProperties46.setTransactionManagerUniqueName("");
        atomikosProperties46.setOutputDir("hi!");
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setThreadedTwoPhaseCommit(false);
        int int64 = atomikosProperties46.getConsoleFileCount();
        int int65 = atomikosProperties46.getConsoleFileLimit();
        boolean boolean66 = properties31.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) atomikosProperties46);
        java.io.PrintStream printStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.list(printStream67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        int int11 = atomikosProperties4.getConsoleFileCount();
        atomikosProperties4.setConsoleFileName("hi!");
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str16 = atomikosProperties4.getService();
        atomikosProperties4.setCheckpointInterval(86400000L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str16, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        int int50 = properties2.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setConsoleFileCount((-1));
        atomikosProperties51.setTransactionManagerUniqueName("tm.out");
        java.lang.String str56 = atomikosProperties51.getLogBaseName();
        atomikosProperties51.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setCheckpointInterval((long) 10);
        int int63 = atomikosProperties51.getMaxActives();
        boolean boolean64 = properties2.equals((java.lang.Object) int63);
        java.lang.Object obj67 = properties2.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setConsoleFileCount(100);
        atomikosProperties68.setAllowSubTransactions(true);
        java.lang.String str73 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties68.isEnableLogging();
        java.lang.String str77 = atomikosProperties68.getLogBaseName();
        atomikosProperties68.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean80 = properties2.containsKey((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean10 = properties8.containsValue((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.String str13 = properties8.getProperty("hi!");
        java.util.Set<java.lang.String> strSet14 = properties8.stringPropertyNames();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean18 = properties16.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setOutputDir("hi!");
        int int27 = atomikosProperties23.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties23.getConsoleLogLevel();
        java.lang.Object obj29 = properties16.putIfAbsent((java.lang.Object) atomikosProperties19, (java.lang.Object) atomikosLoggingLevel28);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) (byte) -1);
        java.util.Properties properties33 = new java.util.Properties(properties30);
        boolean boolean34 = properties16.equals((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties16.keys();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.setProperty("", "hi!");
        java.util.Properties properties45 = new java.util.Properties(properties37);
        boolean boolean46 = properties37.isEmpty();
        boolean boolean47 = properties16.contains((java.lang.Object) boolean46);
        java.util.Set<java.lang.String> strSet48 = properties16.stringPropertyNames();
        java.util.Properties properties49 = new java.util.Properties(properties16);
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        java.lang.Object obj51 = properties1.putIfAbsent((java.lang.Object) strSet14, (java.lang.Object) objSet50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setOutputDir("hi!");
        int int56 = atomikosProperties52.getConsoleFileLimit();
        java.lang.String str57 = atomikosProperties52.getService();
        java.lang.String str58 = atomikosProperties52.getService();
        int int59 = atomikosProperties52.getConsoleFileLimit();
        atomikosProperties52.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties62 = atomikosProperties52.asProperties();
        atomikosProperties52.setCheckpointInterval(5L);
        atomikosProperties52.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getConsoleFileName();
        atomikosProperties72.setOutputDir("hi!");
        int int76 = atomikosProperties72.getConsoleFileLimit();
        java.lang.Object obj77 = properties69.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties72);
        boolean boolean78 = atomikosProperties72.isForceShutdownOnVmExit();
        atomikosProperties72.setConsoleFileName("");
        java.lang.String str81 = atomikosProperties72.getService();
        atomikosProperties72.setForceShutdownOnVmExit(true);
        java.util.Properties properties84 = atomikosProperties72.asProperties();
        boolean boolean85 = properties1.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}", (java.lang.Object) properties84);
        atomikosProperties52.setCheckpointInterval(10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount(32);
        long long13 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setOutputDir("{}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int17 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties44 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        java.lang.Object obj48 = properties44.put((java.lang.Object) atomikosProperties45, (java.lang.Object) 0L);
        properties44.clear();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.lang.String str52 = properties50.getProperty("{}");
        boolean boolean53 = properties7.containsKey((java.lang.Object) "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setConsoleFileCount(100);
        atomikosProperties54.setAllowSubTransactions(true);
        java.lang.String str59 = atomikosProperties54.getConsoleFileName();
        java.util.Properties properties60 = atomikosProperties54.asProperties();
        boolean boolean61 = properties60.isEmpty();
        java.util.Properties properties62 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        java.lang.Object obj66 = properties62.put((java.lang.Object) atomikosProperties63, (java.lang.Object) 0L);
        long long67 = atomikosProperties63.getCheckpointInterval();
        atomikosProperties63.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        int int71 = atomikosProperties63.getConsoleFileCount();
        java.lang.Object obj72 = properties7.put((java.lang.Object) boolean61, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setCheckpointInterval((long) 18);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setService("tm.out");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileCount(1);
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration6 = properties5.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = new java.util.Properties(properties7);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long13 = recovery12.getForgetOrphanedLogEntriesDelay();
        recovery12.setDelay((long) (short) 1);
        recovery12.setDelay((long) (-1));
        recovery12.setForgetOrphanedLogEntriesDelay(10000L);
        recovery12.setMaxRetries((-1));
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        int int24 = properties23.size();
        boolean boolean25 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties23.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        long long29 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties37 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        java.lang.Object obj41 = properties37.put((java.lang.Object) atomikosProperties38, (java.lang.Object) 0L);
        properties37.clear();
        java.util.Properties properties43 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        java.lang.Object obj47 = properties43.put((java.lang.Object) atomikosProperties44, (java.lang.Object) 0L);
        java.util.Properties properties48 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        atomikosProperties49.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj54 = properties43.remove((java.lang.Object) atomikosProperties49);
        java.lang.Object obj55 = properties32.getOrDefault((java.lang.Object) properties37, (java.lang.Object) properties43);
        java.lang.Object obj56 = properties23.replace((java.lang.Object) atomikosProperties27, obj55);
        atomikosProperties27.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setConsoleFileCount(100);
        int int62 = atomikosProperties59.getConsoleFileCount();
        atomikosProperties59.setOutputDir("");
        java.lang.String str65 = atomikosProperties59.getConsoleFileName();
        int int66 = atomikosProperties59.getConsoleFileCount();
        boolean boolean67 = atomikosProperties59.isEnableLogging();
        java.lang.String str68 = atomikosProperties59.getConsoleFileName();
        boolean boolean69 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str70 = atomikosProperties59.getLogBaseDir();
        atomikosProperties59.setConsoleFileCount((int) ' ');
        java.lang.String str73 = atomikosProperties59.getTransactionManagerUniqueName();
        boolean boolean74 = properties1.replace((java.lang.Object) recovery12, (java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties59);
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream75, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tm.out" + "'", str68, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = new java.util.Properties(properties3);
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        boolean boolean47 = properties32.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount(100);
        atomikosProperties48.setAllowSubTransactions(true);
        java.lang.Object obj53 = properties32.remove((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setAllowSubTransactions(false);
        long long56 = atomikosProperties48.getCheckpointInterval();
        boolean boolean57 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setConsoleFileCount((int) 'a');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setConsoleFileCount(100);
        int int63 = atomikosProperties60.getConsoleFileCount();
        java.lang.Object obj64 = properties28.getOrDefault((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties60);
        int int65 = atomikosProperties60.getConsoleFileLimit();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = atomikosProperties60.getRecovery();
        atomikosProperties60.setCheckpointInterval((long) 0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(recovery70);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        int int4 = atomikosProperties0.getMaxActives();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        atomikosProperties6.setMaxActives((-1));
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel30);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties6.getConsoleLogLevel();
        java.util.Properties properties34 = atomikosProperties6.asProperties();
        boolean boolean35 = atomikosProperties6.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        boolean boolean15 = properties9.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj16 = properties4.remove((java.lang.Object) properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties4.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties21.setSerialJtaTransactions(false);
        java.util.Properties properties29 = atomikosProperties21.asProperties();
        java.lang.Object obj30 = properties18.remove((java.lang.Object) atomikosProperties21);
        java.lang.String str31 = atomikosProperties21.getLogBaseName();
        atomikosProperties21.setEnableLogging(false);
        java.lang.Object obj34 = properties2.getOrDefault((java.lang.Object) objEntrySet17, (java.lang.Object) atomikosProperties21);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties2.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean39 = properties37.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getTransactionManagerUniqueName();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        atomikosProperties44.setOutputDir("hi!");
        int int48 = atomikosProperties44.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = atomikosProperties44.getConsoleLogLevel();
        java.lang.Object obj50 = properties37.putIfAbsent((java.lang.Object) atomikosProperties40, (java.lang.Object) atomikosLoggingLevel49);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.get((java.lang.Object) (byte) -1);
        java.util.Properties properties54 = new java.util.Properties(properties51);
        boolean boolean55 = properties37.equals((java.lang.Object) properties51);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        java.lang.Object obj65 = properties57.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties60);
        boolean boolean66 = atomikosProperties60.isForceShutdownOnVmExit();
        atomikosProperties60.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties60.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = atomikosProperties60.getRecovery();
        long long71 = recovery70.getDelay();
        boolean boolean72 = properties51.containsValue((java.lang.Object) recovery70);
        recovery70.setDelay((long) 0);
        long long75 = recovery70.getRetryInterval();
        java.util.Properties properties76 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getConsoleFileName();
        java.lang.Object obj80 = properties76.put((java.lang.Object) atomikosProperties77, (java.lang.Object) 0L);
        java.util.Properties properties81 = new java.util.Properties(properties76);
        java.lang.Object obj82 = properties76.clone();
        java.lang.Object obj83 = properties2.putIfAbsent((java.lang.Object) recovery70, (java.lang.Object) properties76);
        recovery70.setForgetOrphanedLogEntriesDelay(86400000L);
        int int86 = recovery70.getMaxRetries();
        recovery70.setRetryInterval((long) 10);
        long long89 = recovery70.getForgetOrphanedLogEntriesDelay();
        recovery70.setMaxRetries((int) (byte) 0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(recovery70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10000L + "'", long71 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 86400000L + "'", long89 == 86400000L);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        int int12 = atomikosProperties0.getMaxActives();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.lang.Object obj25 = properties18.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        boolean boolean33 = properties18.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount(100);
        atomikosProperties34.setAllowSubTransactions(true);
        java.lang.Object obj39 = properties18.remove((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setAllowSubTransactions(false);
        atomikosProperties34.setSerialJtaTransactions(true);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.lang.Object obj53 = properties45.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties48);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties48.getConsoleLogLevel();
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel54);
        atomikosProperties34.setDefaultJtaTimeout((long) 10);
        boolean boolean58 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileCount(100);
        atomikosProperties61.setAllowSubTransactions(true);
        boolean boolean66 = atomikosProperties61.isForceShutdownOnVmExit();
        atomikosProperties61.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str70 = atomikosProperties69.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties69.getConsoleLogLevel();
        atomikosProperties61.setConsoleLogLevel(atomikosLoggingLevel71);
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel71);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel71);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(20);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        int int14 = atomikosProperties7.getConsoleFileLimit();
        atomikosProperties7.setConsoleFileName("");
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.lang.Object obj18 = properties5.setProperty("", "");
        java.util.Properties properties19 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.Object obj23 = properties19.put((java.lang.Object) atomikosProperties20, (java.lang.Object) 0L);
        properties19.clear();
        java.util.Properties properties25 = new java.util.Properties(properties19);
        java.lang.String str27 = properties25.getProperty("{}");
        boolean boolean28 = properties5.equals((java.lang.Object) str27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount((-1));
        java.lang.String str32 = atomikosProperties29.getOutputDir();
        atomikosProperties29.setLogBaseName("tm.out");
        atomikosProperties29.setLogBaseDir("tm.out");
        java.lang.String str37 = atomikosProperties29.getLogBaseDir();
        atomikosProperties29.setDefaultJtaTimeout(10L);
        java.util.Properties properties40 = atomikosProperties29.asProperties();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj51 = properties44.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount((-1));
        java.lang.String str56 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setLogBaseName("tm.out");
        boolean boolean59 = properties44.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setConsoleFileCount(100);
        atomikosProperties60.setAllowSubTransactions(true);
        java.lang.Object obj65 = properties44.remove((java.lang.Object) atomikosProperties60);
        java.util.Set<java.lang.Object> objSet66 = properties44.keySet();
        int int67 = properties44.size();
        java.util.Properties properties68 = new java.util.Properties(properties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties44.entrySet();
        boolean boolean70 = properties5.remove((java.lang.Object) properties40, (java.lang.Object) properties44);
        properties44.clear();
        boolean boolean72 = properties44.isEmpty();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream6, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.util.Properties properties2 = new java.util.Properties(properties1);
        properties2.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setOutputDir("hi!");
        int int9 = atomikosProperties5.getConsoleFileLimit();
        java.lang.Object obj10 = properties2.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties5);
        boolean boolean11 = atomikosProperties5.isForceShutdownOnVmExit();
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties5.getService();
        boolean boolean15 = atomikosProperties5.isEnableLogging();
        long long16 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.lang.Object obj26 = properties18.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties21);
        boolean boolean27 = atomikosProperties21.isForceShutdownOnVmExit();
        atomikosProperties21.setOutputDir("tm.out");
        java.lang.Object obj30 = properties0.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) "tm.out");
        atomikosProperties5.setLogBaseDir("");
        atomikosProperties5.setLogBaseDir("");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str27 = properties25.getProperty("");
        properties25.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount(100);
        int int32 = atomikosProperties29.getConsoleFileCount();
        atomikosProperties29.setOutputDir("");
        java.lang.String str35 = atomikosProperties29.getConsoleFileName();
        long long36 = atomikosProperties29.getMaxTimeout();
        atomikosProperties29.setMaxActives(100);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getConsoleFileName();
        atomikosProperties43.setOutputDir("hi!");
        int int47 = atomikosProperties43.getConsoleFileLimit();
        java.lang.Object obj48 = properties40.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties43);
        boolean boolean49 = atomikosProperties43.isForceShutdownOnVmExit();
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties43.getService();
        boolean boolean53 = atomikosProperties43.isEnableLogging();
        java.lang.Object obj54 = properties25.put((java.lang.Object) atomikosProperties29, (java.lang.Object) boolean53);
        java.lang.Object obj57 = properties25.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.lang.String str32 = properties29.getProperty("");
        boolean boolean33 = properties3.equals((java.lang.Object) "");
        java.util.Enumeration<?> wildcardEnumeration34 = properties3.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties3.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj50 = properties45.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean51 = properties41.equals(obj50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties41.entrySet();
        int int53 = properties41.size();
        java.util.Properties properties54 = new java.util.Properties(properties41);
        java.lang.Object obj55 = properties3.remove((java.lang.Object) properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 19 + "'", int53 == 19);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        int int15 = atomikosProperties7.getMaxActives();
        java.lang.String str16 = atomikosProperties7.getLogBaseName();
        java.lang.String str17 = atomikosProperties7.getService();
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        int int19 = atomikosProperties7.getMaxActives();
        atomikosProperties7.setThreadedTwoPhaseCommit(false);
        boolean boolean22 = atomikosProperties7.isEnableLogging();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        long long30 = atomikosProperties19.getDefaultJtaTimeout();
        long long31 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setDefaultJtaTimeout((long) 19);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        atomikosProperties44.setLogBaseDir("tm.out");
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean55 = properties37.replace((java.lang.Object) objSet42, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties44);
        java.lang.String str56 = atomikosProperties44.getService();
        java.lang.Object obj57 = properties29.remove((java.lang.Object) atomikosProperties44);
        java.lang.String str58 = properties29.toString();
        int int59 = properties29.size();
        java.lang.String str61 = properties29.getProperty("{tm.out=}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties2.entrySet();
        java.util.Set<java.lang.Object> objSet5 = properties2.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        java.lang.String str9 = atomikosProperties6.getOutputDir();
        atomikosProperties6.setLogBaseName("tm.out");
        atomikosProperties6.setLogBaseDir("tm.out");
        java.lang.String str14 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setDefaultJtaTimeout(10L);
        atomikosProperties6.setSerialJtaTransactions(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        long long36 = recovery34.getForgetOrphanedLogEntriesDelay();
        recovery34.setMaxRetries((int) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount(100);
        int int42 = atomikosProperties39.getConsoleFileCount();
        atomikosProperties39.setOutputDir("");
        java.lang.String str45 = atomikosProperties39.getConsoleFileName();
        long long46 = atomikosProperties39.getMaxTimeout();
        atomikosProperties39.setMaxActives(100);
        boolean boolean49 = properties2.replace((java.lang.Object) atomikosProperties6, (java.lang.Object) (short) 1, (java.lang.Object) 100);
        java.lang.String str50 = atomikosProperties6.getTransactionManagerUniqueName();
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        atomikosProperties6.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties55 = atomikosProperties6.asProperties();
        atomikosProperties6.setLogBaseName("{hi!=10}");
        int int58 = atomikosProperties6.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setAllowSubTransactions(true);
        boolean boolean38 = atomikosProperties33.isForceShutdownOnVmExit();
        int int39 = atomikosProperties33.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties33.getRecovery();
        boolean boolean41 = properties3.equals((java.lang.Object) atomikosProperties33);
        java.util.Properties properties42 = atomikosProperties33.asProperties();
        long long43 = atomikosProperties33.getMaxTimeout();
        atomikosProperties33.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        boolean boolean29 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setOutputDir("{}");
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setConsoleFileLimit(10);
        atomikosProperties19.setMaxActives((int) ' ');
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setDefaultJtaTimeout(0L);
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties1.getRecovery();
        atomikosProperties1.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        boolean boolean12 = atomikosProperties4.isForceShutdownOnVmExit();
        boolean boolean13 = atomikosProperties4.isForceShutdownOnVmExit();
        boolean boolean14 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties4.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties4.getRecovery();
        recovery16.setRetryInterval((long) (byte) -1);
        recovery16.setDelay((long) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(recovery16);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.lang.Object obj4 = properties1.get((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection5 = properties1.values();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.save(outputStream7, "{10=10.0, ={10=10.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objCollection5);
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.get((java.lang.Object) (byte) -1);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.String str18 = atomikosProperties16.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties16.getConsoleLogLevel();
        boolean boolean20 = properties12.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str21 = properties12.toString();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel29);
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean33 = properties24.containsValue((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str36 = atomikosProperties25.getLogBaseName();
        java.lang.Object obj37 = properties11.put((java.lang.Object) str21, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setConsoleFileName("{hi!=}");
        boolean boolean40 = atomikosProperties25.isThreadedTwoPhaseCommit();
        java.lang.String str41 = atomikosProperties25.getOutputDir();
        long long42 = atomikosProperties25.getMaxTimeout();
        atomikosProperties25.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties45 = atomikosProperties25.asProperties();
        java.lang.Class<?> wildcardClass46 = atomikosProperties25.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getConsoleFileName();
        java.util.Properties properties7 = atomikosProperties1.asProperties();
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getService();
        atomikosProperties1.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass12 = atomikosProperties1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        int int15 = atomikosProperties4.getMaxActives();
        java.lang.String str16 = atomikosProperties4.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties4.getRecovery();
        boolean boolean18 = atomikosProperties4.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(recovery17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        int int17 = atomikosProperties4.getConsoleFileCount();
        java.util.Properties properties18 = atomikosProperties4.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        java.lang.Object obj9 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setOutputDir("hi!");
        int int14 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setDefaultJtaTimeout(1L);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setLogBaseDir("tmlog");
        boolean boolean21 = properties5.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount(100);
        atomikosProperties22.setAllowSubTransactions(true);
        boolean boolean27 = atomikosProperties22.isForceShutdownOnVmExit();
        int int28 = atomikosProperties22.getConsoleFileCount();
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        atomikosProperties22.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.lang.String str39 = atomikosProperties34.getService();
        java.lang.String str40 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setOutputDir("tmlog");
        long long43 = atomikosProperties34.getMaxTimeout();
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean46 = atomikosProperties34.isAllowSubTransactions();
        java.lang.Object obj47 = properties5.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosProperties34);
        atomikosProperties22.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount(100);
        atomikosProperties16.setAllowSubTransactions(true);
        java.lang.String str21 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setDefaultJtaTimeout((long) 0);
        boolean boolean24 = atomikosProperties16.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties16.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel25);
        java.lang.String str27 = atomikosProperties4.getLogBaseName();
        long long28 = atomikosProperties4.getMaxTimeout();
        boolean boolean29 = atomikosProperties4.isThreadedTwoPhaseCommit();
        atomikosProperties4.setCheckpointInterval(300000L);
        java.lang.String str32 = atomikosProperties4.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.lang.String str8 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long4 = recovery0.getRetryInterval();
        recovery0.setMaxRetries(35);
        recovery0.setDelay((long) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str2 = atomikosProperties0.getOutputDir();
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setEnableLogging(false);
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount(100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel13);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getRetryInterval();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) '4');
        long long9 = recovery0.getRetryInterval();
        int int10 = recovery0.getMaxRetries();
        long long11 = recovery0.getDelay();
        recovery0.setRetryInterval((long) 35);
        recovery0.setRetryInterval(52L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection50 = properties49.values();
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.keys();
        boolean boolean53 = properties29.containsValue((java.lang.Object) properties49);
        java.util.Properties properties54 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setConsoleFileCount((-1));
        atomikosProperties55.setConsoleFileName("");
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties(properties60);
        properties61.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getConsoleFileName();
        atomikosProperties64.setOutputDir("hi!");
        int int68 = atomikosProperties64.getConsoleFileLimit();
        java.lang.Object obj69 = properties61.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties55.setConsoleLogLevel(atomikosLoggingLevel70);
        atomikosProperties55.setMaxActives((int) ' ');
        atomikosProperties55.setEnableLogging(false);
        atomikosProperties55.setService("tm.out");
        int int78 = atomikosProperties55.getConsoleFileCount();
        java.lang.Object obj79 = properties49.remove((java.lang.Object) atomikosProperties55);
        atomikosProperties55.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties4.getRecovery();
        long long15 = recovery14.getDelay();
        long long16 = recovery14.getForgetOrphanedLogEntriesDelay();
        int int17 = recovery14.getMaxRetries();
        long long18 = recovery14.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties0.clone();
        java.util.Set<java.lang.Object> objSet7 = properties0.keySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount(100);
        int int12 = atomikosProperties9.getConsoleFileCount();
        atomikosProperties9.setOutputDir("");
        java.lang.String str15 = atomikosProperties9.getConsoleFileName();
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        atomikosProperties18.setConsoleFileName("");
        atomikosProperties18.setDefaultJtaTimeout((long) '4');
        java.lang.Object obj25 = properties8.replace((java.lang.Object) properties17, (java.lang.Object) atomikosProperties18);
        java.util.Properties properties26 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        java.lang.String str33 = atomikosProperties28.getService();
        java.lang.String str34 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setOutputDir("tmlog");
        long long37 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setEnableLogging(true);
        atomikosProperties28.setSerialJtaTransactions(true);
        atomikosProperties28.setConsoleFileLimit(32);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection45 = properties44.values();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        properties49.clear();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj54 = properties47.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setConsoleFileCount((-1));
        java.lang.String str59 = atomikosProperties56.getOutputDir();
        atomikosProperties56.setLogBaseName("tm.out");
        boolean boolean62 = properties47.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount(100);
        atomikosProperties63.setAllowSubTransactions(true);
        java.lang.Object obj68 = properties47.remove((java.lang.Object) atomikosProperties63);
        java.util.Properties properties69 = new java.util.Properties(properties47);
        java.lang.String str71 = properties69.getProperty("");
        java.util.Set<java.lang.Object> objSet72 = properties69.keySet();
        java.util.Set<java.lang.String> strSet73 = properties69.stringPropertyNames();
        java.lang.Object obj74 = properties26.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) properties69);
        boolean boolean75 = atomikosProperties28.isThreadedTwoPhaseCommit();
        atomikosProperties28.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getRetryInterval();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) '4');
        long long9 = recovery0.getRetryInterval();
        int int10 = recovery0.getMaxRetries();
        long long11 = recovery0.getDelay();
        recovery0.setDelay((long) 2);
        long long14 = recovery0.getRetryInterval();
        long long15 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 52L + "'", long14 == 52L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount((-1));
        java.lang.String str12 = atomikosProperties9.getOutputDir();
        atomikosProperties9.setLogBaseName("tm.out");
        atomikosProperties9.setLogBaseDir("tm.out");
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties9.setSerialJtaTransactions(false);
        int int24 = atomikosProperties9.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.String str10 = properties8.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        java.lang.Object obj20 = properties12.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties15);
        boolean boolean21 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties15.getService();
        atomikosProperties15.setTransactionManagerUniqueName("");
        atomikosProperties15.setOutputDir("hi!");
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean31 = atomikosProperties15.isEnableLogging();
        boolean boolean32 = properties8.containsValue((java.lang.Object) atomikosProperties15);
        java.util.Collection<java.lang.Object> objCollection33 = properties8.values();
        java.lang.Object obj34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = properties8.remove(obj34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objCollection33);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        boolean boolean10 = properties1.isEmpty();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties1.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean16 = properties13.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Collection<java.lang.Object> objCollection24 = properties21.values();
        java.lang.Object obj25 = properties13.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties13.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        atomikosProperties27.setLogBaseDir("tm.out");
        java.lang.String str35 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.setDefaultJtaTimeout(10L);
        java.lang.String str38 = atomikosProperties27.getService();
        atomikosProperties27.setEnableLogging(true);
        java.lang.Object obj41 = properties1.getOrDefault((java.lang.Object) objEnumeration26, (java.lang.Object) true);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        int int8 = properties7.size();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        boolean boolean36 = properties7.containsKey((java.lang.Object) atomikosProperties28);
        java.lang.String str37 = atomikosProperties28.getTransactionManagerUniqueName();
        atomikosProperties28.setDefaultJtaTimeout((long) 5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties28.getRecovery();
        int int41 = atomikosProperties28.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setOutputDir("hi!");
        int int20 = atomikosProperties16.getConsoleFileLimit();
        java.lang.Object obj21 = properties13.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setLogBaseName("tm.out");
        long long24 = atomikosProperties16.getDefaultJtaTimeout();
        int int25 = atomikosProperties16.getConsoleFileCount();
        java.lang.String str26 = atomikosProperties16.getOutputDir();
        atomikosProperties16.setMaxTimeout(100L);
        atomikosProperties16.setMaxTimeout(52L);
        java.lang.Object obj31 = properties3.remove((java.lang.Object) 52L);
        java.io.InputStream inputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.loadFromXML(inputStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        atomikosProperties10.setLogBaseDir("tm.out");
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean20 = properties9.containsValue((java.lang.Object) false);
        java.util.Set<java.lang.Object> objSet21 = properties9.keySet();
        java.lang.String str22 = properties9.toString();
        java.util.Properties properties23 = new java.util.Properties(properties9);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        boolean boolean15 = properties13.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.Object obj26 = properties19.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean31 = properties29.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        boolean boolean52 = properties37.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount(100);
        atomikosProperties53.setAllowSubTransactions(true);
        java.lang.Object obj58 = properties37.remove((java.lang.Object) atomikosProperties53);
        java.util.Set<java.lang.Object> objSet59 = properties37.keySet();
        boolean boolean60 = properties13.replace((java.lang.Object) properties19, (java.lang.Object) objEntrySet33, (java.lang.Object) properties37);
        java.lang.String str62 = properties19.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount((-1));
        atomikosProperties63.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties70.getConsoleLogLevel();
        atomikosProperties68.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.Object obj77 = properties10.replace((java.lang.Object) properties19, (java.lang.Object) (byte) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties19.entrySet();
        java.util.Properties properties79 = new java.util.Properties(properties19);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEntrySet78);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.lang.Object obj4 = properties1.get((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection5 = properties1.values();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties1.asProperties();
        boolean boolean11 = atomikosProperties1.isSerialJtaTransactions();
        atomikosProperties1.setConsoleFileLimit(2);
        java.lang.String str14 = atomikosProperties1.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = properties9.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.String> strSet13 = properties9.stringPropertyNames();
        java.io.InputStream inputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        long long7 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties8 = atomikosProperties5.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties15 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.Object obj19 = properties15.put((java.lang.Object) atomikosProperties16, (java.lang.Object) 0L);
        properties15.clear();
        java.util.Properties properties21 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str23 = atomikosProperties22.getConsoleFileName();
        java.lang.Object obj25 = properties21.put((java.lang.Object) atomikosProperties22, (java.lang.Object) 0L);
        java.util.Properties properties26 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        atomikosProperties27.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj32 = properties21.remove((java.lang.Object) atomikosProperties27);
        java.lang.Object obj33 = properties10.getOrDefault((java.lang.Object) properties15, (java.lang.Object) properties21);
        java.lang.Object obj34 = properties1.replace((java.lang.Object) atomikosProperties5, obj33);
        atomikosProperties5.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties5.setOutputDir("tmlog");
        boolean boolean39 = atomikosProperties5.isAllowSubTransactions();
        atomikosProperties5.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setCheckpointInterval((long) 1);
        atomikosProperties6.setTransactionManagerUniqueName("{10=10.0}");
        boolean boolean16 = atomikosProperties6.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setDelay((long) (short) 1);
        recovery6.setRetryInterval(100L);
        recovery6.setMaxRetries((int) (byte) 100);
        long long14 = recovery6.getForgetOrphanedLogEntriesDelay();
        boolean boolean15 = properties5.containsValue((java.lang.Object) recovery6);
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.store(writer16, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj7 = properties0.get((java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setConsoleFileCount((-1));
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties14.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        java.lang.String str26 = atomikosProperties23.getOutputDir();
        atomikosProperties23.setLogBaseName("tm.out");
        boolean boolean29 = properties14.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount(100);
        atomikosProperties30.setAllowSubTransactions(true);
        java.lang.Object obj35 = properties14.remove((java.lang.Object) atomikosProperties30);
        atomikosProperties30.setAllowSubTransactions(false);
        atomikosProperties30.setSerialJtaTransactions(true);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        atomikosProperties44.setOutputDir("hi!");
        int int48 = atomikosProperties44.getConsoleFileLimit();
        java.lang.Object obj49 = properties41.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel50);
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel50);
        atomikosProperties8.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Set<java.lang.String> strSet57 = properties56.stringPropertyNames();
        java.lang.Object obj58 = properties0.replace((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) properties56);
        properties56.clear();
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties56.entrySet();
        int int62 = properties56.size();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        java.util.Properties properties38 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        boolean boolean45 = atomikosProperties40.isForceShutdownOnVmExit();
        boolean boolean46 = properties38.containsKey((java.lang.Object) boolean45);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        int int49 = properties48.size();
        boolean boolean50 = properties48.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        boolean boolean56 = properties54.isEmpty();
        boolean boolean57 = properties48.containsValue((java.lang.Object) boolean56);
        java.util.Properties properties58 = new java.util.Properties(properties48);
        java.lang.Object obj59 = properties48.clone();
        java.util.Collection<java.lang.Object> objCollection60 = properties48.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        atomikosProperties65.setOutputDir("hi!");
        int int69 = atomikosProperties65.getConsoleFileLimit();
        java.lang.Object obj70 = properties62.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setLogBaseName("tm.out");
        long long73 = atomikosProperties65.getDefaultJtaTimeout();
        int int74 = atomikosProperties65.getConsoleFileCount();
        java.lang.String str75 = atomikosProperties65.getLogBaseName();
        java.util.Properties properties76 = atomikosProperties65.asProperties();
        java.lang.Object obj77 = properties38.putIfAbsent((java.lang.Object) properties48, (java.lang.Object) atomikosProperties65);
        java.util.Set<java.lang.String> strSet78 = properties38.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 10000L + "'", long73 == 10000L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tm.out" + "'", str75, "tm.out");
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strSet78);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        int int8 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        recovery9.setMaxRetries((int) (short) -1);
        int int12 = recovery9.getMaxRetries();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}", "{}");
        java.lang.Object obj12 = properties8.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        properties8.clear();
        java.io.Reader reader15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(reader15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(objEntrySet13);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        int int13 = atomikosProperties4.getConsoleFileCount();
        atomikosProperties4.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.get((java.lang.Object) (byte) -1);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.String str18 = atomikosProperties16.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties16.getConsoleLogLevel();
        boolean boolean20 = properties12.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str21 = properties12.toString();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel29);
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean33 = properties24.containsValue((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str36 = atomikosProperties25.getLogBaseName();
        java.lang.Object obj37 = properties11.put((java.lang.Object) str21, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setConsoleFileName("{hi!=}");
        boolean boolean40 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setConsoleFileName("tmlog");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit(1);
        int int18 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties9.entrySet();
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet10);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        int int14 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str3 = atomikosProperties2.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties2.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int8 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tm.out" + "'", str3, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties6.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet12 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        int int19 = atomikosProperties13.getConsoleFileCount();
        boolean boolean20 = properties6.containsKey((java.lang.Object) atomikosProperties13);
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        atomikosProperties13.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.util.Properties properties25 = atomikosProperties13.asProperties();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.store(outputStream26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties25);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration12 = properties11.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties13.setConsoleLogLevel(atomikosLoggingLevel17);
        atomikosProperties13.setSerialJtaTransactions(false);
        int int21 = atomikosProperties13.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        java.lang.Object obj23 = properties11.remove((java.lang.Object) atomikosProperties13);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties25.setForceShutdownOnVmExit(true);
        long long30 = atomikosProperties25.getMaxTimeout();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.setProperty("tm.out", "");
        java.util.Properties properties40 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        int int47 = atomikosProperties41.getConsoleFileCount();
        java.lang.Object obj48 = properties40.get((java.lang.Object) atomikosProperties41);
        java.util.Set<java.lang.Object> objSet49 = properties40.keySet();
        java.lang.Object obj50 = properties11.replace((java.lang.Object) long30, (java.lang.Object) properties40);
        java.io.Writer writer51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(writer51, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setCheckpointInterval(5L);
        int int17 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.util.Properties properties50 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties2.elements();
        java.util.Set<java.lang.String> strSet52 = properties2.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties2.keys();
        java.util.Properties properties54 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration55);
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        java.util.Collection<java.lang.Object> objCollection11 = properties1.values();
        java.lang.String str13 = properties1.getProperty("{hi!=}");
        java.util.Set<java.lang.String> strSet14 = properties1.stringPropertyNames();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        boolean boolean17 = properties7.containsValue((java.lang.Object) atomikosProperties11);
        boolean boolean18 = properties1.containsValue((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        long long21 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties22 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getTransactionManagerUniqueName();
        boolean boolean25 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj38 = properties31.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        java.lang.String str43 = atomikosProperties40.getOutputDir();
        atomikosProperties40.setLogBaseName("tm.out");
        boolean boolean46 = properties31.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setConsoleFileCount(100);
        atomikosProperties47.setAllowSubTransactions(true);
        java.lang.Object obj52 = properties31.remove((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setAllowSubTransactions(false);
        atomikosProperties47.setSerialJtaTransactions(true);
        boolean boolean57 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setOutputDir("{}");
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj62 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.lang.Object obj71 = properties64.setProperty("tm.out", "");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str74 = atomikosProperties73.getConsoleFileName();
        int int75 = atomikosProperties73.getConsoleFileCount();
        java.lang.String str76 = atomikosProperties73.getTransactionManagerUniqueName();
        boolean boolean77 = properties1.remove((java.lang.Object) properties64, (java.lang.Object) atomikosProperties73);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties1.entrySet();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tm.out" + "'", str74, "tm.out");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        properties0.clear();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean16 = properties13.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Collection<java.lang.Object> objCollection24 = properties21.values();
        java.lang.Object obj25 = properties13.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount(100);
        int int29 = atomikosProperties26.getConsoleFileCount();
        atomikosProperties26.setOutputDir("");
        java.lang.String str32 = atomikosProperties26.getConsoleFileName();
        boolean boolean33 = properties21.equals((java.lang.Object) str32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.Object obj43 = properties35.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties38);
        boolean boolean44 = atomikosProperties38.isForceShutdownOnVmExit();
        atomikosProperties38.setOutputDir("tm.out");
        java.lang.String str47 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setOutputDir("{hi!=}");
        long long50 = atomikosProperties38.getCheckpointInterval();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection52 = properties51.values();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.keys();
        java.lang.String str56 = properties53.getProperty("{}");
        boolean boolean57 = properties0.replace((java.lang.Object) properties21, (java.lang.Object) atomikosProperties38, (java.lang.Object) properties53);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean61 = properties59.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getTransactionManagerUniqueName();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str67 = atomikosProperties66.getConsoleFileName();
        atomikosProperties66.setOutputDir("hi!");
        int int70 = atomikosProperties66.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties66.getConsoleLogLevel();
        java.lang.Object obj72 = properties59.putIfAbsent((java.lang.Object) atomikosProperties62, (java.lang.Object) atomikosLoggingLevel71);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.get((java.lang.Object) (byte) -1);
        java.util.Properties properties76 = new java.util.Properties(properties73);
        boolean boolean77 = properties59.equals((java.lang.Object) properties73);
        java.util.Set<java.lang.Object> objSet78 = properties59.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setConsoleFileCount((-1));
        java.lang.String str82 = atomikosProperties79.getOutputDir();
        atomikosProperties79.setLogBaseName("tm.out");
        atomikosProperties79.setForceShutdownOnVmExit(true);
        atomikosProperties79.setMaxTimeout((long) (short) 1);
        atomikosProperties79.setForceShutdownOnVmExit(true);
        atomikosProperties79.setSerialJtaTransactions(false);
        java.lang.Object obj93 = properties21.putIfAbsent((java.lang.Object) properties59, (java.lang.Object) atomikosProperties79);
        java.util.Properties properties94 = atomikosProperties79.asProperties();
        java.io.OutputStream outputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties94.storeToXML(outputStream95, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 500L + "'", long50 == 500L);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(properties94);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.lang.String str8 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getTransactionManagerUniqueName();
        boolean boolean17 = atomikosProperties15.isForceShutdownOnVmExit();
        java.util.Properties properties18 = atomikosProperties15.asProperties();
        int int19 = atomikosProperties15.getConsoleFileCount();
        java.lang.Object obj20 = properties14.get((java.lang.Object) atomikosProperties15);
        java.io.PrintStream printStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        int int27 = atomikosProperties14.getConsoleFileLimit();
        boolean boolean28 = atomikosProperties14.isThreadedTwoPhaseCommit();
        java.lang.String str29 = atomikosProperties14.getLogBaseDir();
        atomikosProperties14.setMaxActives(19);
        atomikosProperties14.setMaxTimeout((long) 5);
        atomikosProperties14.setConsoleFileName("{=hi!}");
        atomikosProperties14.setService("{10=10.0}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setLogBaseDir("");
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.getRecovery();
        long long15 = recovery14.getRetryInterval();
        recovery14.setMaxRetries(5);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        int int5 = atomikosProperties0.getMaxActives();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties8.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        boolean boolean17 = atomikosProperties13.isThreadedTwoPhaseCommit();
        java.util.Properties properties18 = atomikosProperties13.asProperties();
        atomikosProperties13.setCheckpointInterval((long) ' ');
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        boolean boolean22 = properties6.remove((java.lang.Object) recovery12, (java.lang.Object) atomikosProperties13);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj31 = properties26.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties32 = new java.util.Properties(properties26);
        java.util.Properties properties33 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        java.lang.Object obj37 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) 0L);
        atomikosProperties34.setLogBaseName("tm.out");
        java.lang.Object obj40 = properties32.remove((java.lang.Object) atomikosProperties34);
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties41.entrySet();
        java.lang.Object obj43 = properties6.remove((java.lang.Object) objEntrySet42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass44 = obj43.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Collection<java.lang.Object> objCollection15 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int17 = recovery16.getMaxRetries();
        recovery16.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long20 = recovery16.getDelay();
        boolean boolean21 = properties1.contains((java.lang.Object) recovery16);
        java.util.Properties properties22 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        java.lang.Object obj26 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) 0L);
        java.lang.Object obj29 = properties22.setProperty("", "");
        java.util.Properties properties30 = new java.util.Properties(properties22);
        java.lang.Object obj31 = properties30.clone();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean35 = properties33.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getTransactionManagerUniqueName();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties40.getConsoleLogLevel();
        java.lang.Object obj46 = properties33.putIfAbsent((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosLoggingLevel45);
        boolean boolean47 = properties30.contains((java.lang.Object) atomikosProperties36);
        int int48 = atomikosProperties36.getMaxActives();
        int int49 = atomikosProperties36.getConsoleFileCount();
        java.util.Properties properties50 = atomikosProperties36.asProperties();
        java.lang.Object obj51 = properties1.get((java.lang.Object) atomikosProperties36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        int int33 = properties32.size();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties32.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.lang.String str42 = atomikosProperties36.getService();
        int int43 = atomikosProperties36.getMaxActives();
        boolean boolean44 = properties32.equals((java.lang.Object) atomikosProperties36);
        int int45 = atomikosProperties36.getConsoleFileCount();
        java.util.Properties properties46 = atomikosProperties36.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration48 = properties46.propertyNames();
        java.util.Properties properties49 = new java.util.Properties(properties46);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery51.setMaxRetries((-1));
        long long54 = recovery51.getForgetOrphanedLogEntriesDelay();
        boolean boolean55 = properties49.contains((java.lang.Object) recovery51);
        long long56 = recovery51.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 86400000L + "'", long54 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) 100);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.lang.Object obj47 = properties39.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel48);
        boolean boolean51 = properties0.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setTransactionManagerUniqueName("");
        java.lang.String str54 = atomikosProperties6.getOutputDir();
        atomikosProperties6.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties6.setConsoleFileName("{}");
        atomikosProperties6.setConsoleFileLimit(20);
        long long61 = atomikosProperties6.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Properties properties11 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        java.lang.Object obj15 = properties11.put((java.lang.Object) atomikosProperties12, (java.lang.Object) 0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        atomikosProperties12.setConsoleFileLimit((int) ' ');
        long long20 = atomikosProperties12.getDefaultJtaTimeout();
        java.lang.String str21 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount((-1));
        atomikosProperties24.setTransactionManagerUniqueName("tm.out");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties24.setService("tm.out");
        atomikosProperties24.setConsoleFileCount(100);
        int int36 = atomikosProperties24.getMaxActives();
        boolean boolean37 = properties1.remove((java.lang.Object) true, (java.lang.Object) atomikosProperties24);
        boolean boolean38 = atomikosProperties24.isAllowSubTransactions();
        java.lang.String str39 = atomikosProperties24.getConsoleFileName();
        java.util.Properties properties40 = atomikosProperties24.asProperties();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertNotNull(properties40);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        java.util.Properties properties38 = new java.util.Properties(properties25);
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet39);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setLogBaseDir("");
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties24 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (short) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties24);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.lang.Object obj10 = properties0.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setAllowSubTransactions(false);
        boolean boolean15 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        long long16 = atomikosProperties11.getCheckpointInterval();
        java.util.Properties properties17 = atomikosProperties11.asProperties();
        int int18 = atomikosProperties11.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Collection<java.lang.Object> objCollection14 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        java.util.Properties properties20 = atomikosProperties15.asProperties();
        boolean boolean21 = properties11.containsValue((java.lang.Object) atomikosProperties15);
        boolean boolean22 = properties11.isEmpty();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.lang.Object obj32 = properties24.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties27);
        atomikosProperties27.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties35.getConsoleLogLevel();
        atomikosProperties27.setConsoleLogLevel(atomikosLoggingLevel37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount(100);
        atomikosProperties39.setAllowSubTransactions(true);
        boolean boolean44 = atomikosProperties39.isForceShutdownOnVmExit();
        int int45 = atomikosProperties39.getConsoleFileCount();
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        java.lang.Object obj47 = properties11.replace((java.lang.Object) atomikosLoggingLevel37, (java.lang.Object) atomikosProperties39);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties0.setCheckpointInterval((long) 50);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int53 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.io.Reader reader3 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.load(reader3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        atomikosProperties1.setEnableLogging(false);
        atomikosProperties1.setLogBaseName("{hi!=}");
        atomikosProperties1.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.util.Properties properties16 = atomikosProperties1.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        java.lang.Object obj21 = properties17.put((java.lang.Object) atomikosProperties18, (java.lang.Object) 0L);
        java.util.Properties properties22 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        atomikosProperties23.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj28 = properties17.remove((java.lang.Object) atomikosProperties23);
        java.util.Properties properties29 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        atomikosProperties30.setOutputDir("hi!");
        int int34 = atomikosProperties30.getConsoleFileLimit();
        java.util.Properties properties35 = atomikosProperties30.asProperties();
        java.lang.String str36 = atomikosProperties30.getService();
        atomikosProperties30.setService("hi!");
        atomikosProperties30.setThreadedTwoPhaseCommit(false);
        boolean boolean41 = atomikosProperties30.isThreadedTwoPhaseCommit();
        java.lang.Object obj42 = properties29.get((java.lang.Object) atomikosProperties30);
        java.util.Set<java.lang.Object> objSet43 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        atomikosProperties44.setConsoleFileName("");
        atomikosProperties44.setDefaultJtaTimeout((long) '4');
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.Object obj52 = properties51.clone();
        java.util.Enumeration<?> wildcardEnumeration53 = properties51.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getTransactionManagerUniqueName();
        boolean boolean56 = atomikosProperties54.isForceShutdownOnVmExit();
        atomikosProperties54.setAllowSubTransactions(false);
        atomikosProperties54.setLogBaseName("");
        java.util.Properties properties61 = atomikosProperties54.asProperties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount((-1));
        atomikosProperties63.setConsoleFileName("");
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getConsoleFileName();
        atomikosProperties72.setOutputDir("hi!");
        int int76 = atomikosProperties72.getConsoleFileLimit();
        java.lang.Object obj77 = properties69.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties72.getConsoleLogLevel();
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel78);
        java.lang.Object obj80 = properties62.remove((java.lang.Object) atomikosLoggingLevel78);
        boolean boolean81 = properties16.replace((java.lang.Object) objSet43, (java.lang.Object) wildcardEnumeration53, (java.lang.Object) properties62);
        java.util.Collection<java.lang.Object> objCollection82 = properties16.values();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals(obj52.toString(), "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=52}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=52}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=52}");
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        long long15 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getTransactionManagerUniqueName();
        boolean boolean19 = atomikosProperties17.isForceShutdownOnVmExit();
        atomikosProperties17.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj32 = properties25.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount((-1));
        java.lang.String str37 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setLogBaseName("tm.out");
        boolean boolean40 = properties25.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        java.lang.Object obj46 = properties25.remove((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setAllowSubTransactions(false);
        atomikosProperties41.setSerialJtaTransactions(true);
        boolean boolean51 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setOutputDir("{}");
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj56 = properties16.put((java.lang.Object) atomikosProperties17, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj65 = properties58.setProperty("", "hi!");
        java.util.Properties properties66 = new java.util.Properties(properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setConsoleFileCount((-1));
        java.lang.String str70 = atomikosProperties67.getOutputDir();
        atomikosProperties67.setLogBaseName("tm.out");
        atomikosProperties67.setLogBaseDir("tm.out");
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean77 = properties66.containsValue((java.lang.Object) false);
        java.util.Set<java.lang.Object> objSet78 = properties66.keySet();
        java.lang.Object obj79 = properties12.getOrDefault((java.lang.Object) properties16, (java.lang.Object) properties66);
        int int80 = properties16.size();
        java.lang.Object obj83 = properties16.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tm.out");
        java.lang.String str85 = properties16.getProperty("");
        java.util.Properties properties86 = new java.util.Properties(properties16);
        java.util.Properties properties87 = new java.util.Properties(properties16);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{}");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 19 + "'", int80 == 19);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        int int17 = atomikosProperties0.getConsoleFileCount();
        int int18 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setOutputDir("tmlog");
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives((int) (short) 100);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties5.entrySet();
        java.util.Enumeration<?> wildcardEnumeration18 = properties5.propertyNames();
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNotNull(objSet19);
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Properties properties7 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.util.Properties properties13 = atomikosProperties8.asProperties();
        java.lang.String str14 = atomikosProperties8.getService();
        atomikosProperties8.setService("hi!");
        java.lang.Object obj18 = properties7.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties20 = new java.util.Properties(properties7);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj31 = properties24.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        java.lang.String str36 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setLogBaseName("tm.out");
        boolean boolean39 = properties24.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount(100);
        atomikosProperties40.setAllowSubTransactions(true);
        java.lang.Object obj45 = properties24.remove((java.lang.Object) atomikosProperties40);
        java.util.Set<java.lang.Object> objSet46 = properties24.keySet();
        java.util.Properties properties47 = new java.util.Properties(properties24);
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        boolean boolean61 = properties55.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj62 = properties50.remove((java.lang.Object) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        int int67 = atomikosProperties63.getConsoleFileLimit();
        java.util.Properties properties68 = atomikosProperties63.asProperties();
        java.lang.String str69 = atomikosProperties63.getService();
        atomikosProperties63.setService("hi!");
        atomikosProperties63.setThreadedTwoPhaseCommit(false);
        atomikosProperties63.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties63.setTransactionManagerUniqueName("");
        boolean boolean78 = properties50.containsValue((java.lang.Object) "");
        int int79 = properties50.size();
        java.lang.Object obj80 = properties7.putIfAbsent((java.lang.Object) properties48, (java.lang.Object) properties50);
        java.util.Properties properties81 = new java.util.Properties(properties7);
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.lang.Object obj85 = properties82.setProperty("{10=10.0, ={10=10.0}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties6.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet12 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        int int19 = atomikosProperties13.getConsoleFileCount();
        boolean boolean20 = properties6.containsKey((java.lang.Object) atomikosProperties13);
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Set<java.lang.Object> objSet22 = properties1.keySet();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj31 = properties26.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet32 = properties26.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        java.lang.String str36 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setLogBaseName("tm.out");
        int int39 = atomikosProperties33.getConsoleFileCount();
        boolean boolean40 = properties26.containsKey((java.lang.Object) atomikosProperties33);
        long long41 = atomikosProperties33.getCheckpointInterval();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.keys();
        java.lang.Object obj46 = properties1.putIfAbsent((java.lang.Object) long41, (java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.keys();
        java.util.Properties properties51 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties47.keys();
        boolean boolean53 = properties47.isEmpty();
        java.util.Properties properties54 = new java.util.Properties(properties47);
        boolean boolean55 = properties42.contains((java.lang.Object) properties47);
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.storeToXML(outputStream56, "tmlog", "{hi!=10}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setDefaultJtaTimeout(0L);
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getOutputDir();
        boolean boolean10 = atomikosProperties1.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        boolean boolean47 = properties32.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount(100);
        atomikosProperties48.setAllowSubTransactions(true);
        java.lang.Object obj53 = properties32.remove((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setAllowSubTransactions(false);
        atomikosProperties48.setSerialJtaTransactions(true);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setOutputDir("hi!");
        int int66 = atomikosProperties62.getConsoleFileLimit();
        java.lang.Object obj67 = properties59.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties62);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties26.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties19.setLogBaseDir("");
        atomikosProperties19.setAllowSubTransactions(false);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties0.setMaxTimeout(0L);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(300000L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount((-1));
        atomikosProperties9.setTransactionManagerUniqueName("tm.out");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties9.setService("tm.out");
        boolean boolean19 = atomikosProperties9.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.String str22 = atomikosProperties20.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel23);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel23);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setOutputDir("tm.out");
        atomikosProperties0.setMaxActives((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        java.lang.String str15 = atomikosProperties6.getTransactionManagerUniqueName();
        boolean boolean16 = atomikosProperties6.isSerialJtaTransactions();
        atomikosProperties6.setMaxTimeout((long) (short) 0);
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties3.get(obj10);
        java.lang.Object obj14 = properties3.setProperty("{hi!=10}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.lang.Object obj25 = properties17.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties28.getConsoleLogLevel();
        atomikosProperties20.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties20.setCheckpointInterval((long) 5);
        boolean boolean34 = atomikosProperties20.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        atomikosProperties35.setOutputDir("hi!");
        int int39 = atomikosProperties35.getConsoleFileLimit();
        java.util.Properties properties40 = atomikosProperties35.asProperties();
        java.lang.String str41 = atomikosProperties35.getService();
        atomikosProperties35.setService("hi!");
        atomikosProperties35.setConsoleFileName("tm.out");
        java.lang.String str46 = atomikosProperties35.getTransactionManagerUniqueName();
        java.util.Properties properties47 = atomikosProperties35.asProperties();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj52 = properties48.setProperty("hi!", "");
        java.util.Properties properties53 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        java.lang.Object obj57 = properties53.put((java.lang.Object) atomikosProperties54, (java.lang.Object) 0L);
        java.lang.Object obj60 = properties53.setProperty("", "");
        java.util.Properties properties61 = new java.util.Properties(properties53);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties65 = new java.util.Properties(properties64);
        properties65.clear();
        java.util.Set<java.lang.String> strSet67 = properties65.stringPropertyNames();
        java.lang.Object obj68 = properties48.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) strSet67);
        boolean boolean69 = properties3.replace((java.lang.Object) boolean34, (java.lang.Object) atomikosProperties35, (java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.Reader reader70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(reader70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties1.isForceShutdownOnVmExit();
        boolean boolean11 = atomikosProperties1.isEnableLogging();
        atomikosProperties1.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        java.lang.Object obj21 = properties17.put((java.lang.Object) atomikosProperties18, (java.lang.Object) 0L);
        java.util.Properties properties22 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        atomikosProperties23.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj28 = properties17.remove((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setCheckpointInterval((long) 1);
        boolean boolean31 = atomikosProperties23.isThreadedTwoPhaseCommit();
        boolean boolean32 = properties16.contains((java.lang.Object) atomikosProperties23);
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        int int36 = atomikosProperties23.getConsoleFileCount();
        long long37 = atomikosProperties23.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        int int33 = properties32.size();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties32.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.lang.String str42 = atomikosProperties36.getService();
        int int43 = atomikosProperties36.getMaxActives();
        boolean boolean44 = properties32.equals((java.lang.Object) atomikosProperties36);
        int int45 = atomikosProperties36.getConsoleFileCount();
        java.util.Properties properties46 = atomikosProperties36.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration48 = properties46.propertyNames();
        java.lang.String str50 = properties46.getProperty("{}");
        java.util.Enumeration<?> wildcardEnumeration51 = properties46.propertyNames();
        properties46.clear();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(wildcardEnumeration51);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(true);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        recovery10.setMaxRetries((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        boolean boolean23 = properties8.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setAllowSubTransactions(true);
        java.lang.Object obj29 = properties8.remove((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setAllowSubTransactions(false);
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean34 = properties1.containsKey((java.lang.Object) atomikosProperties24);
        java.util.Collection<java.lang.Object> objCollection35 = properties1.values();
        java.util.Properties properties36 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection37 = properties1.values();
        java.lang.String str38 = properties1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{}" + "'", str38, "{}");
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties16.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet22 = properties16.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj30 = properties12.put((java.lang.Object) properties16, (java.lang.Object) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties12.elements();
        boolean boolean32 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setAllowSubTransactions(true);
        java.lang.String str38 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setDefaultJtaTimeout((long) 0);
        boolean boolean41 = atomikosProperties33.isAllowSubTransactions();
        boolean boolean42 = atomikosProperties33.isForceShutdownOnVmExit();
        boolean boolean43 = atomikosProperties33.isAllowSubTransactions();
        java.lang.String str44 = atomikosProperties33.getTransactionManagerUniqueName();
        atomikosProperties33.setConsoleFileName("");
        java.lang.Object obj47 = properties12.get((java.lang.Object) atomikosProperties33);
        java.lang.Object obj48 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = properties12.contains(obj48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        boolean boolean18 = properties6.isEmpty();
        boolean boolean19 = properties1.containsValue((java.lang.Object) boolean18);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.lang.Object obj13 = properties5.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties8);
        boolean boolean14 = atomikosProperties8.isForceShutdownOnVmExit();
        atomikosProperties8.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties8.getService();
        atomikosProperties8.setForceShutdownOnVmExit(true);
        boolean boolean20 = atomikosProperties8.isForceShutdownOnVmExit();
        java.lang.Object obj21 = properties0.remove((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setDefaultJtaTimeout((long) 1);
        java.lang.String str24 = atomikosProperties8.getOutputDir();
        atomikosProperties8.setAllowSubTransactions(true);
        boolean boolean27 = atomikosProperties8.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties8.getRecovery();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(recovery28);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setDelay((long) (short) 1);
        recovery6.setDelay((long) (-1));
        java.lang.Object obj12 = properties3.remove((java.lang.Object) (-1));
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        int int15 = properties14.size();
        boolean boolean16 = properties14.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        boolean boolean22 = properties20.isEmpty();
        boolean boolean23 = properties14.containsValue((java.lang.Object) boolean22);
        java.util.Properties properties24 = new java.util.Properties(properties14);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        int int27 = properties26.size();
        boolean boolean28 = properties26.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties26);
        java.util.Properties properties30 = new java.util.Properties(properties26);
        int int31 = properties26.size();
        java.util.Properties properties32 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        java.lang.String str39 = atomikosProperties33.getService();
        atomikosProperties33.setService("hi!");
        java.lang.Object obj43 = properties32.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        properties26.clear();
        java.lang.Object obj46 = properties3.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties26);
        java.util.Properties properties47 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration48);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Set<java.lang.Object> objSet26 = properties3.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.keys();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.setProperty("", "hi!");
        java.lang.Object obj40 = properties27.remove((java.lang.Object) "");
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj51 = properties44.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount((-1));
        java.lang.String str56 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setLogBaseName("tm.out");
        boolean boolean59 = properties44.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setConsoleFileCount(100);
        atomikosProperties60.setAllowSubTransactions(true);
        java.lang.Object obj65 = properties44.remove((java.lang.Object) atomikosProperties60);
        java.util.Properties properties66 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str68 = atomikosProperties67.getConsoleFileName();
        atomikosProperties67.setOutputDir("hi!");
        int int71 = atomikosProperties67.getConsoleFileLimit();
        java.lang.String str72 = atomikosProperties67.getService();
        java.lang.String str73 = atomikosProperties67.getOutputDir();
        atomikosProperties67.setOutputDir("tmlog");
        long long76 = atomikosProperties67.getMaxTimeout();
        boolean boolean77 = properties66.contains((java.lang.Object) atomikosProperties67);
        java.util.Properties properties78 = new java.util.Properties(properties66);
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties27, (java.lang.Object) properties78);
        boolean boolean80 = properties3.isEmpty();
        java.util.Set<java.lang.String> strSet81 = properties3.stringPropertyNames();
        java.util.Properties properties82 = new java.util.Properties(properties3);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tm.out" + "'", str68, "tm.out");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strSet81);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        boolean boolean7 = properties1.equals((java.lang.Object) (-1.0d));
        java.util.Properties properties8 = new java.util.Properties(properties1);
        boolean boolean9 = properties1.isEmpty();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj18 = properties13.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties19 = new java.util.Properties(properties13);
        java.util.Properties properties20 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        java.lang.Object obj24 = properties20.put((java.lang.Object) atomikosProperties21, (java.lang.Object) 0L);
        atomikosProperties21.setLogBaseName("tm.out");
        java.lang.Object obj27 = properties19.remove((java.lang.Object) atomikosProperties21);
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties28.entrySet();
        java.util.Set<java.lang.String> strSet30 = properties28.stringPropertyNames();
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getConsoleFileName();
        java.lang.String str34 = atomikosProperties32.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties32.getConsoleLogLevel();
        atomikosProperties32.setLogBaseDir("tm.out");
        java.lang.String str38 = atomikosProperties32.getLogBaseDir();
        boolean boolean39 = atomikosProperties32.isAllowSubTransactions();
        atomikosProperties32.setDefaultJtaTimeout((long) 20);
        java.util.Properties properties42 = atomikosProperties32.asProperties();
        long long43 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setService("{hi!=10}");
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) properties28, (java.lang.Object) "{hi!=10}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 500L + "'", long43 == 500L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "{hi!=10}" + "'", obj46, "{hi!=10}");
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties83 = atomikosProperties49.asProperties();
        atomikosProperties49.setConsoleFileName("{10=10.0}");
        int int86 = atomikosProperties49.getConsoleFileCount();
        java.lang.String str87 = atomikosProperties49.getLogBaseDir();
        java.util.Properties properties88 = atomikosProperties49.asProperties();
        java.io.PrintWriter printWriter89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties88.list(printWriter89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(properties88);
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        int int14 = properties13.size();
        boolean boolean15 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection18 = properties17.values();
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        boolean boolean21 = properties19.isEmpty();
        boolean boolean22 = properties13.containsValue((java.lang.Object) boolean21);
        java.util.Properties properties23 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        java.lang.Object obj27 = properties23.put((java.lang.Object) atomikosProperties24, (java.lang.Object) 0L);
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        atomikosProperties24.setConsoleFileLimit((int) ' ');
        long long32 = atomikosProperties24.getDefaultJtaTimeout();
        java.lang.String str33 = atomikosProperties24.getOutputDir();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount((-1));
        atomikosProperties36.setTransactionManagerUniqueName("tm.out");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        atomikosProperties36.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties36.setService("tm.out");
        atomikosProperties36.setConsoleFileCount(100);
        int int48 = atomikosProperties36.getMaxActives();
        boolean boolean49 = properties13.remove((java.lang.Object) true, (java.lang.Object) atomikosProperties36);
        java.util.Enumeration<?> wildcardEnumeration50 = properties13.propertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection52 = properties51.values();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.keys();
        java.util.Properties properties55 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties51.keys();
        boolean boolean57 = properties51.isEmpty();
        java.lang.Object obj58 = properties51.clone();
        java.lang.Object obj59 = properties11.replace((java.lang.Object) properties13, (java.lang.Object) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery64 = atomikosProperties60.getRecovery();
        recovery64.setMaxRetries((int) (short) 0);
        recovery64.setRetryInterval((long) (short) 0);
        recovery64.setDelay(1L);
        recovery64.setMaxRetries(1);
        java.lang.Object obj73 = properties11.get((java.lang.Object) 1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration50);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertNotNull(recovery64);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties3.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties3.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        int int18 = properties17.size();
        boolean boolean19 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties23.isEmpty();
        boolean boolean26 = properties17.containsValue((java.lang.Object) boolean25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties17.elements();
        java.lang.Class<?> wildcardClass28 = properties17.getClass();
        java.lang.Object obj29 = properties3.remove((java.lang.Object) properties17);
        java.util.Enumeration<?> wildcardEnumeration30 = properties3.propertyNames();
        java.util.Set<java.lang.Object> objSet31 = properties3.keySet();
        properties3.clear();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(objSet31);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        java.util.Properties properties18 = new java.util.Properties(properties10);
        java.util.Set<java.lang.String> strSet19 = properties10.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection20 = properties10.values();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.lang.Object obj24 = null;
        boolean boolean25 = properties21.equals(obj24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.elements();
        java.lang.Object obj28 = properties1.put((java.lang.Object) properties10, (java.lang.Object) properties21);
        java.util.Properties properties29 = new java.util.Properties(properties10);
        java.util.Set<java.lang.String> strSet30 = properties10.stringPropertyNames();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.get((java.lang.Object) (byte) -1);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.String str18 = atomikosProperties16.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties16.getConsoleLogLevel();
        boolean boolean20 = properties12.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str21 = properties12.toString();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel29);
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean33 = properties24.containsValue((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str36 = atomikosProperties25.getLogBaseName();
        java.lang.Object obj37 = properties11.put((java.lang.Object) str21, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj48 = properties41.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount((-1));
        java.lang.String str53 = atomikosProperties50.getOutputDir();
        atomikosProperties50.setLogBaseName("tm.out");
        boolean boolean56 = properties41.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount(100);
        atomikosProperties57.setAllowSubTransactions(true);
        java.lang.Object obj62 = properties41.remove((java.lang.Object) atomikosProperties57);
        boolean boolean63 = properties11.containsValue((java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setConsoleFileCount(100);
        atomikosProperties64.setAllowSubTransactions(true);
        boolean boolean69 = atomikosProperties64.isForceShutdownOnVmExit();
        int int70 = atomikosProperties64.getConsoleFileCount();
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        java.lang.Object obj74 = properties41.get((java.lang.Object) properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties75.setForceShutdownOnVmExit(true);
        long long80 = atomikosProperties75.getMaxTimeout();
        long long81 = atomikosProperties75.getCheckpointInterval();
        java.lang.Object obj82 = properties73.get((java.lang.Object) atomikosProperties75);
        java.io.OutputStream outputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties73.storeToXML(outputStream83, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 500L + "'", long81 == 500L);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        properties1.clear();
        java.lang.String str15 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}", "");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.lang.String str3 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration4 = properties0.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery5.setDelay((long) 5);
        long long8 = recovery5.getDelay();
        recovery5.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        long long11 = recovery5.getForgetOrphanedLogEntriesDelay();
        recovery5.setMaxRetries((int) (byte) -1);
        recovery5.setRetryInterval(97L);
        long long16 = recovery5.getForgetOrphanedLogEntriesDelay();
        boolean boolean17 = properties0.equals((java.lang.Object) recovery5);
        java.lang.Object obj18 = properties0.clone();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 5L + "'", long8 == 5L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        int int14 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str9, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.lang.String str5 = properties1.getProperty("");
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        int int8 = properties7.size();
        boolean boolean9 = properties7.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Properties properties11 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.lang.String str18 = atomikosProperties12.getService();
        atomikosProperties12.setService("hi!");
        atomikosProperties12.setForceShutdownOnVmExit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties25 = atomikosProperties12.asProperties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long31 = recovery30.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass32 = recovery30.getClass();
        boolean boolean33 = properties28.containsKey((java.lang.Object) wildcardClass32);
        boolean boolean34 = properties7.replace((java.lang.Object) properties25, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass32);
        java.util.Properties properties35 = new java.util.Properties(properties25);
        java.util.Properties properties36 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        java.lang.Object obj40 = properties36.put((java.lang.Object) atomikosProperties37, (java.lang.Object) 0L);
        java.util.Properties properties41 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount((-1));
        atomikosProperties42.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj47 = properties36.remove((java.lang.Object) atomikosProperties42);
        boolean boolean48 = atomikosProperties42.isForceShutdownOnVmExit();
        java.lang.Object obj49 = properties25.get((java.lang.Object) boolean48);
        java.util.Properties properties50 = new java.util.Properties(properties25);
        java.lang.Object obj51 = properties1.remove((java.lang.Object) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount((-1));
        boolean boolean55 = atomikosProperties52.isAllowSubTransactions();
        java.lang.Object obj56 = properties50.remove((java.lang.Object) boolean55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties50.keys();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 86400000L + "'", long31 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setDelay((long) (short) 1);
        recovery6.setDelay((long) (-1));
        java.lang.Object obj12 = properties3.remove((java.lang.Object) (-1));
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        int int15 = properties14.size();
        boolean boolean16 = properties14.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        boolean boolean22 = properties20.isEmpty();
        boolean boolean23 = properties14.containsValue((java.lang.Object) boolean22);
        java.util.Properties properties24 = new java.util.Properties(properties14);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        int int27 = properties26.size();
        boolean boolean28 = properties26.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties26);
        java.util.Properties properties30 = new java.util.Properties(properties26);
        int int31 = properties26.size();
        java.util.Properties properties32 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        java.lang.String str39 = atomikosProperties33.getService();
        atomikosProperties33.setService("hi!");
        java.lang.Object obj43 = properties32.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        properties26.clear();
        java.lang.Object obj46 = properties3.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties26);
        boolean boolean47 = properties26.isEmpty();
        java.lang.String str49 = properties26.getProperty("tm.out");
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.storeToXML(outputStream50, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setDelay((long) (short) 1);
        long long8 = recovery0.getRetryInterval();
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long10 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        int int7 = atomikosProperties0.getMaxActives();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        long long10 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(writer12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        java.lang.Object obj33 = properties29.put((java.lang.Object) atomikosProperties30, (java.lang.Object) 0L);
        java.lang.Object obj36 = properties29.setProperty("", "");
        java.util.Properties properties37 = new java.util.Properties(properties29);
        java.lang.Object obj38 = properties37.clone();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Properties properties40 = new java.util.Properties(properties23);
        java.lang.String str41 = properties40.toString();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        java.lang.Object obj51 = properties43.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties46);
        atomikosProperties46.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel56 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties46.setConsoleLogLevel(atomikosLoggingLevel56);
        java.lang.String str58 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setConsoleFileCount(0);
        java.lang.String str61 = atomikosProperties46.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getTransactionManagerUniqueName();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 100);
        int int66 = atomikosProperties62.getConsoleFileLimit();
        java.lang.String str67 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long70 = atomikosProperties62.getMaxTimeout();
        java.lang.Object obj71 = properties40.putIfAbsent((java.lang.Object) atomikosProperties46, (java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties40.elements();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel56 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel56.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        java.lang.Object obj21 = properties17.put((java.lang.Object) atomikosProperties18, (java.lang.Object) 0L);
        java.util.Properties properties22 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        atomikosProperties23.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj28 = properties17.remove((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setCheckpointInterval((long) 1);
        boolean boolean31 = atomikosProperties23.isThreadedTwoPhaseCommit();
        boolean boolean32 = properties16.contains((java.lang.Object) atomikosProperties23);
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(false);
        int int36 = atomikosProperties23.getMaxActives();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        atomikosProperties4.setCheckpointInterval(52L);
        java.lang.String str15 = atomikosProperties4.getOutputDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        atomikosProperties6.setConsoleFileLimit((int) (short) 1);
        int int16 = atomikosProperties6.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties6.getRecovery();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(recovery17);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        java.lang.String str11 = properties5.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        java.lang.String str14 = atomikosProperties12.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel17);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        java.lang.String str21 = atomikosProperties12.getTransactionManagerUniqueName();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) -1);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        atomikosProperties12.setConsoleFileName("");
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        properties31.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Collection<java.lang.Object> objCollection34 = properties31.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        atomikosProperties35.setOutputDir("hi!");
        int int39 = atomikosProperties35.getConsoleFileLimit();
        java.util.Properties properties40 = atomikosProperties35.asProperties();
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties35);
        int int42 = atomikosProperties35.getConsoleFileLimit();
        java.lang.String str43 = atomikosProperties35.getService();
        atomikosProperties35.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = atomikosProperties35.getRecovery();
        recovery46.setMaxRetries(100);
        recovery46.setRetryInterval((long) (short) 100);
        java.lang.Object obj51 = properties5.getOrDefault((java.lang.Object) "", (java.lang.Object) (short) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(objSet10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str11, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(recovery46);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties7.getConsoleLogLevel();
        atomikosProperties5.setConsoleLogLevel(atomikosLoggingLevel9);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel9);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        long long14 = recovery13.getDelay();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setConsoleFileCount((-1));
        atomikosProperties11.setAllowSubTransactions(false);
        boolean boolean16 = properties5.containsValue((java.lang.Object) false);
        java.util.Properties properties17 = new java.util.Properties(properties5);
        java.util.Properties properties18 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        java.lang.Object obj22 = properties18.put((java.lang.Object) atomikosProperties19, (java.lang.Object) 0L);
        java.util.Properties properties23 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount((-1));
        atomikosProperties24.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj29 = properties18.remove((java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        java.util.Set<java.lang.String> strSet32 = properties31.stringPropertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.lang.String str34 = properties5.toString();
        java.lang.String str36 = properties5.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(strSet32);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str34, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.String str17 = atomikosProperties12.getService();
        java.lang.String str18 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setOutputDir("tmlog");
        long long21 = atomikosProperties12.getMaxTimeout();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        int int23 = atomikosProperties12.getConsoleFileCount();
        atomikosProperties12.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        boolean boolean31 = atomikosProperties26.isForceShutdownOnVmExit();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) atomikosProperties12, (java.lang.Object) boolean31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setAllowSubTransactions(true);
        atomikosProperties33.setMaxTimeout((long) '4');
        java.lang.String str40 = atomikosProperties33.getLogBaseDir();
        int int41 = atomikosProperties33.getConsoleFileCount();
        int int42 = atomikosProperties33.getMaxActives();
        int int43 = atomikosProperties33.getMaxActives();
        boolean boolean44 = properties11.contains((java.lang.Object) atomikosProperties33);
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        int int46 = atomikosProperties33.getConsoleFileCount();
        boolean boolean47 = atomikosProperties33.isForceShutdownOnVmExit();
        java.util.Properties properties48 = atomikosProperties33.asProperties();
        atomikosProperties33.setCheckpointInterval((long) 5);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setConsoleFileLimit((int) (short) 1);
        atomikosProperties0.setConsoleFileName("tmlog");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        long long44 = recovery28.getDelay();
        long long45 = recovery28.getRetryInterval();
        long long46 = recovery28.getRetryInterval();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 100);
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.lang.String str13 = atomikosProperties8.getConsoleFileName();
        java.lang.Object obj14 = properties5.putIfAbsent((java.lang.Object) (-1.0f), (java.lang.Object) atomikosProperties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.lang.Object obj24 = properties16.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties19);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties16.entrySet();
        java.util.Properties properties26 = new java.util.Properties(properties16);
        java.lang.Object obj27 = properties26.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        java.lang.String str30 = atomikosProperties28.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties28.getConsoleLogLevel();
        atomikosProperties28.setLogBaseDir("tm.out");
        java.util.Properties properties34 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties36.getConsoleLogLevel();
        atomikosProperties36.setMaxTimeout(1L);
        java.lang.Object obj41 = properties34.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setConsoleFileLimit(2);
        boolean boolean44 = properties26.equals((java.lang.Object) atomikosProperties36);
        int int45 = atomikosProperties36.getConsoleFileCount();
        boolean boolean46 = properties5.containsValue((java.lang.Object) atomikosProperties36);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.save(outputStream47, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isAllowSubTransactions();
        boolean boolean26 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setLogBaseName("{10=10.0, {com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        int int14 = atomikosProperties7.getConsoleFileLimit();
        boolean boolean15 = atomikosProperties7.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) (byte) 10);
        int int3 = recovery0.getMaxRetries();
        recovery0.setDelay(10L);
        recovery0.setRetryInterval((long) (short) 10);
        recovery0.setDelay((long) 50);
        recovery0.setRetryInterval(97L);
        long long12 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        int int15 = atomikosProperties7.getMaxActives();
        int int16 = atomikosProperties7.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties7.getRecovery();
        int int18 = atomikosProperties7.getConsoleFileCount();
        atomikosProperties7.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(recovery17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        properties0.clear();
        java.util.Properties properties6 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setConsoleFileCount(100);
        atomikosProperties7.setAllowSubTransactions(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        int int13 = atomikosProperties7.getConsoleFileCount();
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setMaxActives((int) (byte) 1);
        boolean boolean17 = properties0.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str20 = atomikosProperties7.getService();
        java.lang.String str21 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str24 = atomikosProperties7.getService();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str20, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str24, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties3.get(obj10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        properties19.clear();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties22 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        java.lang.Object obj26 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) 0L);
        java.lang.Object obj29 = properties22.setProperty("", "");
        java.util.Properties properties30 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties31.getConsoleLogLevel();
        java.lang.Object obj37 = properties17.getOrDefault((java.lang.Object) properties22, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Collection<java.lang.Object> objCollection44 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        java.util.Properties properties50 = atomikosProperties45.asProperties();
        boolean boolean51 = properties41.containsValue((java.lang.Object) atomikosProperties45);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties41.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties41.elements();
        java.lang.Object obj54 = properties3.putIfAbsent((java.lang.Object) atomikosProperties31, (java.lang.Object) properties41);
        java.util.Enumeration<?> wildcardEnumeration55 = properties41.propertyNames();
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.storeToXML(outputStream56, "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.getRecovery();
        recovery8.setRetryInterval((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(recovery8);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        boolean boolean5 = properties1.contains((java.lang.Object) "tmlog");
        java.lang.String str8 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str8, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        int int15 = atomikosProperties7.getMaxActives();
        java.lang.String str16 = atomikosProperties7.getLogBaseName();
        java.lang.String str17 = atomikosProperties7.getService();
        atomikosProperties7.setTransactionManagerUniqueName("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        atomikosProperties14.setThreadedTwoPhaseCommit(false);
        atomikosProperties14.setSerialJtaTransactions(true);
        boolean boolean31 = atomikosProperties14.isThreadedTwoPhaseCommit();
        atomikosProperties14.setConsoleFileName("{={=hi!}}");
        atomikosProperties14.setCheckpointInterval(18L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int30 = recovery29.getMaxRetries();
        recovery29.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long33 = recovery29.getRetryInterval();
        recovery29.setRetryInterval((long) 'a');
        java.lang.Object obj36 = properties23.get((java.lang.Object) 'a');
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties23.keys();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties8.setMaxTimeout(1L);
        java.lang.Object obj13 = properties6.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties8);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.store(outputStream14, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.util.Properties properties50 = new java.util.Properties(properties2);
        java.lang.Object obj53 = properties50.setProperty("{hi!=10}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.Object> objSet54 = properties50.keySet();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean58 = properties56.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.keys();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection61 = properties60.values();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties65 = new java.util.Properties(properties64);
        properties65.clear();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj70 = properties63.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setConsoleFileCount((-1));
        java.lang.String str75 = atomikosProperties72.getOutputDir();
        atomikosProperties72.setLogBaseName("tm.out");
        boolean boolean78 = properties63.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setConsoleFileCount(100);
        atomikosProperties79.setAllowSubTransactions(true);
        java.lang.Object obj84 = properties63.remove((java.lang.Object) atomikosProperties79);
        atomikosProperties79.setAllowSubTransactions(false);
        atomikosProperties79.setSerialJtaTransactions(true);
        boolean boolean89 = properties56.containsKey((java.lang.Object) atomikosProperties79);
        java.util.Properties properties90 = new java.util.Properties(properties56);
        boolean boolean91 = properties50.containsKey((java.lang.Object) properties56);
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties50.storeToXML(outputStream92, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getService();
        atomikosProperties1.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean9 = atomikosProperties1.isForceShutdownOnVmExit();
        atomikosProperties1.setLogBaseDir("{tm.out=}");
        long long12 = atomikosProperties1.getDefaultJtaTimeout();
        java.lang.String str13 = atomikosProperties1.getService();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        atomikosProperties4.setMaxTimeout(0L);
        java.lang.String str18 = atomikosProperties4.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileLimit(100);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(52);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long5 = atomikosProperties0.getMaxTimeout();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.Class<?> wildcardClass7 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        int int10 = atomikosProperties4.getConsoleFileCount();
        atomikosProperties4.setLogBaseDir("");
        long long13 = atomikosProperties4.getCheckpointInterval();
        boolean boolean14 = atomikosProperties4.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        int int4 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str14 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        java.util.Properties properties33 = new java.util.Properties(properties29);
        java.util.Properties properties34 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        atomikosProperties35.setTransactionManagerUniqueName("tm.out");
        atomikosProperties35.setLogBaseName("tm.out");
        atomikosProperties35.setConsoleFileCount(1);
        java.lang.String str44 = atomikosProperties35.getOutputDir();
        java.util.Properties properties45 = atomikosProperties35.asProperties();
        boolean boolean46 = properties34.containsKey((java.lang.Object) atomikosProperties35);
        java.util.Collection<java.lang.Object> objCollection47 = properties34.values();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long5 = atomikosProperties0.getMaxTimeout();
        long long6 = atomikosProperties0.getCheckpointInterval();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setConsoleFileCount(0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.String str10 = properties8.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.lang.Object obj15 = null;
        boolean boolean16 = properties12.equals(obj15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties12.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.elements();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties20.keySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Collection<java.lang.Object> objCollection30 = properties27.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties31.asProperties();
        boolean boolean37 = properties27.containsValue((java.lang.Object) atomikosProperties31);
        boolean boolean38 = properties27.isEmpty();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties40 = new java.util.Properties(properties20);
        java.lang.String str42 = properties20.getProperty("{}");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        boolean boolean44 = properties8.containsValue((java.lang.Object) properties20);
        boolean boolean45 = properties8.isEmpty();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        boolean boolean41 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setCheckpointInterval(1L);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.io.Reader reader49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(reader49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setDelay((long) (short) 1);
        recovery0.setRetryInterval((long) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        java.lang.String str12 = atomikosProperties10.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setLogBaseDir("tm.out");
        java.util.Properties properties16 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties18.setMaxTimeout(1L);
        java.lang.Object obj23 = properties16.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties18);
        long long24 = atomikosProperties18.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        atomikosProperties11.setLogBaseName("tm.out");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) atomikosProperties11);
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        atomikosProperties11.setMaxTimeout((long) 18);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties11.getRecovery();
        long long22 = recovery21.getRetryInterval();
        recovery21.setMaxRetries((int) '#');
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<?> wildcardEnumeration7 = properties6.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties8.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties8.asProperties();
        int int12 = properties11.size();
        boolean boolean13 = properties11.isEmpty();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties11.entrySet();
        int int16 = properties11.size();
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 18 + "'", int12 == 18);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 18 + "'", int16 == 18);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties12.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel14);
        int int16 = atomikosProperties4.getMaxActives();
        atomikosProperties4.setDefaultJtaTimeout((long) ' ');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties4.getRecovery();
        recovery19.setDelay((long) (short) -1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(recovery19);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setLogBaseDir("tm.out");
        java.util.Properties properties17 = atomikosProperties11.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Set<java.lang.Object> objSet19 = properties8.keySet();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objSet19);
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.elements();
        java.util.Properties properties7 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        java.lang.Object obj11 = properties7.put((java.lang.Object) atomikosProperties8, (java.lang.Object) 0L);
        boolean boolean12 = properties0.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection13 = properties0.values();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties16.entrySet();
        java.lang.Object obj19 = properties16.clone();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties21 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        atomikosProperties22.setAllowSubTransactions(false);
        java.util.Properties properties27 = atomikosProperties22.asProperties();
        java.lang.Object obj28 = properties16.remove((java.lang.Object) atomikosProperties22);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long4 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 100);
        recovery0.setMaxRetries(5);
        recovery0.setRetryInterval(86400000L);
        recovery0.setRetryInterval((long) 'a');
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getLogBaseDir();
        int int26 = atomikosProperties19.getConsoleFileLimit();
        atomikosProperties19.setMaxTimeout(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount(100);
        atomikosProperties30.setAllowSubTransactions(true);
        atomikosProperties30.setMaxTimeout((long) '4');
        java.lang.String str37 = atomikosProperties30.getLogBaseDir();
        boolean boolean38 = atomikosProperties30.isForceShutdownOnVmExit();
        atomikosProperties30.setLogBaseDir("tm.out");
        atomikosProperties30.setConsoleFileName("hi!");
        atomikosProperties30.setService("{hi!=10}");
        long long45 = atomikosProperties30.getDefaultJtaTimeout();
        boolean boolean46 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties47.setConsoleLogLevel(atomikosLoggingLevel51);
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel51);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel51);
        int int55 = atomikosProperties19.getConsoleFileCount();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet20 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.util.Properties properties26 = atomikosProperties21.asProperties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj35 = properties30.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean36 = properties26.equals(obj35);
        java.lang.Object obj39 = properties26.setProperty("", "");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        int int43 = properties42.size();
        boolean boolean44 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties42.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        java.lang.Object obj50 = properties46.put((java.lang.Object) atomikosProperties47, (java.lang.Object) 0L);
        atomikosProperties47.setConsoleFileCount(2);
        java.lang.Object obj53 = properties1.replace((java.lang.Object) properties42, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setLogBaseName("{tm.out=}");
        boolean boolean56 = atomikosProperties47.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        int int8 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        boolean boolean43 = atomikosProperties19.isEnableLogging();
        boolean boolean44 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.setDefaultJtaTimeout((long) 18);
        atomikosProperties19.setConsoleFileLimit(2);
        boolean boolean49 = atomikosProperties19.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        boolean boolean23 = properties8.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setAllowSubTransactions(true);
        java.lang.Object obj29 = properties8.remove((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setAllowSubTransactions(false);
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean34 = properties1.containsKey((java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection36 = properties35.values();
        boolean boolean37 = properties35.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long39 = recovery38.getForgetOrphanedLogEntriesDelay();
        recovery38.setDelay((long) (short) 1);
        long long42 = recovery38.getRetryInterval();
        long long43 = recovery38.getForgetOrphanedLogEntriesDelay();
        long long44 = recovery38.getDelay();
        recovery38.setRetryInterval((long) (byte) 10);
        java.lang.Object obj48 = properties35.putIfAbsent((java.lang.Object) recovery38, (java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        java.util.Properties properties54 = atomikosProperties49.asProperties();
        java.lang.String str55 = atomikosProperties49.getService();
        atomikosProperties49.setService("hi!");
        atomikosProperties49.setForceShutdownOnVmExit(true);
        atomikosProperties49.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties62 = atomikosProperties49.asProperties();
        java.lang.Object obj63 = properties62.clone();
        java.lang.String str64 = properties62.toString();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 86400000L + "'", long39 == 86400000L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 86400000L + "'", long43 == 86400000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(obj63);
// flaky:         org.junit.Assert.assertEquals(obj63.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str64, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setOutputDir("hi!");
        int int9 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        java.lang.String str11 = atomikosProperties5.getService();
        int int12 = atomikosProperties5.getMaxActives();
        boolean boolean13 = properties1.equals((java.lang.Object) atomikosProperties5);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.lang.Object obj25 = properties18.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        boolean boolean33 = properties18.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount(100);
        atomikosProperties34.setAllowSubTransactions(true);
        java.lang.Object obj39 = properties18.remove((java.lang.Object) atomikosProperties34);
        java.lang.String str40 = atomikosProperties34.getLogBaseDir();
        int int41 = atomikosProperties34.getConsoleFileLimit();
        atomikosProperties34.setConsoleFileName("{10=10.0}");
        java.lang.String str44 = atomikosProperties34.getOutputDir();
        java.lang.Object obj45 = properties1.get((java.lang.Object) atomikosProperties34);
        java.util.Properties properties46 = new java.util.Properties(properties1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.Object obj55 = properties48.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean56 = properties48.isEmpty();
        int int57 = properties48.size();
        java.lang.String str58 = properties48.toString();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        int int67 = atomikosProperties63.getConsoleFileLimit();
        java.lang.Object obj68 = properties60.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties63);
        int int69 = atomikosProperties63.getConsoleFileCount();
        java.lang.Object obj70 = properties46.getOrDefault((java.lang.Object) properties48, (java.lang.Object) atomikosProperties63);
        java.io.PrintStream printStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.list(printStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{10=10.0}" + "'", str58, "{10=10.0}");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        java.util.Properties properties37 = new java.util.Properties(properties15);
        properties15.clear();
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream39, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.lang.String str51 = properties8.getProperty("{}");
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties8.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties8.keys();
        java.util.Properties properties54 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getConsoleFileName();
        java.lang.Object obj58 = properties54.put((java.lang.Object) atomikosProperties55, (java.lang.Object) 0L);
        java.lang.Object obj61 = properties54.setProperty("", "");
        java.lang.Object obj64 = properties54.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getTransactionManagerUniqueName();
        atomikosProperties65.setAllowSubTransactions(false);
        boolean boolean69 = properties54.containsKey((java.lang.Object) atomikosProperties65);
        atomikosProperties65.setMaxTimeout((long) 32);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties();
        java.util.Properties properties75 = new java.util.Properties(properties74);
        properties75.clear();
        properties73.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        java.lang.Object obj80 = properties73.setProperty("", "hi!");
        java.util.Properties properties81 = new java.util.Properties(properties73);
        java.util.Set<java.lang.String> strSet82 = properties73.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet83 = properties73.keySet();
        java.lang.Object obj84 = properties8.replace((java.lang.Object) 32, (java.lang.Object) properties73);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tm.out" + "'", str56, "tm.out");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.lang.String str51 = properties8.getProperty("{}");
        java.util.Properties properties52 = new java.util.Properties(properties8);
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Set<java.lang.String> strSet54 = properties53.stringPropertyNames();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.util.Collection<java.lang.Object> objCollection61 = properties58.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setOutputDir("hi!");
        int int66 = atomikosProperties62.getConsoleFileLimit();
        java.util.Properties properties67 = atomikosProperties62.asProperties();
        boolean boolean68 = properties58.containsValue((java.lang.Object) atomikosProperties62);
        atomikosProperties62.setTransactionManagerUniqueName("tmlog");
        atomikosProperties62.setEnableLogging(false);
        atomikosProperties62.setCheckpointInterval(0L);
        java.lang.String str75 = atomikosProperties62.getOutputDir();
        java.util.Properties properties76 = atomikosProperties62.asProperties();
        java.util.Properties properties77 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration78 = properties77.propertyNames();
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties53.put((java.lang.Object) properties76, (java.lang.Object) properties77);
        java.util.Properties properties81 = new java.util.Properties();
        java.util.Properties properties82 = new java.util.Properties(properties81);
        properties82.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str86 = atomikosProperties85.getConsoleFileName();
        atomikosProperties85.setOutputDir("hi!");
        int int89 = atomikosProperties85.getConsoleFileLimit();
        java.lang.Object obj90 = properties82.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties85);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet91 = properties82.entrySet();
        java.util.Properties properties92 = new java.util.Properties(properties82);
        java.util.Properties properties93 = new java.util.Properties(properties92);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties93);
        java.io.Reader reader95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties93.load(reader95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(wildcardEnumeration78);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "tm.out" + "'", str86, "tm.out");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objEntrySet91);
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        int int32 = atomikosProperties25.getConsoleFileLimit();
        atomikosProperties25.setConsoleFileLimit(5);
        int int35 = atomikosProperties25.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties41.entrySet();
        boolean boolean47 = properties23.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) objEntrySet46);
        java.io.PrintWriter printWriter48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printWriter48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        int int13 = properties12.size();
        boolean boolean14 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties12.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setOutputDir("hi!");
        int int20 = atomikosProperties16.getConsoleFileLimit();
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        java.lang.String str22 = atomikosProperties16.getService();
        int int23 = atomikosProperties16.getMaxActives();
        boolean boolean24 = properties12.equals((java.lang.Object) atomikosProperties16);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) objEntrySet10, (java.lang.Object) boolean24);
        java.util.Properties properties26 = new java.util.Properties(properties1);
        java.io.Reader reader27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.load(reader27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = properties3.containsKey((java.lang.Object) atomikosProperties10);
        atomikosProperties10.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties10.getRecovery();
        recovery20.setMaxRetries(1);
        long long23 = recovery20.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        java.util.Set<java.lang.String> strSet19 = properties17.stringPropertyNames();
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) strSet19);
        boolean boolean21 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties3.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties3.elements();
        java.lang.Object obj16 = properties3.clone();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties23 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        java.lang.Object obj27 = properties23.put((java.lang.Object) atomikosProperties24, (java.lang.Object) 0L);
        properties23.clear();
        java.util.Properties properties29 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        java.lang.Object obj33 = properties29.put((java.lang.Object) atomikosProperties30, (java.lang.Object) 0L);
        java.util.Properties properties34 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        atomikosProperties35.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj40 = properties29.remove((java.lang.Object) atomikosProperties35);
        java.lang.Object obj41 = properties18.getOrDefault((java.lang.Object) properties23, (java.lang.Object) properties29);
        int int42 = properties29.size();
        java.lang.String str44 = properties29.getProperty("{=hi!}");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        properties29.clear();
        java.util.Properties properties47 = new java.util.Properties(properties29);
        int int48 = properties47.size();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        java.util.Set<java.lang.String> strSet18 = properties16.stringPropertyNames();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        properties22.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Collection<java.lang.Object> objCollection25 = properties22.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        boolean boolean32 = properties22.containsValue((java.lang.Object) atomikosProperties26);
        boolean boolean33 = properties16.containsValue((java.lang.Object) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        boolean boolean40 = atomikosProperties38.isForceShutdownOnVmExit();
        atomikosProperties38.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.lang.Object obj53 = properties46.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setConsoleFileCount((-1));
        java.lang.String str58 = atomikosProperties55.getOutputDir();
        atomikosProperties55.setLogBaseName("tm.out");
        boolean boolean61 = properties46.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setConsoleFileCount(100);
        atomikosProperties62.setAllowSubTransactions(true);
        java.lang.Object obj67 = properties46.remove((java.lang.Object) atomikosProperties62);
        atomikosProperties62.setAllowSubTransactions(false);
        atomikosProperties62.setSerialJtaTransactions(true);
        boolean boolean72 = atomikosProperties62.isSerialJtaTransactions();
        atomikosProperties62.setOutputDir("{}");
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj77 = properties37.put((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties62);
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Properties properties81 = new java.util.Properties(properties80);
        properties81.clear();
        properties79.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        java.lang.Object obj86 = properties79.setProperty("tm.out", "");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str89 = atomikosProperties88.getConsoleFileName();
        int int90 = atomikosProperties88.getConsoleFileCount();
        java.lang.String str91 = atomikosProperties88.getTransactionManagerUniqueName();
        boolean boolean92 = properties16.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties88);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        properties13.clear();
        java.util.Properties properties95 = new java.util.Properties(properties13);
        properties13.clear();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tm.out" + "'", str89, "tm.out");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        recovery0.setMaxRetries((-1));
        recovery0.setDelay(300000L);
        recovery0.setDelay(500L);
        long long9 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.keys();
        java.util.Properties properties4 = new java.util.Properties(properties0);
        java.lang.String str5 = properties0.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Collection<java.lang.Object> objCollection12 = properties9.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.util.Properties properties18 = atomikosProperties13.asProperties();
        boolean boolean19 = properties9.containsValue((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("");
        long long22 = atomikosProperties13.getCheckpointInterval();
        int int23 = atomikosProperties13.getConsoleFileCount();
        atomikosProperties13.setMaxActives((int) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int27 = recovery26.getMaxRetries();
        recovery26.setForgetOrphanedLogEntriesDelay(500L);
        long long30 = recovery26.getRetryInterval();
        recovery26.setMaxRetries((-1));
        boolean boolean33 = properties0.remove((java.lang.Object) atomikosProperties13, (java.lang.Object) recovery26);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        int int36 = properties35.size();
        boolean boolean37 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        long long41 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties42 = atomikosProperties39.asProperties();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Properties properties49 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str51 = atomikosProperties50.getConsoleFileName();
        java.lang.Object obj53 = properties49.put((java.lang.Object) atomikosProperties50, (java.lang.Object) 0L);
        properties49.clear();
        java.util.Properties properties55 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getConsoleFileName();
        java.lang.Object obj59 = properties55.put((java.lang.Object) atomikosProperties56, (java.lang.Object) 0L);
        java.util.Properties properties60 = new java.util.Properties(properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileCount((-1));
        atomikosProperties61.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj66 = properties55.remove((java.lang.Object) atomikosProperties61);
        java.lang.Object obj67 = properties44.getOrDefault((java.lang.Object) properties49, (java.lang.Object) properties55);
        java.lang.Object obj68 = properties35.replace((java.lang.Object) atomikosProperties39, obj67);
        atomikosProperties39.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties39.setOutputDir("tmlog");
        java.util.Properties properties73 = atomikosProperties39.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(properties73);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit((int) '4');
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        boolean boolean14 = properties3.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.lang.Object obj24 = properties16.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        boolean boolean36 = atomikosProperties31.isForceShutdownOnVmExit();
        int int37 = atomikosProperties31.getConsoleFileCount();
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Object obj39 = properties3.replace((java.lang.Object) atomikosLoggingLevel29, (java.lang.Object) atomikosProperties31);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties3.elements();
        java.util.Set<java.lang.String> strSet41 = properties3.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setConsoleFileCount((int) (short) 1);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        long long12 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        int int15 = properties14.size();
        boolean boolean16 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        int int22 = atomikosProperties18.getConsoleFileLimit();
        java.util.Properties properties23 = atomikosProperties18.asProperties();
        java.lang.String str24 = atomikosProperties18.getService();
        int int25 = atomikosProperties18.getMaxActives();
        boolean boolean26 = properties14.equals((java.lang.Object) atomikosProperties18);
        int int27 = atomikosProperties18.getConsoleFileCount();
        java.util.Properties properties28 = atomikosProperties18.asProperties();
        atomikosProperties18.setOutputDir("hi!");
        atomikosProperties18.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        atomikosProperties37.setOutputDir("hi!");
        int int41 = atomikosProperties37.getConsoleFileLimit();
        java.lang.Object obj42 = properties34.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties37.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        atomikosProperties44.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties49.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties44.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel53);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel58);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setDelay((long) (short) 1);
        long long8 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 35);
        recovery0.setRetryInterval((long) '#');
        long long13 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties0.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.Object obj12 = properties0.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties8);
        java.lang.Object obj15 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount((-1));
        java.lang.String str19 = atomikosProperties16.getOutputDir();
        java.lang.Class<?> wildcardClass20 = atomikosProperties16.getClass();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj29 = properties22.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean30 = properties22.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties22.entrySet();
        boolean boolean33 = properties8.remove((java.lang.Object) atomikosProperties16, (java.lang.Object) properties22);
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        java.lang.Object obj43 = properties39.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.lang.Object obj44 = properties8.remove((java.lang.Object) "hi!");
        boolean boolean45 = properties8.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration46 = properties8.propertyNames();
        java.util.Properties properties47 = new java.util.Properties(properties8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setDefaultJtaTimeout((long) 19);
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getService();
        java.util.Properties properties7 = atomikosProperties1.asProperties();
        java.lang.Object obj10 = properties7.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream22, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        recovery12.setMaxRetries(50);
        recovery12.setForgetOrphanedLogEntriesDelay((long) (-1));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setOutputDir("hi!");
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        java.lang.String str15 = atomikosProperties4.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties5.setForceShutdownOnVmExit(true);
        long long10 = atomikosProperties5.getMaxTimeout();
        boolean boolean11 = atomikosProperties5.isEnableLogging();
        boolean boolean12 = properties0.contains((java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties(properties0);
        java.lang.String str14 = properties0.toString();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties1.isForceShutdownOnVmExit();
        java.util.Properties properties11 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        java.lang.Object obj15 = properties11.put((java.lang.Object) atomikosProperties12, (java.lang.Object) 0L);
        java.util.Properties properties16 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount(100);
        atomikosProperties17.setAllowSubTransactions(true);
        boolean boolean22 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean23 = properties16.contains((java.lang.Object) atomikosProperties17);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        java.lang.Object obj33 = properties25.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setLogBaseName("tm.out");
        long long36 = atomikosProperties28.getDefaultJtaTimeout();
        atomikosProperties28.setSerialJtaTransactions(true);
        atomikosProperties28.setCheckpointInterval(10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        java.lang.String str45 = atomikosProperties41.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection50 = properties49.values();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.lang.Object obj59 = properties52.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileCount((-1));
        java.lang.String str64 = atomikosProperties61.getOutputDir();
        atomikosProperties61.setLogBaseName("tm.out");
        boolean boolean67 = properties52.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setConsoleFileCount(100);
        atomikosProperties68.setAllowSubTransactions(true);
        java.lang.Object obj73 = properties52.remove((java.lang.Object) atomikosProperties68);
        atomikosProperties68.setAllowSubTransactions(false);
        atomikosProperties68.setSerialJtaTransactions(true);
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Properties properties79 = new java.util.Properties(properties78);
        properties79.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getConsoleFileName();
        atomikosProperties82.setOutputDir("hi!");
        int int86 = atomikosProperties82.getConsoleFileLimit();
        java.lang.Object obj87 = properties79.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties82);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel88 = atomikosProperties82.getConsoleLogLevel();
        atomikosProperties68.setConsoleLogLevel(atomikosLoggingLevel88);
        atomikosProperties46.setConsoleLogLevel(atomikosLoggingLevel88);
        atomikosProperties41.setConsoleLogLevel(atomikosLoggingLevel88);
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel88);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel88);
        atomikosProperties1.setConsoleLogLevel(atomikosLoggingLevel88);
        atomikosProperties1.setConsoleFileCount(20);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tm.out" + "'", str83, "tm.out");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel88 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel88.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        atomikosProperties4.setForceShutdownOnVmExit(false);
        java.lang.String str14 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        atomikosProperties4.setLogBaseDir("{}");
        atomikosProperties4.setSerialJtaTransactions(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<?> wildcardEnumeration10 = properties7.propertyNames();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        boolean boolean43 = atomikosProperties19.isEnableLogging();
        int int44 = atomikosProperties19.getConsoleFileCount();
        int int45 = atomikosProperties19.getMaxActives();
        long long46 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.util.Properties properties49 = atomikosProperties19.asProperties();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj58 = properties51.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean59 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties51.keys();
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        java.util.Properties properties62 = new java.util.Properties(properties51);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.String str65 = properties51.getProperty("{tm.out=}");
        java.io.Writer writer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties51.store(writer66, "{10=10.0, ={10=10.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxTimeout((long) (short) 1);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getLogBaseDir();
        int int26 = atomikosProperties19.getConsoleFileLimit();
        atomikosProperties19.setMaxTimeout(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setMaxActives((int) (short) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties6.getConsoleLogLevel();
        boolean boolean16 = atomikosProperties6.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        java.lang.Object obj13 = properties9.put((java.lang.Object) atomikosProperties10, (java.lang.Object) 0L);
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        atomikosProperties10.setConsoleFileLimit((int) ' ');
        java.lang.String str18 = atomikosProperties10.getTransactionManagerUniqueName();
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        int int22 = properties21.size();
        boolean boolean23 = properties21.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration26 = properties21.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration27 = properties21.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        boolean boolean29 = properties8.remove((java.lang.Object) properties19, (java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection30 = properties19.values();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        boolean boolean15 = properties13.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.Object obj26 = properties19.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean31 = properties29.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        boolean boolean52 = properties37.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount(100);
        atomikosProperties53.setAllowSubTransactions(true);
        java.lang.Object obj58 = properties37.remove((java.lang.Object) atomikosProperties53);
        java.util.Set<java.lang.Object> objSet59 = properties37.keySet();
        boolean boolean60 = properties13.replace((java.lang.Object) properties19, (java.lang.Object) objEntrySet33, (java.lang.Object) properties37);
        java.lang.String str62 = properties19.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount((-1));
        atomikosProperties63.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties70.getConsoleLogLevel();
        atomikosProperties68.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.Object obj77 = properties10.replace((java.lang.Object) properties19, (java.lang.Object) (byte) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties19.entrySet();
        java.io.OutputStream outputStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.storeToXML(outputStream79, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEntrySet78);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount((-1));
        atomikosProperties34.setTransactionManagerUniqueName("tm.out");
        atomikosProperties34.setForceShutdownOnVmExit(false);
        long long41 = atomikosProperties34.getMaxTimeout();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getConsoleFileName();
        atomikosProperties43.setOutputDir("hi!");
        int int47 = atomikosProperties43.getConsoleFileLimit();
        java.util.Properties properties48 = atomikosProperties43.asProperties();
        java.util.Set<java.lang.String> strSet49 = properties48.stringPropertyNames();
        java.util.Properties properties50 = new java.util.Properties(properties48);
        int int51 = properties50.size();
        java.lang.Object obj52 = properties29.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties50);
        java.util.Set<java.lang.Object> objSet53 = properties50.keySet();
        java.util.Set<java.lang.String> strSet54 = properties50.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(strSet54);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount(100);
        atomikosProperties13.setAllowSubTransactions(true);
        boolean boolean18 = atomikosProperties13.isForceShutdownOnVmExit();
        int int19 = atomikosProperties13.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties13.getRecovery();
        java.lang.Object obj21 = properties12.remove((java.lang.Object) recovery20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        int int24 = properties23.size();
        boolean boolean25 = properties23.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        java.util.Properties properties27 = new java.util.Properties(properties23);
        int int28 = properties23.size();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Properties properties30 = new java.util.Properties(properties23);
        java.util.Properties properties31 = new java.util.Properties(properties23);
        properties23.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        java.lang.String str39 = atomikosProperties33.getService();
        atomikosProperties33.setService("hi!");
        atomikosProperties33.setConsoleFileName("tm.out");
        boolean boolean44 = atomikosProperties33.isSerialJtaTransactions();
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        boolean boolean47 = properties23.equals((java.lang.Object) properties45);
        boolean boolean48 = properties12.equals((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection49 = properties12.values();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objCollection49);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int3 = recovery2.getMaxRetries();
        recovery2.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        java.lang.Object obj6 = properties1.get((java.lang.Object) (short) -1);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.lang.Object obj16 = properties8.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties11);
        atomikosProperties11.setLogBaseName("tm.out");
        atomikosProperties11.setForceShutdownOnVmExit(false);
        int int21 = atomikosProperties11.getMaxActives();
        java.lang.Object obj22 = properties1.remove((java.lang.Object) int21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        int int25 = properties24.size();
        boolean boolean26 = properties24.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        boolean boolean32 = properties30.isEmpty();
        boolean boolean33 = properties24.containsValue((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.keys();
        boolean boolean38 = properties24.containsKey((java.lang.Object) objEnumeration37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration49 = properties46.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount(100);
        atomikosProperties50.setAllowSubTransactions(true);
        boolean boolean55 = atomikosProperties50.isForceShutdownOnVmExit();
        atomikosProperties50.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties50.setConsoleLogLevel(atomikosLoggingLevel60);
        boolean boolean62 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties63 = atomikosProperties50.asProperties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        properties71.clear();
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        boolean boolean75 = properties69.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj76 = properties64.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getConsoleFileName();
        atomikosProperties77.setOutputDir("hi!");
        int int81 = atomikosProperties77.getConsoleFileLimit();
        java.util.Properties properties82 = atomikosProperties77.asProperties();
        java.lang.String str83 = atomikosProperties77.getService();
        atomikosProperties77.setService("hi!");
        atomikosProperties77.setThreadedTwoPhaseCommit(false);
        atomikosProperties77.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties77.setTransactionManagerUniqueName("");
        boolean boolean92 = properties64.containsValue((java.lang.Object) "");
        java.util.Properties properties93 = new java.util.Properties(properties64);
        boolean boolean94 = properties63.equals((java.lang.Object) properties93);
        java.lang.Object obj95 = properties24.replace((java.lang.Object) properties46, (java.lang.Object) boolean94);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties97 = new java.util.Properties(properties1);
        java.lang.Object obj98 = properties97.clone();
        java.lang.Object obj99 = properties97.clone();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "{}");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "{}");
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        java.util.Properties properties33 = new java.util.Properties(properties29);
        java.util.Properties properties34 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.keys();
        java.lang.String str37 = properties34.getProperty("hi!");
        java.lang.Object obj38 = properties34.clone();
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.storeToXML(outputStream39, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = atomikosProperties19.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getConsoleFileName();
        java.lang.Object obj35 = properties31.put((java.lang.Object) atomikosProperties32, (java.lang.Object) 0L);
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.lang.Object obj37 = properties31.clone();
        java.util.Set<java.lang.Object> objSet38 = properties31.keySet();
        java.util.Properties properties39 = new java.util.Properties(properties31);
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        java.lang.Object obj41 = properties39.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.keys();
        boolean boolean43 = properties39.isEmpty();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setConsoleFileCount(100);
        atomikosProperties45.setAllowSubTransactions(true);
        boolean boolean50 = atomikosProperties45.isForceShutdownOnVmExit();
        int int51 = atomikosProperties45.getConsoleFileCount();
        java.util.Properties properties52 = atomikosProperties45.asProperties();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getConsoleFileName();
        atomikosProperties57.setOutputDir("hi!");
        int int61 = atomikosProperties57.getConsoleFileLimit();
        java.lang.Object obj62 = properties54.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setLogBaseName("tm.out");
        long long65 = atomikosProperties57.getDefaultJtaTimeout();
        atomikosProperties57.setTransactionManagerUniqueName("hi!");
        atomikosProperties57.setSerialJtaTransactions(true);
        java.lang.String str70 = atomikosProperties57.getTransactionManagerUniqueName();
        atomikosProperties57.setConsoleFileName("");
        java.lang.String str73 = atomikosProperties57.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery74 = atomikosProperties57.getRecovery();
        java.lang.Object obj75 = properties52.remove((java.lang.Object) atomikosProperties57);
        java.lang.Object obj76 = properties39.remove((java.lang.Object) atomikosProperties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = atomikosProperties57.getRecovery();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(recovery74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(recovery77);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        int int13 = atomikosProperties4.getConsoleFileCount();
        java.lang.String str14 = atomikosProperties4.getOutputDir();
        atomikosProperties4.setMaxTimeout(100L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties4.setAllowSubTransactions(false);
        atomikosProperties4.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
        atomikosProperties4.setConsoleFileLimit(0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean40 = properties38.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getTransactionManagerUniqueName();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties45.getConsoleLogLevel();
        java.lang.Object obj51 = properties38.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) atomikosLoggingLevel50);
        java.util.Collection<java.lang.Object> objCollection52 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 100);
        java.util.Properties properties57 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        java.lang.Object obj61 = properties57.put((java.lang.Object) atomikosProperties58, (java.lang.Object) 0L);
        java.util.Properties properties62 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount(100);
        atomikosProperties63.setAllowSubTransactions(true);
        boolean boolean68 = atomikosProperties63.isForceShutdownOnVmExit();
        boolean boolean69 = properties62.contains((java.lang.Object) atomikosProperties63);
        java.util.Collection<java.lang.Object> objCollection70 = properties62.values();
        boolean boolean71 = properties15.replace((java.lang.Object) properties38, (java.lang.Object) (byte) 100, (java.lang.Object) objCollection70);
        java.util.Properties properties72 = new java.util.Properties(properties38);
        java.util.Collection<java.lang.Object> objCollection73 = properties38.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection73);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str2 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        boolean boolean5 = atomikosProperties3.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties3.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setOutputDir("hi!");
        int int20 = atomikosProperties16.getConsoleFileLimit();
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        boolean boolean22 = properties12.containsValue((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setEnableLogging(false);
        int int27 = atomikosProperties16.getConsoleFileLimit();
        atomikosProperties16.setAllowSubTransactions(true);
        atomikosProperties16.setLogBaseName("{tm.out=}");
        boolean boolean32 = atomikosProperties16.isSerialJtaTransactions();
        boolean boolean33 = properties0.contains((java.lang.Object) atomikosProperties16);
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream34, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setLogBaseName("tm.out");
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setCheckpointInterval((long) 5);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        atomikosProperties19.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        int int32 = atomikosProperties19.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        atomikosProperties11.setLogBaseName("tm.out");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) atomikosProperties11);
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        atomikosProperties11.setMaxTimeout((long) 18);
        java.util.Properties properties21 = atomikosProperties11.asProperties();
        java.lang.String str22 = properties21.toString();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=18, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str22, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=18, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileLimit(100);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEntrySet8);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties4.getRecovery();
        int int12 = recovery11.getMaxRetries();
        recovery11.setRetryInterval(5L);
        recovery11.setMaxRetries((int) ' ');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        int int8 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setOutputDir("tm.out");
        int int6 = atomikosProperties0.getMaxActives();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream5, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties4);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount((-1));
        atomikosProperties9.setConsoleFileName("");
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        int int22 = atomikosProperties18.getConsoleFileLimit();
        java.lang.Object obj23 = properties15.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties18);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel24);
        java.lang.Object obj26 = properties8.remove((java.lang.Object) atomikosLoggingLevel24);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        int int29 = properties28.size();
        boolean boolean30 = properties28.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties28);
        java.util.Properties properties32 = new java.util.Properties(properties28);
        int int33 = properties28.size();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        atomikosProperties35.setOutputDir("hi!");
        int int39 = atomikosProperties35.getConsoleFileLimit();
        java.util.Properties properties40 = atomikosProperties35.asProperties();
        java.lang.String str41 = atomikosProperties35.getService();
        atomikosProperties35.setService("hi!");
        java.lang.Object obj45 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.Object obj55 = properties50.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet56 = properties50.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount((-1));
        java.lang.String str60 = atomikosProperties57.getOutputDir();
        atomikosProperties57.setLogBaseName("tm.out");
        int int63 = atomikosProperties57.getConsoleFileCount();
        boolean boolean64 = properties50.containsKey((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties57.getRecovery();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean71 = properties69.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getTransactionManagerUniqueName();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str77 = atomikosProperties76.getConsoleFileName();
        atomikosProperties76.setOutputDir("hi!");
        int int80 = atomikosProperties76.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = atomikosProperties76.getConsoleLogLevel();
        java.lang.Object obj82 = properties69.putIfAbsent((java.lang.Object) atomikosProperties72, (java.lang.Object) atomikosLoggingLevel81);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.get((java.lang.Object) (byte) -1);
        java.util.Properties properties86 = new java.util.Properties(properties83);
        boolean boolean87 = properties69.equals((java.lang.Object) properties83);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties69.keys();
        java.lang.Object obj89 = properties28.getOrDefault((java.lang.Object) atomikosProperties57, (java.lang.Object) properties69);
        atomikosProperties57.setForceShutdownOnVmExit(true);
        java.lang.String str92 = atomikosProperties57.getOutputDir();
        boolean boolean93 = atomikosProperties57.isThreadedTwoPhaseCommit();
        java.lang.Object obj94 = properties8.remove((java.lang.Object) atomikosProperties57);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tm.out" + "'", str77, "tm.out");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        atomikosProperties3.setOutputDir("hi!");
        int int7 = atomikosProperties3.getConsoleFileLimit();
        atomikosProperties3.setDefaultJtaTimeout(1L);
        atomikosProperties3.setForceShutdownOnVmExit(false);
        boolean boolean12 = atomikosProperties3.isForceShutdownOnVmExit();
        int int13 = atomikosProperties3.getConsoleFileLimit();
        atomikosProperties3.setSerialJtaTransactions(true);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        properties19.clear();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Collection<java.lang.Object> objCollection22 = properties19.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setOutputDir("hi!");
        int int27 = atomikosProperties23.getConsoleFileLimit();
        java.util.Properties properties28 = atomikosProperties23.asProperties();
        boolean boolean29 = properties19.containsValue((java.lang.Object) atomikosProperties23);
        java.lang.String str30 = atomikosProperties23.getService();
        atomikosProperties23.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties23.setConsoleFileCount((int) (short) 0);
        java.util.Properties properties35 = atomikosProperties23.asProperties();
        boolean boolean36 = atomikosProperties23.isAllowSubTransactions();
        java.lang.Object obj37 = properties2.getOrDefault((java.lang.Object) atomikosProperties3, (java.lang.Object) atomikosProperties23);
        java.lang.String str38 = atomikosProperties3.getConsoleFileName();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        int int8 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("tm.out");
        long long12 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        int int13 = atomikosProperties4.getConsoleFileCount();
        java.lang.String str14 = atomikosProperties4.getOutputDir();
        atomikosProperties4.setAllowSubTransactions(true);
        boolean boolean17 = atomikosProperties4.isEnableLogging();
        boolean boolean18 = atomikosProperties4.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.lang.String str13 = atomikosProperties6.getOutputDir();
        atomikosProperties6.setConsoleFileName("{10=10.0}");
        boolean boolean16 = atomikosProperties6.isEnableLogging();
        java.lang.String str17 = atomikosProperties6.getOutputDir();
        java.lang.String str18 = atomikosProperties6.getOutputDir();
        atomikosProperties6.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties7.getRecovery();
        recovery20.setDelay((long) (byte) 1);
        recovery20.setRetryInterval(100L);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(recovery20);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        atomikosProperties33.setAllowSubTransactions(false);
        boolean boolean38 = properties3.contains((java.lang.Object) false);
        java.util.Properties properties39 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        java.lang.Object obj43 = properties39.put((java.lang.Object) atomikosProperties40, (java.lang.Object) 0L);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.lang.Object obj53 = properties45.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties45.entrySet();
        java.util.Properties properties55 = new java.util.Properties(properties45);
        boolean boolean56 = properties3.remove((java.lang.Object) 0L, (java.lang.Object) properties45);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection58 = properties57.values();
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.keys();
        boolean boolean61 = properties45.containsValue((java.lang.Object) properties59);
        java.util.Set<java.lang.String> strSet62 = properties45.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection63 = properties45.values();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(objCollection63);
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("tm.out", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj20 = properties13.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        java.lang.String str25 = atomikosProperties22.getOutputDir();
        atomikosProperties22.setLogBaseName("tm.out");
        boolean boolean28 = properties13.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount(100);
        atomikosProperties29.setAllowSubTransactions(true);
        java.lang.Object obj34 = properties13.remove((java.lang.Object) atomikosProperties29);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.lang.Object obj44 = properties36.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties36.entrySet();
        boolean boolean46 = properties13.containsValue((java.lang.Object) properties36);
        java.util.Properties properties47 = new java.util.Properties(properties36);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet49 = properties36.stringPropertyNames();
        java.io.InputStream inputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.load(inputStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet49);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel10);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        boolean boolean25 = properties19.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj26 = properties14.remove((java.lang.Object) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        atomikosProperties27.setThreadedTwoPhaseCommit(false);
        atomikosProperties27.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties27.setTransactionManagerUniqueName("");
        boolean boolean42 = properties14.containsValue((java.lang.Object) "");
        java.util.Properties properties43 = new java.util.Properties(properties14);
        boolean boolean44 = properties13.equals((java.lang.Object) properties43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet47 = properties46.stringPropertyNames();
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties13.containsValue((java.lang.Object) properties46);
        java.util.Properties properties51 = new java.util.Properties(properties13);
        java.io.InputStream inputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.loadFromXML(inputStream52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.lang.String str13 = atomikosProperties6.getOutputDir();
        java.lang.String str14 = atomikosProperties6.getLogBaseName();
        java.util.Properties properties15 = atomikosProperties6.asProperties();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel16);
        atomikosProperties12.setSerialJtaTransactions(false);
        int int20 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties21 = atomikosProperties12.asProperties();
        atomikosProperties12.setSerialJtaTransactions(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getTransactionManagerUniqueName();
        boolean boolean28 = atomikosProperties26.isForceShutdownOnVmExit();
        atomikosProperties26.setAllowSubTransactions(false);
        atomikosProperties26.setLogBaseName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        boolean boolean52 = properties37.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount(100);
        atomikosProperties53.setAllowSubTransactions(true);
        java.lang.Object obj58 = properties37.remove((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setAllowSubTransactions(false);
        long long61 = atomikosProperties53.getCheckpointInterval();
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        boolean boolean63 = properties33.equals((java.lang.Object) atomikosProperties53);
        java.util.Properties properties64 = new java.util.Properties(properties33);
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Set<java.lang.String> strSet66 = properties64.stringPropertyNames();
        java.util.Properties properties67 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        java.lang.Object obj71 = properties67.put((java.lang.Object) atomikosProperties68, (java.lang.Object) 0L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties67.entrySet();
        boolean boolean73 = properties64.containsValue((java.lang.Object) properties67);
        java.lang.Object obj74 = properties11.putIfAbsent((java.lang.Object) false, (java.lang.Object) properties67);
        java.util.Properties properties75 = new java.util.Properties(properties11);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        int int8 = atomikosProperties0.getConsoleFileCount();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        int int24 = properties23.size();
        boolean boolean25 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties23.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        int int34 = atomikosProperties27.getMaxActives();
        boolean boolean35 = properties23.equals((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setMaxActives((int) (short) 0);
        boolean boolean38 = properties21.containsKey((java.lang.Object) atomikosProperties27);
        java.util.Properties properties39 = new java.util.Properties(properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties21.entrySet();
        java.lang.String str42 = properties21.getProperty("tmlog");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        int int14 = atomikosProperties7.getConsoleFileLimit();
        java.lang.String str15 = atomikosProperties7.getService();
        atomikosProperties7.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties7.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties7.getRecovery();
        recovery19.setForgetOrphanedLogEntriesDelay((long) (byte) 10);
        recovery19.setForgetOrphanedLogEntriesDelay((long) 'a');
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertNotNull(recovery19);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        atomikosProperties6.setMaxActives((-1));
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties6.setLogBaseDir("tmlog");
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties6.setConsoleFileCount(10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{hi!=}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.keys();
        boolean boolean20 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties18.entrySet();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEntrySet21);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel10);
        atomikosProperties6.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties6.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.keys();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.lang.Object obj25 = properties18.setProperty("tm.out", "");
        java.util.Collection<java.lang.Object> objCollection26 = properties18.values();
        boolean boolean27 = properties18.isEmpty();
        boolean boolean28 = properties18.isEmpty();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        java.lang.String str45 = atomikosProperties39.getService();
        int int46 = atomikosProperties39.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        atomikosProperties47.setOutputDir("hi!");
        int int51 = atomikosProperties47.getConsoleFileLimit();
        java.util.Properties properties52 = atomikosProperties47.asProperties();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<?> wildcardEnumeration57 = properties54.propertyNames();
        java.lang.Object obj58 = properties30.getOrDefault((java.lang.Object) int46, (java.lang.Object) properties54);
        java.lang.Object obj59 = properties14.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) int46);
        java.util.Set<java.lang.String> strSet60 = properties14.stringPropertyNames();
        java.lang.Object obj61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = properties14.containsKey(obj61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 50 + "'", obj59, 50);
        org.junit.Assert.assertNotNull(strSet60);
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        long long3 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        recovery0.setDelay((long) (short) 10);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 2);
        recovery0.setForgetOrphanedLogEntriesDelay(52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 5L + "'", long3 == 5L);
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        int int6 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        int int15 = atomikosProperties7.getMaxActives();
        java.lang.String str16 = atomikosProperties7.getService();
        long long17 = atomikosProperties7.getMaxTimeout();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.Object obj17 = properties9.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        boolean boolean18 = atomikosProperties12.isForceShutdownOnVmExit();
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties12.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties12.getRecovery();
        long long23 = recovery22.getDelay();
        long long24 = recovery22.getForgetOrphanedLogEntriesDelay();
        recovery22.setDelay((long) 100);
        recovery22.setForgetOrphanedLogEntriesDelay((long) 1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        boolean boolean47 = properties32.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount(100);
        atomikosProperties48.setAllowSubTransactions(true);
        java.lang.Object obj53 = properties32.remove((java.lang.Object) atomikosProperties48);
        java.util.Properties properties54 = new java.util.Properties(properties32);
        java.lang.String str56 = properties54.getProperty("");
        java.util.Set<java.lang.Object> objSet57 = properties54.keySet();
        java.util.Set<java.lang.String> strSet58 = properties54.stringPropertyNames();
        java.util.Properties properties59 = new java.util.Properties(properties54);
        int int60 = properties59.size();
        java.lang.Object obj61 = properties7.putIfAbsent((java.lang.Object) recovery22, (java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties7.elements();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int5 = atomikosProperties0.getConsoleFileCount();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("tmlog");
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str27 = properties25.getProperty("");
        properties25.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount(100);
        int int32 = atomikosProperties29.getConsoleFileCount();
        atomikosProperties29.setOutputDir("");
        java.lang.String str35 = atomikosProperties29.getConsoleFileName();
        long long36 = atomikosProperties29.getMaxTimeout();
        atomikosProperties29.setMaxActives(100);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getConsoleFileName();
        atomikosProperties43.setOutputDir("hi!");
        int int47 = atomikosProperties43.getConsoleFileLimit();
        java.lang.Object obj48 = properties40.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties43);
        boolean boolean49 = atomikosProperties43.isForceShutdownOnVmExit();
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties43.getService();
        boolean boolean53 = atomikosProperties43.isEnableLogging();
        java.lang.Object obj54 = properties25.put((java.lang.Object) atomikosProperties29, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties25);
        java.io.Writer writer56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.store(writer56, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        int int15 = atomikosProperties4.getMaxActives();
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.lang.String str23 = atomikosProperties17.getService();
        atomikosProperties17.setService("hi!");
        atomikosProperties17.setConsoleFileName("tm.out");
        java.lang.String str28 = atomikosProperties17.getTransactionManagerUniqueName();
        long long29 = atomikosProperties17.getMaxTimeout();
        int int30 = atomikosProperties17.getConsoleFileLimit();
        atomikosProperties17.setConsoleFileCount(1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        atomikosProperties33.setDefaultJtaTimeout(5L);
        java.lang.Object obj41 = properties16.putIfAbsent((java.lang.Object) atomikosProperties17, (java.lang.Object) atomikosProperties33);
        atomikosProperties17.setOutputDir("{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.util.Properties properties50 = new java.util.Properties(properties2);
        java.lang.String str51 = properties2.toString();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties5.keys();
        java.util.Properties properties8 = new java.util.Properties(properties5);
        java.lang.String str9 = properties5.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        boolean boolean20 = atomikosProperties14.isForceShutdownOnVmExit();
        atomikosProperties14.setConsoleFileName("");
        int int23 = atomikosProperties14.getMaxActives();
        boolean boolean24 = atomikosProperties14.isThreadedTwoPhaseCommit();
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj27 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        java.util.Properties properties33 = atomikosProperties28.asProperties();
        java.lang.String str34 = atomikosProperties28.getService();
        atomikosProperties28.setService("hi!");
        atomikosProperties28.setConsoleFileName("tm.out");
        boolean boolean39 = atomikosProperties28.isSerialJtaTransactions();
        java.util.Properties properties40 = atomikosProperties28.asProperties();
        java.util.Enumeration<?> wildcardEnumeration41 = properties40.propertyNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = properties5.replace((java.lang.Object) atomikosProperties14, obj27, (java.lang.Object) properties40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setOutputDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.util.Set<java.lang.String> strSet49 = properties29.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties29.keys();
        java.io.Writer writer51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.store(writer51, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        int int15 = properties14.size();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) 18);
        long long8 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties16.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet22 = properties16.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj30 = properties12.put((java.lang.Object) properties16, (java.lang.Object) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties12.elements();
        boolean boolean32 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties12.entrySet();
        int int34 = properties12.size();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Properties properties7 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.util.Properties properties13 = atomikosProperties8.asProperties();
        java.lang.String str14 = atomikosProperties8.getService();
        atomikosProperties8.setService("hi!");
        java.lang.Object obj18 = properties7.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.Object obj28 = properties23.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet29 = properties23.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount((-1));
        java.lang.String str33 = atomikosProperties30.getOutputDir();
        atomikosProperties30.setLogBaseName("tm.out");
        int int36 = atomikosProperties30.getConsoleFileCount();
        boolean boolean37 = properties23.containsKey((java.lang.Object) atomikosProperties30);
        atomikosProperties30.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties30.getRecovery();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean44 = properties42.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getTransactionManagerUniqueName();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties49.getConsoleLogLevel();
        java.lang.Object obj55 = properties42.putIfAbsent((java.lang.Object) atomikosProperties45, (java.lang.Object) atomikosLoggingLevel54);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.get((java.lang.Object) (byte) -1);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        boolean boolean60 = properties42.equals((java.lang.Object) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties42.keys();
        java.lang.Object obj62 = properties1.getOrDefault((java.lang.Object) atomikosProperties30, (java.lang.Object) properties42);
        boolean boolean64 = properties42.containsValue((java.lang.Object) 1.0d);
        java.lang.Object obj65 = properties42.clone();
        java.io.OutputStream outputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.storeToXML(outputStream66, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        java.util.Set<java.lang.String> strSet19 = properties17.stringPropertyNames();
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) strSet19);
        java.util.Collection<java.lang.Object> objCollection21 = properties0.values();
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Set<java.lang.Object> objSet24 = properties0.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objSet24);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.lang.Object obj18 = properties5.setProperty("", "");
        java.util.Properties properties19 = new java.util.Properties(properties5);
        properties5.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties5.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long23 = recovery22.getForgetOrphanedLogEntriesDelay();
        recovery22.setDelay((long) (short) 1);
        long long26 = recovery22.getRetryInterval();
        int int27 = recovery22.getMaxRetries();
        recovery22.setMaxRetries((int) (byte) 1);
        java.lang.Object obj30 = properties5.remove((java.lang.Object) recovery22);
        recovery22.setMaxRetries((int) (byte) -1);
        recovery22.setDelay(10L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        atomikosProperties11.setLogBaseName("tm.out");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) atomikosProperties11);
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        java.lang.String str20 = properties18.getProperty("hi!");
        int int21 = properties18.size();
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean26 = properties24.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getTransactionManagerUniqueName();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties31.getConsoleLogLevel();
        java.lang.Object obj37 = properties24.putIfAbsent((java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosLoggingLevel36);
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.get((java.lang.Object) (byte) -1);
        java.util.Properties properties41 = new java.util.Properties(properties38);
        boolean boolean42 = properties24.equals((java.lang.Object) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties24.keys();
        java.util.Properties properties44 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setConsoleFileCount((-1));
        atomikosProperties45.setTransactionManagerUniqueName("tm.out");
        java.lang.String str50 = atomikosProperties45.getLogBaseName();
        atomikosProperties45.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties45.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties45.setMaxActives((int) '4');
        boolean boolean57 = properties44.equals((java.lang.Object) '4');
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties44.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getTransactionManagerUniqueName();
        boolean boolean61 = atomikosProperties59.isForceShutdownOnVmExit();
        atomikosProperties59.setAllowSubTransactions(false);
        atomikosProperties59.setLogBaseName("");
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection68 = properties67.values();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        properties70.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.lang.Object obj77 = properties70.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setConsoleFileCount((-1));
        java.lang.String str82 = atomikosProperties79.getOutputDir();
        atomikosProperties79.setLogBaseName("tm.out");
        boolean boolean85 = properties70.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setConsoleFileCount(100);
        atomikosProperties86.setAllowSubTransactions(true);
        java.lang.Object obj91 = properties70.remove((java.lang.Object) atomikosProperties86);
        atomikosProperties86.setAllowSubTransactions(false);
        long long94 = atomikosProperties86.getCheckpointInterval();
        boolean boolean95 = atomikosProperties86.isSerialJtaTransactions();
        boolean boolean96 = properties66.equals((java.lang.Object) atomikosProperties86);
        java.util.Properties properties97 = new java.util.Properties(properties66);
        boolean boolean98 = properties44.containsKey((java.lang.Object) properties66);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 18 + "'", int21 == 18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 500L + "'", long94 == 500L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        atomikosProperties11.setLogBaseName("tm.out");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties11.getConsoleLogLevel();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties0.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.Object obj12 = properties0.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties8);
        java.lang.Object obj15 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.lang.Object obj16 = properties8.clone();
        int int17 = properties8.size();
        java.util.Set<java.lang.Object> objSet18 = properties8.keySet();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream19, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setOutputDir("tmlog");
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives(97);
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long4 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 100);
        recovery0.setDelay((long) (short) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.lang.String str13 = properties1.getProperty("{}");
        java.util.Set<java.lang.String> strSet14 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        java.util.Properties properties20 = atomikosProperties15.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        properties22.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Enumeration<?> wildcardEnumeration25 = properties22.propertyNames();
        java.lang.Object obj26 = properties22.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties22.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties28.setForceShutdownOnVmExit(true);
        long long33 = atomikosProperties28.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties28.getRecovery();
        long long35 = recovery34.getDelay();
        long long36 = recovery34.getDelay();
        recovery34.setRetryInterval((long) 35);
        java.lang.Object obj39 = properties1.getOrDefault((java.lang.Object) objEnumeration27, (java.lang.Object) 35);
        java.util.Properties properties40 = new java.util.Properties(properties1);
        java.lang.Object obj41 = properties40.clone();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 35 + "'", obj39, 35);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        int int14 = properties13.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties13.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount(100);
        atomikosProperties16.setAllowSubTransactions(true);
        boolean boolean21 = atomikosProperties16.isForceShutdownOnVmExit();
        int int22 = atomikosProperties16.getConsoleFileCount();
        java.util.Properties properties23 = atomikosProperties16.asProperties();
        boolean boolean24 = properties13.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.String str28 = properties25.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj29 = properties25.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties25.entrySet();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNotNull(objEntrySet30);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties4.getRecovery();
        long long15 = recovery14.getRetryInterval();
        long long16 = recovery14.getDelay();
        recovery14.setForgetOrphanedLogEntriesDelay(0L);
        long long19 = recovery14.getForgetOrphanedLogEntriesDelay();
        recovery14.setForgetOrphanedLogEntriesDelay((long) 20);
        int int22 = recovery14.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        int int5 = atomikosProperties0.getMaxActives();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        int int10 = properties9.size();
        java.util.Set<java.lang.String> strSet11 = properties9.stringPropertyNames();
        java.util.Properties properties12 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        java.lang.Object obj16 = properties12.put((java.lang.Object) atomikosProperties13, (java.lang.Object) 0L);
        long long17 = atomikosProperties13.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties13.getConsoleFileName();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        java.lang.Object obj21 = properties9.get((java.lang.Object) boolean20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties9.keys();
        java.lang.Object obj23 = properties6.get((java.lang.Object) properties9);
        java.lang.String str24 = properties9.toString();
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.get((java.lang.Object) (byte) -1);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.String str18 = atomikosProperties16.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties16.getConsoleLogLevel();
        boolean boolean20 = properties12.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str21 = properties12.toString();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel29);
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean33 = properties24.containsValue((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str36 = atomikosProperties25.getLogBaseName();
        java.lang.Object obj37 = properties11.put((java.lang.Object) str21, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.lang.Object obj47 = properties39.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties42);
        boolean boolean48 = atomikosProperties42.isForceShutdownOnVmExit();
        atomikosProperties42.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties42.getService();
        atomikosProperties42.setTransactionManagerUniqueName("");
        boolean boolean54 = atomikosProperties42.isEnableLogging();
        long long55 = atomikosProperties42.getCheckpointInterval();
        boolean boolean56 = properties11.equals((java.lang.Object) long55);
        int int57 = properties11.size();
        java.util.Set<java.lang.String> strSet58 = properties11.stringPropertyNames();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 500L + "'", long55 == 500L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strSet58);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        boolean boolean23 = properties8.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setAllowSubTransactions(true);
        java.lang.Object obj29 = properties8.remove((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setAllowSubTransactions(false);
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean34 = properties1.containsKey((java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = new java.util.Properties(properties1);
        java.util.Properties properties36 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection37 = properties1.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj48 = properties41.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount((-1));
        java.lang.String str53 = atomikosProperties50.getOutputDir();
        atomikosProperties50.setLogBaseName("tm.out");
        boolean boolean56 = properties41.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount(100);
        atomikosProperties57.setAllowSubTransactions(true);
        java.lang.Object obj62 = properties41.remove((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setAllowSubTransactions(false);
        atomikosProperties57.setSerialJtaTransactions(true);
        boolean boolean67 = atomikosProperties57.isSerialJtaTransactions();
        atomikosProperties57.setOutputDir("{}");
        boolean boolean70 = atomikosProperties57.isAllowSubTransactions();
        atomikosProperties57.setAllowSubTransactions(false);
        atomikosProperties57.setCheckpointInterval((long) 5);
        java.lang.Object obj75 = properties1.get((java.lang.Object) atomikosProperties57);
        boolean boolean76 = properties1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        int int34 = properties29.size();
        java.util.Set<java.lang.Object> objSet35 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount((-1));
        java.lang.String str39 = atomikosProperties36.getOutputDir();
        atomikosProperties36.setLogBaseName("tm.out");
        atomikosProperties36.setLogBaseDir("tm.out");
        java.lang.String str44 = atomikosProperties36.getLogBaseDir();
        atomikosProperties36.setDefaultJtaTimeout(10L);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = atomikosProperties36.getRecovery();
        recovery48.setMaxRetries((int) (byte) 10);
        java.lang.Object obj51 = properties29.get((java.lang.Object) (byte) 10);
        java.io.PrintWriter printWriter52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.list(printWriter52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(recovery48);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        boolean boolean11 = properties1.isEmpty();
        int int12 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties1.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        int int22 = atomikosProperties18.getConsoleFileLimit();
        java.lang.Object obj23 = properties15.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties18);
        atomikosProperties18.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties26.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel28);
        java.lang.String str30 = atomikosProperties18.getLogBaseDir();
        boolean boolean31 = atomikosProperties18.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties18.getRecovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties1.containsKey((java.lang.Object) int33);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean8 = atomikosProperties1.isSerialJtaTransactions();
        atomikosProperties1.setDefaultJtaTimeout(86400000L);
        atomikosProperties1.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setOutputDir("hi!");
        java.lang.String str12 = atomikosProperties4.getTransactionManagerUniqueName();
        java.util.Properties properties13 = atomikosProperties4.asProperties();
        java.io.Reader reader14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(reader14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        int int14 = properties13.size();
        boolean boolean15 = properties13.isEmpty();
        java.lang.String str17 = properties13.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setDefaultJtaTimeout(0L);
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties1.getRecovery();
        recovery10.setMaxRetries(50);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        int int15 = atomikosProperties4.getMaxActives();
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.lang.String str23 = atomikosProperties17.getService();
        atomikosProperties17.setService("hi!");
        atomikosProperties17.setConsoleFileName("tm.out");
        java.lang.String str28 = atomikosProperties17.getTransactionManagerUniqueName();
        long long29 = atomikosProperties17.getMaxTimeout();
        int int30 = atomikosProperties17.getConsoleFileLimit();
        atomikosProperties17.setConsoleFileCount(1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        atomikosProperties33.setDefaultJtaTimeout(5L);
        java.lang.Object obj41 = properties16.putIfAbsent((java.lang.Object) atomikosProperties17, (java.lang.Object) atomikosProperties33);
        java.io.InputStream inputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.loadFromXML(inputStream42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long18 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection50 = properties49.values();
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.keys();
        boolean boolean53 = properties29.containsValue((java.lang.Object) properties49);
        java.util.Properties properties54 = new java.util.Properties(properties49);
        java.util.Enumeration<?> wildcardEnumeration55 = properties54.propertyNames();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties16.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet22 = properties16.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj30 = properties12.put((java.lang.Object) properties16, (java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        java.lang.String str36 = atomikosProperties31.getService();
        java.lang.String str37 = atomikosProperties31.getOutputDir();
        atomikosProperties31.setOutputDir("tmlog");
        long long40 = atomikosProperties31.getMaxTimeout();
        java.lang.String str41 = atomikosProperties31.getLogBaseName();
        long long42 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long45 = atomikosProperties31.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties12.remove((java.lang.Object) atomikosProperties31);
        java.io.PrintWriter printWriter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printWriter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("{10=10.0, {com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        int int8 = properties7.size();
        java.lang.Object obj9 = null;
        boolean boolean10 = properties7.equals(obj9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        java.lang.String str14 = atomikosProperties12.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties12.getConsoleLogLevel();
        atomikosProperties12.setLogBaseDir("tm.out");
        java.lang.String str18 = atomikosProperties12.getLogBaseDir();
        atomikosProperties12.setConsoleFileCount((int) (byte) 0);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getTransactionManagerUniqueName();
        boolean boolean26 = atomikosProperties24.isForceShutdownOnVmExit();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties24.getConsoleLogLevel();
        atomikosProperties24.setConsoleFileLimit(52);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties24.getRecovery();
        recovery31.setForgetOrphanedLogEntriesDelay(1L);
        java.lang.Object obj34 = properties7.put((java.lang.Object) atomikosProperties12, (java.lang.Object) recovery31);
        long long35 = recovery31.getDelay();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<?> wildcardEnumeration10 = properties7.propertyNames();
        java.lang.Object obj11 = properties7.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties7.elements();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream13, "{hi!=10}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getMaxActives();
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long5 = recovery4.getForgetOrphanedLogEntriesDelay();
        recovery4.setDelay((long) (short) 1);
        long long8 = recovery4.getForgetOrphanedLogEntriesDelay();
        recovery4.setDelay((long) '4');
        int int11 = recovery4.getMaxRetries();
        recovery4.setDelay((long) (short) 0);
        boolean boolean14 = properties3.containsKey((java.lang.Object) recovery4);
        properties3.clear();
        java.util.Collection<java.lang.Object> objCollection16 = properties3.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objCollection16);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isSerialJtaTransactions();
        int int26 = atomikosProperties19.getConsoleFileLimit();
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        atomikosProperties19.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int31 = atomikosProperties19.getMaxActives();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        boolean boolean47 = properties32.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount(100);
        atomikosProperties48.setAllowSubTransactions(true);
        java.lang.Object obj53 = properties32.remove((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setAllowSubTransactions(false);
        atomikosProperties48.setSerialJtaTransactions(true);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setOutputDir("hi!");
        int int66 = atomikosProperties62.getConsoleFileLimit();
        java.lang.Object obj67 = properties59.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties62);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties26.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties19.setLogBaseDir("");
        java.lang.Class<?> wildcardClass74 = atomikosProperties19.getClass();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setConsoleFileCount(100);
        int int41 = atomikosProperties38.getConsoleFileCount();
        atomikosProperties38.setOutputDir("");
        java.lang.String str44 = atomikosProperties38.getConsoleFileName();
        int int45 = atomikosProperties38.getConsoleFileCount();
        boolean boolean46 = atomikosProperties38.isEnableLogging();
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        boolean boolean48 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setService("tm.out");
        boolean boolean51 = properties37.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties52 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getConsoleFileName();
        java.lang.Object obj56 = properties52.put((java.lang.Object) atomikosProperties53, (java.lang.Object) 0L);
        java.lang.Object obj59 = properties52.setProperty("", "");
        java.lang.Object obj62 = properties52.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getTransactionManagerUniqueName();
        atomikosProperties63.setAllowSubTransactions(false);
        boolean boolean67 = properties52.containsKey((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setConsoleFileLimit(100);
        boolean boolean71 = properties37.remove((java.lang.Object) atomikosProperties63, (java.lang.Object) 50);
        int int72 = atomikosProperties63.getConsoleFileLimit();
        java.util.Properties properties73 = atomikosProperties63.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(properties73);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long5 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getDelay();
        recovery6.setDelay(10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean10 = properties8.containsValue((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.String str13 = properties8.getProperty("hi!");
        java.util.Set<java.lang.String> strSet14 = properties8.stringPropertyNames();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean18 = properties16.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setOutputDir("hi!");
        int int27 = atomikosProperties23.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties23.getConsoleLogLevel();
        java.lang.Object obj29 = properties16.putIfAbsent((java.lang.Object) atomikosProperties19, (java.lang.Object) atomikosLoggingLevel28);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) (byte) -1);
        java.util.Properties properties33 = new java.util.Properties(properties30);
        boolean boolean34 = properties16.equals((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties16.keys();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.setProperty("", "hi!");
        java.util.Properties properties45 = new java.util.Properties(properties37);
        boolean boolean46 = properties37.isEmpty();
        boolean boolean47 = properties16.contains((java.lang.Object) boolean46);
        java.util.Set<java.lang.String> strSet48 = properties16.stringPropertyNames();
        java.util.Properties properties49 = new java.util.Properties(properties16);
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        java.lang.Object obj51 = properties1.putIfAbsent((java.lang.Object) strSet14, (java.lang.Object) objSet50);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream52, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        recovery0.setRetryInterval(100L);
        long long6 = recovery0.getRetryInterval();
        recovery0.setDelay((long) 1);
        recovery0.setForgetOrphanedLogEntriesDelay(32L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) 0);
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties6.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet12 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        int int19 = atomikosProperties13.getConsoleFileCount();
        boolean boolean20 = properties6.containsKey((java.lang.Object) atomikosProperties13);
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        java.util.Properties properties23 = atomikosProperties13.asProperties();
        long long24 = atomikosProperties13.getMaxTimeout();
        atomikosProperties13.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.lang.Object obj7 = properties6.clone();
        java.lang.Class<?> wildcardClass8 = properties6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setRetryInterval(86400000L);
        long long8 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval(0L);
        long long11 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) (byte) 10);
        int int3 = recovery0.getMaxRetries();
        recovery0.setDelay(10L);
        recovery0.setRetryInterval((long) (short) 10);
        recovery0.setDelay((long) 50);
        recovery0.setRetryInterval(97L);
        recovery0.setDelay(35L);
        long long14 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 97L + "'", long14 == 97L);
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties0.clone();
        java.util.Set<java.lang.Object> objSet7 = properties0.keySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        properties0.clear();
        java.util.Properties properties10 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setConsoleFileLimit((int) (byte) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties11.getConsoleLogLevel();
        int int15 = atomikosProperties11.getMaxActives();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.Object obj26 = properties19.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount((-1));
        java.lang.String str31 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setLogBaseName("tm.out");
        boolean boolean34 = properties19.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount(100);
        atomikosProperties35.setAllowSubTransactions(true);
        java.lang.Object obj40 = properties19.remove((java.lang.Object) atomikosProperties35);
        atomikosProperties35.setAllowSubTransactions(false);
        int int43 = atomikosProperties35.getConsoleFileCount();
        atomikosProperties35.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties46 = atomikosProperties35.asProperties();
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        int int49 = properties48.size();
        boolean boolean50 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties48.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setOutputDir("hi!");
        int int56 = atomikosProperties52.getConsoleFileLimit();
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        java.lang.String str58 = atomikosProperties52.getService();
        int int59 = atomikosProperties52.getMaxActives();
        boolean boolean60 = properties48.equals((java.lang.Object) atomikosProperties52);
        int int61 = atomikosProperties52.getConsoleFileCount();
        java.util.Properties properties62 = atomikosProperties52.asProperties();
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties10.put((java.lang.Object) int15, (java.lang.Object) properties64);
        java.io.Writer writer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer66, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        long long6 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) 10);
        long long9 = recovery0.getDelay();
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long11 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setOutputDir("{}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long9 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties8.setMaxTimeout(1L);
        java.lang.Object obj13 = properties6.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties8);
        java.lang.Object obj16 = properties6.setProperty("{=hi!}", "{tm.out=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount(100);
        int int20 = atomikosProperties17.getConsoleFileCount();
        atomikosProperties17.setOutputDir("");
        java.lang.String str23 = atomikosProperties17.getConsoleFileName();
        int int24 = atomikosProperties17.getConsoleFileCount();
        boolean boolean25 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setCheckpointInterval((long) (short) 10);
        atomikosProperties17.setOutputDir("tmlog");
        java.util.Properties properties30 = atomikosProperties17.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        java.lang.String str33 = atomikosProperties31.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties31.setLogBaseDir("tm.out");
        java.lang.String str37 = atomikosProperties31.getLogBaseDir();
        atomikosProperties31.setConsoleFileCount((int) (byte) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties31.getRecovery();
        long long41 = recovery40.getDelay();
        java.lang.Object obj42 = properties6.getOrDefault((java.lang.Object) atomikosProperties17, (java.lang.Object) recovery40);
        atomikosProperties17.setSerialJtaTransactions(true);
        atomikosProperties17.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties47 = atomikosProperties17.asProperties();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(properties47);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        boolean boolean27 = atomikosProperties19.isAllowSubTransactions();
        atomikosProperties19.setService("{10=10.0}");
        atomikosProperties19.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setMaxRetries((int) '#');
        recovery0.setMaxRetries((int) (byte) -1);
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int11 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.String str10 = properties8.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        java.lang.Object obj20 = properties12.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties15);
        boolean boolean21 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties15.getService();
        atomikosProperties15.setTransactionManagerUniqueName("");
        atomikosProperties15.setOutputDir("hi!");
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean31 = atomikosProperties15.isEnableLogging();
        boolean boolean32 = properties8.containsValue((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        int int13 = properties12.size();
        boolean boolean14 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties12.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setOutputDir("hi!");
        int int20 = atomikosProperties16.getConsoleFileLimit();
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        java.lang.String str22 = atomikosProperties16.getService();
        int int23 = atomikosProperties16.getMaxActives();
        boolean boolean24 = properties12.equals((java.lang.Object) atomikosProperties16);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) objEntrySet10, (java.lang.Object) boolean24);
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Object obj50 = properties42.get(obj49);
        java.util.Collection<java.lang.Object> objCollection51 = properties42.values();
        boolean boolean52 = properties1.remove((java.lang.Object) properties26, (java.lang.Object) properties42);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        boolean boolean19 = properties8.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        properties0.clear();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean16 = properties13.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Collection<java.lang.Object> objCollection24 = properties21.values();
        java.lang.Object obj25 = properties13.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount(100);
        int int29 = atomikosProperties26.getConsoleFileCount();
        atomikosProperties26.setOutputDir("");
        java.lang.String str32 = atomikosProperties26.getConsoleFileName();
        boolean boolean33 = properties21.equals((java.lang.Object) str32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.Object obj43 = properties35.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties38);
        boolean boolean44 = atomikosProperties38.isForceShutdownOnVmExit();
        atomikosProperties38.setOutputDir("tm.out");
        java.lang.String str47 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setOutputDir("{hi!=}");
        long long50 = atomikosProperties38.getCheckpointInterval();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection52 = properties51.values();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.keys();
        java.lang.String str56 = properties53.getProperty("{}");
        boolean boolean57 = properties0.replace((java.lang.Object) properties21, (java.lang.Object) atomikosProperties38, (java.lang.Object) properties53);
        java.util.Set<java.lang.String> strSet58 = properties0.stringPropertyNames();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        int int67 = atomikosProperties63.getConsoleFileLimit();
        java.lang.Object obj68 = properties60.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties63);
        boolean boolean69 = atomikosProperties63.isForceShutdownOnVmExit();
        atomikosProperties63.setConsoleFileName("");
        java.lang.String str72 = atomikosProperties63.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = atomikosProperties63.getRecovery();
        long long74 = recovery73.getRetryInterval();
        recovery73.setRetryInterval(500L);
        long long77 = recovery73.getRetryInterval();
        long long78 = recovery73.getForgetOrphanedLogEntriesDelay();
        recovery73.setDelay((long) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str82 = atomikosProperties81.getConsoleFileName();
        atomikosProperties81.setOutputDir("hi!");
        boolean boolean85 = atomikosProperties81.isThreadedTwoPhaseCommit();
        java.util.Properties properties86 = atomikosProperties81.asProperties();
        atomikosProperties81.setCheckpointInterval((long) ' ');
        java.lang.Object obj89 = properties0.getOrDefault((java.lang.Object) (short) 100, (java.lang.Object) ' ');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 500L + "'", long50 == 500L);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(recovery73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10000L + "'", long74 == 10000L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 500L + "'", long77 == 500L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 86400000L + "'", long78 == 86400000L);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + ' ' + "'", obj89, ' ');
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties2.entrySet();
        java.util.Set<java.lang.Object> objSet5 = properties2.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        java.lang.String str9 = atomikosProperties6.getOutputDir();
        atomikosProperties6.setLogBaseName("tm.out");
        atomikosProperties6.setLogBaseDir("tm.out");
        java.lang.String str14 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setDefaultJtaTimeout(10L);
        atomikosProperties6.setSerialJtaTransactions(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        long long36 = recovery34.getForgetOrphanedLogEntriesDelay();
        recovery34.setMaxRetries((int) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount(100);
        int int42 = atomikosProperties39.getConsoleFileCount();
        atomikosProperties39.setOutputDir("");
        java.lang.String str45 = atomikosProperties39.getConsoleFileName();
        long long46 = atomikosProperties39.getMaxTimeout();
        atomikosProperties39.setMaxActives(100);
        boolean boolean49 = properties2.replace((java.lang.Object) atomikosProperties6, (java.lang.Object) (short) 1, (java.lang.Object) 100);
        java.lang.String str51 = properties2.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties52 = new java.util.Properties(properties2);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        atomikosProperties44.setLogBaseDir("tm.out");
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean55 = properties37.replace((java.lang.Object) objSet42, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties44);
        java.lang.String str56 = atomikosProperties44.getService();
        java.lang.Object obj57 = properties29.remove((java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        atomikosProperties58.setOutputDir("hi!");
        int int62 = atomikosProperties58.getConsoleFileLimit();
        boolean boolean63 = atomikosProperties58.isForceShutdownOnVmExit();
        boolean boolean64 = atomikosProperties58.isForceShutdownOnVmExit();
        java.lang.String str65 = atomikosProperties58.getService();
        atomikosProperties58.setService("{10=10.0}");
        java.lang.String str68 = atomikosProperties58.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = atomikosProperties58.getConsoleLogLevel();
        java.lang.Object obj70 = properties29.remove((java.lang.Object) atomikosLoggingLevel69);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int72 = recovery71.getMaxRetries();
        recovery71.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery71.setMaxRetries((int) '4');
        long long77 = recovery71.getRetryInterval();
        recovery71.setDelay((long) 32);
        long long80 = recovery71.getRetryInterval();
        recovery71.setMaxRetries(5);
        boolean boolean83 = properties29.contains((java.lang.Object) 5);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel69 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel69.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10000L + "'", long77 == 10000L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.lang.Object obj22 = properties14.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties17);
        boolean boolean23 = atomikosProperties17.isForceShutdownOnVmExit();
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties17.getService();
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj29 = properties5.get((java.lang.Object) "");
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        int int32 = properties31.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        properties31.clear();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean38 = properties36.containsValue((java.lang.Object) 10L);
        java.lang.Object obj39 = properties36.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        java.util.Properties properties45 = atomikosProperties40.asProperties();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        atomikosProperties54.setOutputDir("hi!");
        int int58 = atomikosProperties54.getConsoleFileLimit();
        java.lang.Object obj59 = properties51.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties54);
        atomikosProperties54.setLogBaseName("tm.out");
        atomikosProperties54.setForceShutdownOnVmExit(false);
        boolean boolean64 = properties47.containsValue((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setService("hi!");
        atomikosProperties54.setService("");
        java.lang.String str69 = atomikosProperties54.getConsoleFileName();
        atomikosProperties54.setMaxActives((int) (byte) -1);
        boolean boolean72 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str73 = atomikosProperties54.getOutputDir();
        java.lang.Object obj74 = properties31.getOrDefault(obj39, (java.lang.Object) str73);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "hi!" + "'", obj74, "hi!");
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str3 = atomikosProperties2.getConsoleFileName();
        java.lang.Object obj5 = properties1.put((java.lang.Object) atomikosProperties2, (java.lang.Object) 0L);
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.lang.Object obj10 = properties9.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount(100);
        atomikosProperties12.setCheckpointInterval((long) (short) 10);
        boolean boolean17 = properties0.remove((java.lang.Object) objEntrySet11, (java.lang.Object) atomikosProperties12);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount((-1));
        java.lang.String str33 = atomikosProperties30.getOutputDir();
        atomikosProperties30.setLogBaseName("tm.out");
        boolean boolean36 = properties21.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setConsoleFileCount(100);
        atomikosProperties37.setAllowSubTransactions(true);
        java.lang.Object obj42 = properties21.remove((java.lang.Object) atomikosProperties37);
        atomikosProperties37.setAllowSubTransactions(false);
        int int45 = atomikosProperties37.getConsoleFileCount();
        atomikosProperties37.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties48 = atomikosProperties37.asProperties();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        int int51 = properties50.size();
        boolean boolean52 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties50.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        atomikosProperties54.setOutputDir("hi!");
        int int58 = atomikosProperties54.getConsoleFileLimit();
        java.util.Properties properties59 = atomikosProperties54.asProperties();
        java.lang.String str60 = atomikosProperties54.getService();
        int int61 = atomikosProperties54.getMaxActives();
        boolean boolean62 = properties50.equals((java.lang.Object) atomikosProperties54);
        int int63 = atomikosProperties54.getConsoleFileCount();
        java.util.Properties properties64 = atomikosProperties54.asProperties();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        java.util.Enumeration<?> wildcardEnumeration66 = properties64.propertyNames();
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str72 = atomikosProperties71.getConsoleFileName();
        atomikosProperties71.setOutputDir("hi!");
        int int75 = atomikosProperties71.getConsoleFileLimit();
        java.lang.Object obj76 = properties68.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties71);
        boolean boolean77 = atomikosProperties71.isForceShutdownOnVmExit();
        atomikosProperties71.setConsoleFileName("");
        atomikosProperties71.setOutputDir("{hi!=}");
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties64, (java.lang.Object) atomikosProperties71);
        atomikosProperties71.setConsoleFileLimit(18);
        atomikosProperties71.setLogBaseDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tm.out" + "'", str3, "tm.out");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(wildcardEnumeration66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        java.util.Collection<java.lang.Object> objCollection11 = properties1.values();
        java.lang.String str13 = properties1.getProperty("{hi!=}");
        java.io.InputStream inputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        java.util.Properties properties30 = new java.util.Properties(properties22);
        boolean boolean31 = properties22.isEmpty();
        boolean boolean32 = properties1.contains((java.lang.Object) boolean31);
        java.util.Set<java.lang.String> strSet33 = properties1.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        boolean boolean41 = atomikosProperties36.isForceShutdownOnVmExit();
        boolean boolean42 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.String str43 = atomikosProperties36.getService();
        int int44 = atomikosProperties36.getConsoleFileLimit();
        boolean boolean45 = atomikosProperties36.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties36.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setConsoleFileCount((-1));
        java.lang.String str50 = atomikosProperties47.getOutputDir();
        atomikosProperties47.setLogBaseName("tm.out");
        atomikosProperties47.setLogBaseDir("tm.out");
        java.lang.String str55 = atomikosProperties47.getLogBaseDir();
        atomikosProperties47.setDefaultJtaTimeout(10L);
        atomikosProperties47.setLogBaseDir("");
        boolean boolean60 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setConsoleFileLimit(1);
        long long63 = atomikosProperties47.getCheckpointInterval();
        atomikosProperties47.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean66 = properties34.remove((java.lang.Object) atomikosLoggingLevel46, (java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 500L + "'", long63 == 500L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.lang.Object obj22 = properties15.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean27 = properties25.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties25.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.lang.Object obj40 = properties33.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount((-1));
        java.lang.String str45 = atomikosProperties42.getOutputDir();
        atomikosProperties42.setLogBaseName("tm.out");
        boolean boolean48 = properties33.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount(100);
        atomikosProperties49.setAllowSubTransactions(true);
        java.lang.Object obj54 = properties33.remove((java.lang.Object) atomikosProperties49);
        java.util.Set<java.lang.Object> objSet55 = properties33.keySet();
        boolean boolean56 = properties9.replace((java.lang.Object) properties15, (java.lang.Object) objEntrySet29, (java.lang.Object) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getConsoleFileName();
        atomikosProperties57.setOutputDir("hi!");
        int int61 = atomikosProperties57.getConsoleFileLimit();
        java.util.Properties properties62 = atomikosProperties57.asProperties();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties(properties63);
        properties64.clear();
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str68 = atomikosProperties67.getConsoleFileName();
        atomikosProperties67.setOutputDir("hi!");
        int int71 = atomikosProperties67.getConsoleFileLimit();
        java.util.Properties properties72 = atomikosProperties67.asProperties();
        java.lang.String str73 = atomikosProperties67.getService();
        atomikosProperties67.setService("hi!");
        atomikosProperties67.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery78 = atomikosProperties67.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str80 = atomikosProperties79.getConsoleFileName();
        atomikosProperties79.setOutputDir("hi!");
        java.lang.String str83 = atomikosProperties79.getOutputDir();
        boolean boolean84 = properties33.replace((java.lang.Object) properties64, (java.lang.Object) atomikosProperties67, (java.lang.Object) atomikosProperties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str86 = atomikosProperties85.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str88 = atomikosProperties87.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel89 = atomikosProperties87.getConsoleLogLevel();
        atomikosProperties85.setConsoleLogLevel(atomikosLoggingLevel89);
        atomikosProperties67.setConsoleLogLevel(atomikosLoggingLevel89);
        boolean boolean92 = properties6.containsValue((java.lang.Object) atomikosLoggingLevel89);
        int int93 = properties6.size();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tm.out" + "'", str68, "tm.out");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(recovery78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tm.out" + "'", str80, "tm.out");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "tm.out" + "'", str88, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel89 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel89.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 19 + "'", int93 == 19);
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setMaxActives((int) (byte) -1);
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) -1);
        java.util.Properties properties21 = atomikosProperties4.asProperties();
        atomikosProperties4.setMaxTimeout((-1L));
        atomikosProperties4.setLogBaseName("{10=10.0, ={10=10.0}}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        properties0.clear();
        int int7 = properties0.size();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        int int10 = properties9.size();
        boolean boolean11 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.util.Properties properties13 = new java.util.Properties(properties9);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        int int16 = properties15.size();
        boolean boolean17 = properties15.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.util.Properties properties19 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.lang.String str26 = atomikosProperties20.getService();
        atomikosProperties20.setService("hi!");
        atomikosProperties20.setForceShutdownOnVmExit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties33 = atomikosProperties20.asProperties();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long39 = recovery38.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass40 = recovery38.getClass();
        boolean boolean41 = properties36.containsKey((java.lang.Object) wildcardClass40);
        boolean boolean42 = properties15.replace((java.lang.Object) properties33, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass40);
        java.util.Properties properties43 = new java.util.Properties(properties33);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.lang.Object obj53 = properties45.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties48);
        boolean boolean54 = atomikosProperties48.isForceShutdownOnVmExit();
        atomikosProperties48.setConsoleFileName("");
        java.lang.String str57 = atomikosProperties48.getService();
        java.util.Properties properties58 = atomikosProperties48.asProperties();
        boolean boolean59 = properties9.remove((java.lang.Object) properties33, (java.lang.Object) atomikosProperties48);
        atomikosProperties48.setEnableLogging(false);
        boolean boolean62 = atomikosProperties48.isAllowSubTransactions();
        long long63 = atomikosProperties48.getDefaultJtaTimeout();
        java.lang.Object obj64 = properties0.remove((java.lang.Object) long63);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 86400000L + "'", long39 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10000L + "'", long63 == 10000L);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel2 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxTimeout(1L);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel2 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel2.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        java.lang.Object obj24 = properties20.put((java.lang.Object) atomikosProperties21, (java.lang.Object) 0L);
        java.util.Properties properties25 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        atomikosProperties26.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj31 = properties20.remove((java.lang.Object) atomikosProperties26);
        boolean boolean32 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean37 = properties35.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties42.getConsoleLogLevel();
        java.lang.Object obj48 = properties35.putIfAbsent((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosLoggingLevel47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties49.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long56 = recovery55.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getConsoleFileName();
        atomikosProperties61.setOutputDir("hi!");
        int int65 = atomikosProperties61.getConsoleFileLimit();
        java.lang.Object obj66 = properties58.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties61.getConsoleLogLevel();
        java.lang.String str68 = atomikosProperties61.getTransactionManagerUniqueName();
        atomikosProperties61.setThreadedTwoPhaseCommit(false);
        boolean boolean71 = properties35.replace((java.lang.Object) atomikosProperties49, (java.lang.Object) recovery55, (java.lang.Object) false);
        java.lang.Object obj72 = properties15.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery73.setDelay((long) 5);
        recovery73.setMaxRetries((-1));
        int int78 = recovery73.getMaxRetries();
        java.lang.Object obj79 = properties35.get((java.lang.Object) int78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties35.elements();
        java.util.Collection<java.lang.Object> objCollection81 = properties35.values();
        java.util.Properties properties82 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery83 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int84 = recovery83.getMaxRetries();
        recovery83.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery83.setMaxRetries((int) '4');
        recovery83.setMaxRetries((int) '#');
        recovery83.setMaxRetries((int) (byte) -1);
        long long93 = recovery83.getForgetOrphanedLogEntriesDelay();
        int int94 = recovery83.getMaxRetries();
        recovery83.setRetryInterval(0L);
        java.lang.Object obj97 = properties82.remove((java.lang.Object) 0L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + (-1L) + "'", long93 == (-1L));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        boolean boolean29 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setOutputDir("{}");
        boolean boolean32 = atomikosProperties19.isAllowSubTransactions();
        atomikosProperties19.setAllowSubTransactions(false);
        java.lang.String str35 = atomikosProperties19.getLogBaseDir();
        atomikosProperties19.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties19.setMaxActives((int) (byte) -1);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getConsoleFileName();
        atomikosProperties1.setThreadedTwoPhaseCommit(true);
        int int12 = atomikosProperties1.getConsoleFileLimit();
        java.util.Properties properties13 = atomikosProperties1.asProperties();
        boolean boolean14 = atomikosProperties1.isEnableLogging();
        java.lang.String str15 = atomikosProperties1.getTransactionManagerUniqueName();
        atomikosProperties1.setDefaultJtaTimeout(32L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) (byte) 10);
        long long3 = recovery0.getRetryInterval();
        recovery0.setRetryInterval((long) (short) -1);
        recovery0.setMaxRetries((int) (byte) 1);
        recovery0.setDelay((long) (byte) 100);
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean40 = properties38.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getTransactionManagerUniqueName();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties45.getConsoleLogLevel();
        java.lang.Object obj51 = properties38.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) atomikosLoggingLevel50);
        java.util.Collection<java.lang.Object> objCollection52 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 100);
        java.util.Properties properties57 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        java.lang.Object obj61 = properties57.put((java.lang.Object) atomikosProperties58, (java.lang.Object) 0L);
        java.util.Properties properties62 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount(100);
        atomikosProperties63.setAllowSubTransactions(true);
        boolean boolean68 = atomikosProperties63.isForceShutdownOnVmExit();
        boolean boolean69 = properties62.contains((java.lang.Object) atomikosProperties63);
        java.util.Collection<java.lang.Object> objCollection70 = properties62.values();
        boolean boolean71 = properties15.replace((java.lang.Object) properties38, (java.lang.Object) (byte) 100, (java.lang.Object) objCollection70);
        java.util.Collection<java.lang.Object> objCollection72 = properties38.values();
        java.lang.String str74 = properties38.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=32, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean4 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.lang.String str10 = properties1.getProperty("{10=10.0}");
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer11, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties4.asProperties();
        java.lang.String str16 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties19 = atomikosProperties4.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        int int22 = properties21.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties21.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setAllowSubTransactions(true);
        boolean boolean29 = atomikosProperties24.isForceShutdownOnVmExit();
        int int30 = atomikosProperties24.getConsoleFileCount();
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        boolean boolean32 = properties21.equals((java.lang.Object) atomikosProperties24);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj42 = properties35.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties44 = new java.util.Properties(properties35);
        java.lang.String str45 = properties44.toString();
        boolean boolean46 = properties19.containsValue((java.lang.Object) str45);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long48 = recovery47.getForgetOrphanedLogEntriesDelay();
        recovery47.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long51 = recovery47.getDelay();
        recovery47.setMaxRetries(97);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long55 = recovery54.getForgetOrphanedLogEntriesDelay();
        long long56 = recovery54.getForgetOrphanedLogEntriesDelay();
        long long57 = recovery54.getForgetOrphanedLogEntriesDelay();
        boolean boolean58 = properties19.remove((java.lang.Object) recovery47, (java.lang.Object) recovery54);
        java.util.Properties properties59 = new java.util.Properties(properties19);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{}" + "'", str45, "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 86400000L + "'", long48 == 86400000L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 86400000L + "'", long55 == 86400000L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 86400000L + "'", long57 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        boolean boolean17 = properties7.containsValue((java.lang.Object) atomikosProperties11);
        boolean boolean18 = properties1.containsValue((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties20.getRecovery();
        java.lang.Object obj25 = properties7.putIfAbsent((java.lang.Object) "{hi!=}", (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setConsoleFileName("hi!");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Object obj19 = properties11.get(obj18);
        java.util.Collection<java.lang.Object> objCollection20 = properties11.values();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean24 = properties22.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties29.getConsoleLogLevel();
        java.lang.Object obj35 = properties22.putIfAbsent((java.lang.Object) atomikosProperties25, (java.lang.Object) atomikosLoggingLevel34);
        java.util.Collection<java.lang.Object> objCollection36 = properties22.values();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        java.lang.Object obj46 = properties38.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties41);
        boolean boolean47 = properties22.equals((java.lang.Object) properties38);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection49 = properties48.values();
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.lang.Object obj51 = null;
        boolean boolean52 = properties48.equals(obj51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties48.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.elements();
        java.util.Properties properties55 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getConsoleFileName();
        java.lang.Object obj59 = properties55.put((java.lang.Object) atomikosProperties56, (java.lang.Object) 0L);
        boolean boolean60 = properties48.containsValue((java.lang.Object) properties55);
        java.lang.Object obj61 = properties55.clone();
        boolean boolean62 = properties38.contains((java.lang.Object) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        long long67 = atomikosProperties63.getCheckpointInterval();
        atomikosProperties63.setEnableLogging(false);
        atomikosProperties63.setConsoleFileCount((int) (byte) -1);
        boolean boolean72 = properties7.replace((java.lang.Object) objCollection20, (java.lang.Object) properties55, (java.lang.Object) atomikosProperties63);
        java.lang.Object obj73 = properties7.clone();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("tm.out", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount(100);
        atomikosProperties10.setAllowSubTransactions(true);
        java.lang.String str15 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setDefaultJtaTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long19 = recovery18.getForgetOrphanedLogEntriesDelay();
        recovery18.setDelay((long) (short) 1);
        recovery18.setDelay((long) (-1));
        recovery18.setForgetOrphanedLogEntriesDelay((long) (short) 10);
        long long26 = recovery18.getRetryInterval();
        java.lang.Object obj27 = properties9.getOrDefault((java.lang.Object) 0, (java.lang.Object) long26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        properties31.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.lang.Object obj36 = properties29.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet37 = properties29.keySet();
        boolean boolean38 = properties29.isEmpty();
        java.util.Properties properties39 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream42, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 86400000L + "'", long19 == 86400000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10000L + "'", obj27, 10000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection40);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj18 = properties11.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.lang.String str23 = atomikosProperties20.getOutputDir();
        atomikosProperties20.setLogBaseName("tm.out");
        boolean boolean26 = properties11.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount(100);
        atomikosProperties27.setAllowSubTransactions(true);
        java.lang.Object obj32 = properties11.remove((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setAllowSubTransactions(false);
        atomikosProperties27.setSerialJtaTransactions(true);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        java.lang.Object obj46 = properties38.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties41);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties41.getConsoleLogLevel();
        atomikosProperties27.setConsoleLogLevel(atomikosLoggingLevel47);
        atomikosProperties27.setDefaultJtaTimeout((long) 10);
        boolean boolean51 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setConsoleFileCount(100);
        atomikosProperties54.setAllowSubTransactions(true);
        boolean boolean59 = atomikosProperties54.isForceShutdownOnVmExit();
        atomikosProperties54.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties54.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties27.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setConsoleFileCount(1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        java.lang.String str5 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery6.setRetryInterval((long) (byte) 10);
        int int9 = recovery6.getMaxRetries();
        recovery6.setDelay(10L);
        recovery6.setRetryInterval((long) (short) 10);
        boolean boolean14 = properties1.containsValue((java.lang.Object) (short) 10);
        java.lang.Object obj15 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount((-1));
        atomikosProperties16.setTransactionManagerUniqueName("tm.out");
        atomikosProperties16.setLogBaseName("tm.out");
        long long23 = atomikosProperties16.getCheckpointInterval();
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Collection<java.lang.Object> objCollection31 = properties28.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getConsoleFileName();
        atomikosProperties32.setOutputDir("hi!");
        int int36 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties37 = atomikosProperties32.asProperties();
        boolean boolean38 = properties28.containsValue((java.lang.Object) atomikosProperties32);
        java.lang.String str39 = atomikosProperties32.getService();
        int int40 = atomikosProperties32.getMaxActives();
        atomikosProperties32.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean46 = properties44.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        atomikosProperties51.setOutputDir("hi!");
        int int55 = atomikosProperties51.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel56 = atomikosProperties51.getConsoleLogLevel();
        java.lang.Object obj57 = properties44.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosLoggingLevel56);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.get((java.lang.Object) (byte) -1);
        java.util.Properties properties61 = new java.util.Properties(properties58);
        boolean boolean62 = properties44.equals((java.lang.Object) properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties44.keys();
        boolean boolean64 = properties1.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) true, (java.lang.Object) objEnumeration63);
        java.util.Collection<java.lang.Object> objCollection65 = properties1.values();
        java.io.InputStream inputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel56 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel56.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objCollection65);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        java.lang.Object obj8 = properties4.put((java.lang.Object) atomikosProperties5, (java.lang.Object) 0L);
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        atomikosProperties10.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj15 = properties4.remove((java.lang.Object) atomikosProperties10);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        atomikosProperties17.setLogBaseDir("tm.out");
        java.lang.String str25 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setDefaultJtaTimeout(10L);
        atomikosProperties17.setLogBaseDir("");
        atomikosProperties17.setDefaultJtaTimeout((long) (short) 100);
        atomikosProperties17.setMaxTimeout((long) 100);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.Object obj43 = properties35.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties38);
        boolean boolean44 = atomikosProperties38.isForceShutdownOnVmExit();
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str47 = atomikosProperties38.getService();
        java.util.Properties properties48 = atomikosProperties38.asProperties();
        java.lang.Object obj49 = null;
        boolean boolean50 = properties48.equals(obj49);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean54 = properties52.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setOutputDir("hi!");
        int int63 = atomikosProperties59.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = atomikosProperties59.getConsoleLogLevel();
        java.lang.Object obj65 = properties52.putIfAbsent((java.lang.Object) atomikosProperties55, (java.lang.Object) atomikosLoggingLevel64);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery66 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery66.setRetryInterval((long) (byte) 10);
        int int69 = recovery66.getMaxRetries();
        recovery66.setDelay(10L);
        recovery66.setRetryInterval((long) (short) 10);
        java.lang.Object obj74 = properties48.replace((java.lang.Object) atomikosLoggingLevel64, (java.lang.Object) recovery66);
        java.lang.Object obj75 = properties4.putIfAbsent((java.lang.Object) atomikosProperties17, (java.lang.Object) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setConsoleFileCount((-1));
        java.lang.String str79 = atomikosProperties76.getOutputDir();
        atomikosProperties76.setLogBaseName("tm.out");
        atomikosProperties76.setLogBaseDir("tm.out");
        java.lang.String str84 = atomikosProperties76.getLogBaseDir();
        atomikosProperties76.setDefaultJtaTimeout(10L);
        atomikosProperties76.setLogBaseDir("");
        boolean boolean89 = atomikosProperties76.isSerialJtaTransactions();
        atomikosProperties76.setConsoleFileLimit(1);
        boolean boolean92 = atomikosProperties76.isAllowSubTransactions();
        java.lang.Object obj93 = properties3.putIfAbsent((java.lang.Object) properties4, (java.lang.Object) boolean92);
        java.util.Properties properties94 = new java.util.Properties(properties4);
        java.lang.Object obj95 = properties4.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tm.out" + "'", str84, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        atomikosProperties44.setLogBaseDir("tm.out");
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean55 = properties37.replace((java.lang.Object) objSet42, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties44);
        java.lang.String str56 = atomikosProperties44.getService();
        java.lang.Object obj57 = properties29.remove((java.lang.Object) atomikosProperties44);
        java.lang.String str58 = properties29.toString();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection60 = properties59.values();
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.lang.Object obj62 = null;
        boolean boolean63 = properties59.equals(obj62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties59.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties59.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str67 = atomikosProperties66.getTransactionManagerUniqueName();
        boolean boolean68 = atomikosProperties66.isForceShutdownOnVmExit();
        atomikosProperties66.setAllowSubTransactions(false);
        atomikosProperties66.setLogBaseName("");
        java.lang.Object obj73 = properties59.remove((java.lang.Object) atomikosProperties66);
        java.lang.Object obj74 = properties29.remove((java.lang.Object) atomikosProperties66);
        atomikosProperties66.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str27 = properties25.getProperty("");
        java.util.Set<java.lang.Object> objSet28 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties25.keys();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.lang.Object obj41 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setConsoleFileCount((-1));
        java.lang.String str46 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseName("tm.out");
        boolean boolean49 = properties34.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount(100);
        atomikosProperties50.setAllowSubTransactions(true);
        java.lang.Object obj55 = properties34.remove((java.lang.Object) atomikosProperties50);
        java.util.Set<java.lang.Object> objSet56 = properties34.keySet();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj63 = properties34.get((java.lang.Object) properties60);
        properties60.clear();
        java.util.Properties properties65 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str67 = atomikosProperties66.getConsoleFileName();
        java.lang.Object obj69 = properties65.put((java.lang.Object) atomikosProperties66, (java.lang.Object) 0L);
        java.util.Properties properties70 = new java.util.Properties(properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setConsoleFileCount((-1));
        atomikosProperties71.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj76 = properties65.remove((java.lang.Object) atomikosProperties71);
        boolean boolean77 = atomikosProperties71.isForceShutdownOnVmExit();
        java.lang.Object obj79 = properties60.putIfAbsent((java.lang.Object) boolean77, (java.lang.Object) 500L);
        java.util.Set<java.lang.String> strSet80 = properties60.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties60.keys();
        boolean boolean82 = properties25.containsValue((java.lang.Object) properties60);
        java.io.OutputStream outputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.save(outputStream83, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet20 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.util.Properties properties26 = atomikosProperties21.asProperties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj35 = properties30.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean36 = properties26.equals(obj35);
        java.lang.Object obj39 = properties26.setProperty("", "");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        int int43 = properties42.size();
        boolean boolean44 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties42.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        java.lang.Object obj50 = properties46.put((java.lang.Object) atomikosProperties47, (java.lang.Object) 0L);
        atomikosProperties47.setConsoleFileCount(2);
        java.lang.Object obj53 = properties1.replace((java.lang.Object) properties42, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setLogBaseName("{tm.out=}");
        java.lang.String str56 = atomikosProperties47.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.lang.String str10 = properties1.getProperty("{10=10.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setConsoleFileCount(100);
        atomikosProperties11.setAllowSubTransactions(true);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        int int17 = atomikosProperties11.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties11.getRecovery();
        int int19 = atomikosProperties11.getConsoleFileCount();
        atomikosProperties11.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean22 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj23 = properties1.get((java.lang.Object) boolean22);
        java.io.Reader reader24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) '#');
        int int25 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives(50);
        boolean boolean28 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setEnableLogging(false);
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives(0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.lang.String str36 = properties5.getProperty("{}");
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        java.lang.Object obj46 = properties38.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties41);
        boolean boolean47 = atomikosProperties41.isForceShutdownOnVmExit();
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str50 = atomikosProperties41.getService();
        boolean boolean51 = atomikosProperties41.isEnableLogging();
        long long52 = atomikosProperties41.getMaxTimeout();
        boolean boolean53 = atomikosProperties41.isAllowSubTransactions();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Collection<java.lang.Object> objCollection60 = properties57.values();
        java.lang.Object obj61 = properties5.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) objCollection60);
        java.lang.String str62 = properties5.toString();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.get((java.lang.Object) (byte) -1);
        java.util.Properties properties66 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.keys();
        java.lang.Object obj68 = properties5.get((java.lang.Object) properties66);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties66.entrySet();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEntrySet69);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        recovery4.setMaxRetries((int) (short) 0);
        recovery4.setRetryInterval((long) (short) 0);
        recovery4.setDelay(1L);
        recovery4.setDelay((long) (byte) 10);
        long long13 = recovery4.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties4.isEnableLogging();
        long long17 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties4.getTransactionManagerUniqueName();
        boolean boolean19 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setSerialJtaTransactions(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        int int13 = properties12.size();
        boolean boolean14 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.util.Properties properties16 = new java.util.Properties(properties12);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        int int19 = properties18.size();
        boolean boolean20 = properties18.isEmpty();
        java.util.Properties properties21 = new java.util.Properties(properties18);
        java.util.Properties properties22 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setOutputDir("hi!");
        int int27 = atomikosProperties23.getConsoleFileLimit();
        java.util.Properties properties28 = atomikosProperties23.asProperties();
        java.lang.String str29 = atomikosProperties23.getService();
        atomikosProperties23.setService("hi!");
        atomikosProperties23.setForceShutdownOnVmExit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties36 = atomikosProperties23.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass43 = recovery41.getClass();
        boolean boolean44 = properties39.containsKey((java.lang.Object) wildcardClass43);
        boolean boolean45 = properties18.replace((java.lang.Object) properties36, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass43);
        java.util.Properties properties46 = new java.util.Properties(properties36);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        atomikosProperties51.setOutputDir("hi!");
        int int55 = atomikosProperties51.getConsoleFileLimit();
        java.lang.Object obj56 = properties48.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties51);
        boolean boolean57 = atomikosProperties51.isForceShutdownOnVmExit();
        atomikosProperties51.setConsoleFileName("");
        java.lang.String str60 = atomikosProperties51.getService();
        java.util.Properties properties61 = atomikosProperties51.asProperties();
        boolean boolean62 = properties12.remove((java.lang.Object) properties36, (java.lang.Object) atomikosProperties51);
        atomikosProperties51.setEnableLogging(false);
        java.util.Properties properties65 = atomikosProperties51.asProperties();
        int int66 = atomikosProperties51.getConsoleFileCount();
        boolean boolean67 = atomikosProperties51.isEnableLogging();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        int int70 = properties69.size();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Properties properties74 = new java.util.Properties(properties73);
        properties74.clear();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.lang.Object obj79 = properties74.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setConsoleFileCount((-1));
        java.lang.String str84 = atomikosProperties81.getOutputDir();
        atomikosProperties81.setLogBaseName("tm.out");
        int int87 = atomikosProperties81.getConsoleFileCount();
        boolean boolean88 = properties74.containsKey((java.lang.Object) atomikosProperties81);
        boolean boolean89 = properties69.containsValue((java.lang.Object) atomikosProperties81);
        java.util.Properties properties90 = atomikosProperties81.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel91 = atomikosProperties81.getConsoleLogLevel();
        java.lang.Object obj92 = properties1.replace((java.lang.Object) boolean67, (java.lang.Object) atomikosProperties81);
        boolean boolean93 = properties1.isEmpty();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 86400000L + "'", long42 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel91 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel91.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setMaxActives(0);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setConsoleFileLimit((int) (short) 0);
        atomikosProperties4.setForceShutdownOnVmExit(true);
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.getRecovery();
        recovery14.setDelay((-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        int int14 = properties13.size();
        boolean boolean15 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection18 = properties17.values();
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        boolean boolean21 = properties19.isEmpty();
        boolean boolean22 = properties13.containsValue((java.lang.Object) boolean21);
        java.util.Properties properties23 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        java.lang.Object obj27 = properties23.put((java.lang.Object) atomikosProperties24, (java.lang.Object) 0L);
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        atomikosProperties24.setConsoleFileLimit((int) ' ');
        long long32 = atomikosProperties24.getDefaultJtaTimeout();
        java.lang.String str33 = atomikosProperties24.getOutputDir();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount((-1));
        atomikosProperties36.setTransactionManagerUniqueName("tm.out");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        atomikosProperties36.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties36.setService("tm.out");
        atomikosProperties36.setConsoleFileCount(100);
        int int48 = atomikosProperties36.getMaxActives();
        boolean boolean49 = properties13.remove((java.lang.Object) true, (java.lang.Object) atomikosProperties36);
        java.util.Enumeration<?> wildcardEnumeration50 = properties13.propertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection52 = properties51.values();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.keys();
        java.util.Properties properties55 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties51.keys();
        boolean boolean57 = properties51.isEmpty();
        java.lang.Object obj58 = properties51.clone();
        java.lang.Object obj59 = properties11.replace((java.lang.Object) properties13, (java.lang.Object) properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties11.elements();
        java.lang.Class<?> wildcardClass61 = properties11.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration50);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.lang.String str7 = properties1.getProperty("{hi!=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties8.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties8.asProperties();
        atomikosProperties8.setAllowSubTransactions(false);
        long long14 = atomikosProperties8.getDefaultJtaTimeout();
        boolean boolean15 = properties1.contains((java.lang.Object) atomikosProperties8);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        atomikosProperties0.setConsoleFileCount((int) (byte) 10);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        int int15 = atomikosProperties4.getMaxActives();
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        java.lang.String str17 = atomikosProperties4.getConsoleFileName();
        int int18 = atomikosProperties4.getMaxActives();
        boolean boolean19 = atomikosProperties4.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.Object obj8 = properties7.clone();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        long long21 = atomikosProperties13.getDefaultJtaTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.lang.Object obj24 = properties7.replace((java.lang.Object) long21, (java.lang.Object) objCollection23);
        java.lang.Object obj27 = properties7.setProperty("hi!", "{}");
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Set<java.lang.String> strSet30 = properties29.stringPropertyNames();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties7.remove((java.lang.Object) properties29);
        int int34 = properties7.size();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(obj8);
// flaky:         org.junit.Assert.assertEquals(obj8.toString(), "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=52}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=52}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=52}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 19 + "'", int34 == 19);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        atomikosProperties4.setOutputDir("hi!");
        atomikosProperties4.setConsoleFileLimit((int) '#');
        java.util.Properties properties20 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties4.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(recovery21);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) '#');
        int int25 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        boolean boolean28 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long4 = recovery0.getDelay();
        recovery0.setMaxRetries(97);
        recovery0.setRetryInterval(97L);
        recovery0.setRetryInterval((long) '#');
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        boolean boolean12 = properties0.isEmpty();
        java.lang.String str15 = properties0.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setMaxRetries((int) '#');
        recovery0.setMaxRetries((int) (byte) -1);
        long long10 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setConsoleFileCount((-1));
        java.lang.String str7 = atomikosProperties4.getOutputDir();
        atomikosProperties4.setLogBaseName("tm.out");
        atomikosProperties4.setLogBaseDir("tm.out");
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties4.isThreadedTwoPhaseCommit();
        atomikosProperties4.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setMaxTimeout(0L);
        atomikosProperties4.setSerialJtaTransactions(false);
        java.lang.Object obj23 = properties1.get((java.lang.Object) atomikosProperties4);
        java.lang.Object obj24 = properties1.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        atomikosProperties13.setLogBaseDir("tm.out");
        java.lang.String str21 = atomikosProperties13.getLogBaseDir();
        atomikosProperties13.setDefaultJtaTimeout(10L);
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = atomikosProperties13.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = atomikosProperties13.getRecovery();
        java.lang.String str27 = atomikosProperties13.getOutputDir();
        int int28 = atomikosProperties13.getConsoleFileLimit();
        boolean boolean29 = properties1.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setForceShutdownOnVmExit(false);
        boolean boolean32 = atomikosProperties13.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(recovery25);
        org.junit.Assert.assertNotNull(recovery26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        boolean boolean24 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties22.keySet();
        java.lang.Object obj26 = properties0.replace((java.lang.Object) properties18, (java.lang.Object) objSet25);
        java.util.Properties properties27 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        int int36 = atomikosProperties28.getConsoleFileCount();
        boolean boolean37 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setDefaultJtaTimeout(500L);
        boolean boolean40 = properties1.contains((java.lang.Object) 500L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setConsoleFileCount(100);
        int int86 = atomikosProperties83.getConsoleFileCount();
        atomikosProperties83.setOutputDir("");
        java.lang.String str89 = atomikosProperties83.getConsoleFileName();
        int int90 = atomikosProperties83.getConsoleFileCount();
        boolean boolean91 = atomikosProperties83.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel92 = atomikosProperties83.getConsoleLogLevel();
        boolean boolean93 = properties6.equals((java.lang.Object) atomikosProperties83);
        atomikosProperties83.setAllowSubTransactions(false);
        atomikosProperties83.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str98 = atomikosProperties83.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tm.out" + "'", str89, "tm.out");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel92 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel92.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str98, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getService();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        boolean boolean16 = atomikosProperties4.isForceShutdownOnVmExit();
        boolean boolean17 = atomikosProperties4.isThreadedTwoPhaseCommit();
        atomikosProperties4.setConsoleFileCount((int) '4');
        atomikosProperties4.setAllowSubTransactions(false);
        boolean boolean22 = atomikosProperties4.isThreadedTwoPhaseCommit();
        java.lang.String str23 = atomikosProperties4.getLogBaseDir();
        boolean boolean24 = atomikosProperties4.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties19 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.Object obj23 = properties19.put((java.lang.Object) atomikosProperties20, (java.lang.Object) 0L);
        java.lang.Object obj26 = properties19.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties28.getConsoleLogLevel();
        java.lang.Object obj34 = properties14.getOrDefault((java.lang.Object) properties19, (java.lang.Object) atomikosProperties28);
        boolean boolean35 = properties0.contains((java.lang.Object) properties19);
        java.util.Properties properties36 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        java.lang.Object obj40 = properties36.put((java.lang.Object) atomikosProperties37, (java.lang.Object) 0L);
        java.lang.Object obj43 = properties36.setProperty("", "");
        java.lang.Object obj46 = properties36.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setAllowSubTransactions(false);
        boolean boolean51 = properties36.containsKey((java.lang.Object) atomikosProperties47);
        java.lang.Object obj52 = properties19.remove((java.lang.Object) properties36);
        java.util.Properties properties53 = new java.util.Properties(properties19);
        int int54 = properties19.size();
        java.util.Properties properties55 = new java.util.Properties(properties19);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        boolean boolean27 = atomikosProperties19.isAllowSubTransactions();
        atomikosProperties19.setService("{10=10.0}");
        java.lang.String str30 = atomikosProperties19.getLogBaseDir();
        atomikosProperties19.setMaxTimeout((long) (byte) 10);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(writer12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties7.keys();
        boolean boolean46 = properties7.equals((java.lang.Object) 0.0d);
        java.util.Properties properties47 = new java.util.Properties(properties7);
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream48, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount(100);
        atomikosProperties13.setAllowSubTransactions(true);
        boolean boolean18 = atomikosProperties13.isForceShutdownOnVmExit();
        int int19 = atomikosProperties13.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties13.getRecovery();
        java.lang.Object obj21 = properties12.remove((java.lang.Object) recovery20);
        recovery20.setForgetOrphanedLogEntriesDelay((long) 'a');
        recovery20.setMaxRetries(100);
        recovery20.setRetryInterval((long) (byte) 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str27 = properties25.getProperty("");
        java.util.Set<java.lang.Object> objSet28 = properties25.keySet();
        java.util.Set<java.lang.String> strSet29 = properties25.stringPropertyNames();
        java.util.Properties properties30 = new java.util.Properties(properties25);
        java.lang.String str33 = properties25.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=32, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str33, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties6.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet12 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        int int19 = atomikosProperties13.getConsoleFileCount();
        boolean boolean20 = properties6.containsKey((java.lang.Object) atomikosProperties13);
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Set<java.lang.Object> objSet22 = properties1.keySet();
        java.util.Properties properties23 = new java.util.Properties(properties1);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Set<java.lang.String> strSet26 = properties25.stringPropertyNames();
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        java.util.Collection<java.lang.Object> objCollection29 = properties25.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = null;
        boolean boolean34 = properties30.equals(obj33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.elements();
        java.util.Properties properties37 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        java.lang.Object obj41 = properties37.put((java.lang.Object) atomikosProperties38, (java.lang.Object) 0L);
        boolean boolean42 = properties30.containsValue((java.lang.Object) properties37);
        boolean boolean43 = properties25.equals((java.lang.Object) properties30);
        java.lang.Object obj44 = properties1.remove((java.lang.Object) boolean43);
        int int45 = properties1.size();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.lang.String str12 = atomikosProperties6.getService();
        atomikosProperties6.setService("hi!");
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass26 = recovery24.getClass();
        boolean boolean27 = properties22.containsKey((java.lang.Object) wildcardClass26);
        boolean boolean28 = properties1.replace((java.lang.Object) properties19, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass26);
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.util.Properties properties30 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        java.lang.Object obj34 = properties30.put((java.lang.Object) atomikosProperties31, (java.lang.Object) 0L);
        java.lang.Object obj37 = properties30.setProperty("", "");
        java.lang.Object obj40 = properties30.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getTransactionManagerUniqueName();
        atomikosProperties41.setAllowSubTransactions(false);
        boolean boolean45 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean46 = properties29.containsValue((java.lang.Object) boolean45);
        java.lang.Object obj49 = properties29.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}", "{=hi!}");
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties29.keys();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setOutputDir("tm.out");
        java.lang.String str13 = atomikosProperties4.getLogBaseDir();
        java.lang.String str14 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str17 = atomikosProperties4.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties4.asProperties();
        atomikosProperties4.setMaxTimeout(500L);
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties4.setSerialJtaTransactions(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.lang.Object obj5 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        boolean boolean24 = properties9.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount(100);
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setAllowSubTransactions(false);
        int int33 = atomikosProperties25.getConsoleFileCount();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setCheckpointInterval((long) (short) -1);
        boolean boolean38 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setConsoleFileLimit(18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        atomikosProperties41.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties41.setConsoleLogLevel(atomikosLoggingLevel51);
        boolean boolean53 = atomikosProperties41.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties41.asProperties();
        boolean boolean55 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) atomikosProperties41);
        boolean boolean56 = atomikosProperties25.isForceShutdownOnVmExit();
        int int57 = atomikosProperties25.getMaxActives();
        java.lang.String str58 = atomikosProperties25.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 50 + "'", int57 == 50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.lang.String str3 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration4 = properties0.propertyNames();
        int int5 = properties0.size();
        java.lang.Object obj8 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        java.lang.Object obj34 = properties26.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties26.entrySet();
        boolean boolean36 = properties3.containsValue((java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        atomikosProperties37.setOutputDir("hi!");
        int int41 = atomikosProperties37.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties37.getConsoleLogLevel();
        boolean boolean43 = properties3.containsValue((java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount(100);
        atomikosProperties44.setAllowSubTransactions(true);
        boolean boolean49 = atomikosProperties44.isForceShutdownOnVmExit();
        java.util.Properties properties50 = atomikosProperties44.asProperties();
        atomikosProperties44.setConsoleFileName("");
        java.lang.String str53 = atomikosProperties44.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties44.getRecovery();
        atomikosProperties44.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int58 = recovery57.getMaxRetries();
        recovery57.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery57.setMaxRetries((int) '4');
        recovery57.setRetryInterval(86400000L);
        long long65 = recovery57.getForgetOrphanedLogEntriesDelay();
        recovery57.setDelay((long) (short) -1);
        recovery57.setForgetOrphanedLogEntriesDelay(0L);
        recovery57.setMaxRetries((int) (short) -1);
        boolean boolean72 = properties3.remove((java.lang.Object) atomikosProperties44, (java.lang.Object) (short) -1);
        java.util.Properties properties73 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setConsoleFileCount(100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties74.getConsoleLogLevel();
        boolean boolean78 = properties3.equals((java.lang.Object) atomikosLoggingLevel77);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setMaxActives((int) '#');
        int int8 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        boolean boolean5 = properties1.contains((java.lang.Object) "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.elements();
        java.lang.String str8 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str10 = properties1.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setOutputDir("hi!");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str7 = properties5.getProperty("{}");
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Object obj19 = properties11.get(obj18);
        java.util.Collection<java.lang.Object> objCollection20 = properties11.values();
        java.lang.Class<?> wildcardClass21 = properties11.getClass();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        int int24 = properties23.size();
        boolean boolean25 = properties23.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery26.setDelay((long) 5);
        recovery26.setMaxRetries((-1));
        recovery26.setForgetOrphanedLogEntriesDelay(86400000L);
        long long33 = recovery26.getDelay();
        java.lang.Object obj35 = properties23.getOrDefault((java.lang.Object) recovery26, (java.lang.Object) (short) 10);
        long long36 = recovery26.getDelay();
        recovery26.setDelay(35L);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getConsoleFileName();
        atomikosProperties43.setOutputDir("hi!");
        int int47 = atomikosProperties43.getConsoleFileLimit();
        java.lang.Object obj48 = properties40.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties43);
        boolean boolean49 = atomikosProperties43.isForceShutdownOnVmExit();
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties43.getService();
        atomikosProperties43.setForceShutdownOnVmExit(true);
        boolean boolean55 = atomikosProperties43.isForceShutdownOnVmExit();
        boolean boolean56 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setSerialJtaTransactions(true);
        java.util.Properties properties59 = atomikosProperties43.asProperties();
        boolean boolean60 = properties5.replace((java.lang.Object) wildcardClass21, (java.lang.Object) recovery26, (java.lang.Object) atomikosProperties43);
        long long61 = atomikosProperties43.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 5L + "'", long33 == 5L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 5L + "'", long36 == 5L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties5.entrySet();
        int int17 = properties5.size();
        java.util.Set<java.lang.Object> objSet18 = properties5.keySet();
        java.util.Enumeration<?> wildcardEnumeration19 = properties5.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration20 = properties5.propertyNames();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 19 + "'", int17 == 19);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setDelay((long) (short) 1);
        recovery6.setDelay((long) (-1));
        java.lang.Object obj12 = properties3.remove((java.lang.Object) (-1));
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.String str15 = properties13.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str16 = properties13.toString();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        int int12 = atomikosProperties6.getMaxActives();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties12.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel14);
        java.lang.String str16 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setTransactionManagerUniqueName("{hi!=}");
        boolean boolean19 = atomikosProperties4.isThreadedTwoPhaseCommit();
        atomikosProperties4.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties4.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Collection<java.lang.Object> objCollection30 = properties27.values();
        java.util.Properties properties31 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setConsoleFileCount(100);
        atomikosProperties32.setAllowSubTransactions(true);
        java.lang.String str37 = atomikosProperties32.getConsoleFileName();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties32.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties32.getConsoleLogLevel();
        boolean boolean42 = properties31.contains((java.lang.Object) atomikosLoggingLevel41);
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel41);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        java.lang.Object obj8 = properties4.put((java.lang.Object) atomikosProperties5, (java.lang.Object) 0L);
        atomikosProperties5.setThreadedTwoPhaseCommit(false);
        atomikosProperties5.setConsoleFileLimit((int) ' ');
        java.lang.String str13 = atomikosProperties5.getTransactionManagerUniqueName();
        java.util.Properties properties14 = atomikosProperties5.asProperties();
        boolean boolean15 = properties1.containsKey((java.lang.Object) atomikosProperties5);
        java.lang.String str16 = properties1.toString();
        java.lang.Object obj19 = properties1.setProperty("", "{=hi!}");
        java.lang.Object obj22 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{10=10.0, {com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties5.clone();
        java.lang.Class<?> wildcardClass7 = properties5.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setOutputDir("hi!");
        int int9 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        java.lang.String str11 = atomikosProperties5.getService();
        int int12 = atomikosProperties5.getMaxActives();
        boolean boolean13 = properties1.equals((java.lang.Object) atomikosProperties5);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties16.isEmpty();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj29 = properties22.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean34 = properties32.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties32.entrySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties40.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        boolean boolean55 = properties40.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setConsoleFileCount(100);
        atomikosProperties56.setAllowSubTransactions(true);
        java.lang.Object obj61 = properties40.remove((java.lang.Object) atomikosProperties56);
        java.util.Set<java.lang.Object> objSet62 = properties40.keySet();
        boolean boolean63 = properties16.replace((java.lang.Object) properties22, (java.lang.Object) objEntrySet36, (java.lang.Object) properties40);
        int int64 = properties16.size();
        boolean boolean65 = properties1.equals((java.lang.Object) int64);
        java.util.Set<java.lang.String> strSet66 = properties1.stringPropertyNames();
        java.util.Properties properties67 = new java.util.Properties(properties1);
        java.io.PrintWriter printWriter68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties67.list(printWriter68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strSet66);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setLogBaseName("{}");
        long long7 = atomikosProperties1.getDefaultJtaTimeout();
        atomikosProperties1.setConsoleFileName("{hi!=10}");
        int int10 = atomikosProperties1.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
        atomikosProperties33.setConsoleFileCount((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        atomikosProperties44.setLogBaseDir("tm.out");
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean55 = properties37.replace((java.lang.Object) objSet42, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties44);
        java.lang.String str56 = atomikosProperties44.getService();
        java.lang.Object obj57 = properties29.remove((java.lang.Object) atomikosProperties44);
        java.util.Properties properties58 = new java.util.Properties(properties29);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        boolean boolean64 = properties62.containsValue((java.lang.Object) 10.0d);
        java.lang.Object obj66 = properties60.getOrDefault((java.lang.Object) boolean64, (java.lang.Object) (-1L));
        java.lang.Object obj67 = properties58.get((java.lang.Object) properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties60.elements();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.lang.Object obj27 = properties3.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.util.Properties properties28 = new java.util.Properties(properties3);
        java.lang.Object obj29 = properties28.clone();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setConsoleFileLimit((int) (short) 1);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) '#');
        long long7 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 86400000L + "'", long4 == 86400000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 35L + "'", long7 == 35L);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.lang.Object obj22 = properties14.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties17);
        boolean boolean23 = atomikosProperties17.isForceShutdownOnVmExit();
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties17.getService();
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj29 = properties5.get((java.lang.Object) "");
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        int int32 = properties31.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.Object obj43 = properties35.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties38);
        int int44 = atomikosProperties38.getConsoleFileCount();
        boolean boolean45 = atomikosProperties38.isSerialJtaTransactions();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        int int48 = properties47.size();
        boolean boolean49 = properties47.isEmpty();
        java.util.Properties properties50 = new java.util.Properties(properties47);
        java.util.Properties properties51 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setOutputDir("hi!");
        int int56 = atomikosProperties52.getConsoleFileLimit();
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        java.lang.String str58 = atomikosProperties52.getService();
        atomikosProperties52.setService("hi!");
        atomikosProperties52.setForceShutdownOnVmExit(true);
        atomikosProperties52.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties65 = atomikosProperties52.asProperties();
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        int int69 = properties68.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long71 = recovery70.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass72 = recovery70.getClass();
        boolean boolean73 = properties68.containsKey((java.lang.Object) wildcardClass72);
        boolean boolean74 = properties47.replace((java.lang.Object) properties65, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass72);
        boolean boolean75 = properties31.remove((java.lang.Object) atomikosProperties38, (java.lang.Object) boolean74);
        atomikosProperties38.setForceShutdownOnVmExit(true);
        atomikosProperties38.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 86400000L + "'", long71 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj17 = properties0.setProperty("", "{hi!=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties18.getRecovery();
        atomikosProperties18.setAllowSubTransactions(false);
        atomikosProperties18.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean27 = atomikosProperties18.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        atomikosProperties29.setDefaultJtaTimeout(1L);
        atomikosProperties29.setForceShutdownOnVmExit(false);
        atomikosProperties29.setMaxActives(0);
        atomikosProperties29.setConsoleFileCount((int) 'a');
        boolean boolean42 = atomikosProperties29.isThreadedTwoPhaseCommit();
        java.lang.String str43 = atomikosProperties29.getTransactionManagerUniqueName();
        int int44 = atomikosProperties29.getConsoleFileLimit();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.keys();
        java.util.Properties properties49 = new java.util.Properties(properties45);
        java.lang.String str50 = properties45.toString();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Collection<java.lang.Object> objCollection57 = properties54.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        atomikosProperties58.setOutputDir("hi!");
        int int62 = atomikosProperties58.getConsoleFileLimit();
        java.util.Properties properties63 = atomikosProperties58.asProperties();
        boolean boolean64 = properties54.containsValue((java.lang.Object) atomikosProperties58);
        atomikosProperties58.setLogBaseName("");
        long long67 = atomikosProperties58.getCheckpointInterval();
        int int68 = atomikosProperties58.getConsoleFileCount();
        atomikosProperties58.setMaxActives((int) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int72 = recovery71.getMaxRetries();
        recovery71.setForgetOrphanedLogEntriesDelay(500L);
        long long75 = recovery71.getRetryInterval();
        recovery71.setMaxRetries((-1));
        boolean boolean78 = properties45.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) recovery71);
        boolean boolean79 = properties0.replace((java.lang.Object) recovery28, (java.lang.Object) int44, (java.lang.Object) boolean78);
        java.util.Collection<java.lang.Object> objCollection80 = properties0.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objCollection80);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.util.Set<java.lang.Object> objSet10 = properties8.keySet();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objSet10);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        java.util.Properties properties33 = new java.util.Properties(properties29);
        java.util.Properties properties34 = new java.util.Properties(properties29);
        java.io.Reader reader35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(reader35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        recovery4.setDelay((long) 20);
        recovery4.setRetryInterval((long) (short) 10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNotNull(recovery4);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        properties0.clear();
        java.util.Properties properties6 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setConsoleFileCount(100);
        atomikosProperties7.setAllowSubTransactions(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        int int13 = atomikosProperties7.getConsoleFileCount();
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setMaxActives((int) (byte) 1);
        boolean boolean17 = properties0.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getTransactionManagerUniqueName();
        boolean boolean21 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        atomikosProperties19.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        boolean boolean27 = atomikosProperties19.isThreadedTwoPhaseCommit();
        java.lang.String str28 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setTransactionManagerUniqueName("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        int int31 = atomikosProperties19.getMaxActives();
        atomikosProperties19.setForceShutdownOnVmExit(false);
        boolean boolean34 = properties0.contains((java.lang.Object) atomikosProperties19);
        java.lang.String str35 = atomikosProperties19.getOutputDir();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.lang.Object obj12 = properties11.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        java.lang.String str15 = atomikosProperties13.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties13.getConsoleLogLevel();
        atomikosProperties13.setLogBaseDir("tm.out");
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties21.setMaxTimeout(1L);
        java.lang.Object obj26 = properties19.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties21);
        atomikosProperties21.setConsoleFileLimit(2);
        boolean boolean29 = properties11.equals((java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        atomikosProperties30.setOutputDir("hi!");
        int int34 = atomikosProperties30.getConsoleFileLimit();
        java.util.Properties properties35 = atomikosProperties30.asProperties();
        java.util.Set<java.lang.String> strSet36 = properties35.stringPropertyNames();
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.lang.Object obj46 = properties41.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet47 = properties41.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount((-1));
        java.lang.String str51 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setLogBaseName("tm.out");
        int int54 = atomikosProperties48.getConsoleFileCount();
        boolean boolean55 = properties41.containsKey((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = atomikosProperties48.getRecovery();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        int int67 = atomikosProperties63.getConsoleFileLimit();
        java.lang.Object obj68 = properties60.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setLogBaseName("tm.out");
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.lang.Object obj73 = properties37.replace((java.lang.Object) recovery58, (java.lang.Object) atomikosProperties63);
        boolean boolean74 = properties11.contains((java.lang.Object) properties37);
        properties11.clear();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(recovery58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        boolean boolean11 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties1.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties1.entrySet();
        java.lang.Object obj14 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setConsoleFileCount(100);
        atomikosProperties15.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties20 = atomikosProperties15.asProperties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<?> wildcardEnumeration22 = properties21.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getTransactionManagerUniqueName();
        boolean boolean25 = atomikosProperties23.isForceShutdownOnVmExit();
        java.util.Properties properties26 = atomikosProperties23.asProperties();
        int int27 = properties26.size();
        boolean boolean28 = properties26.isEmpty();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj32 = properties21.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
        boolean boolean33 = properties1.containsValue((java.lang.Object) properties21);
        boolean boolean34 = properties1.isEmpty();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{=hi!}");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 18 + "'", int27 == 18);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setOutputDir("tm.out");
        int int6 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setMaxActives(100);
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setSerialJtaTransactions(false);
        long long13 = atomikosProperties0.getMaxTimeout();
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        java.lang.Object obj9 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setOutputDir("hi!");
        int int14 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setDefaultJtaTimeout(1L);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setLogBaseDir("tmlog");
        boolean boolean21 = properties5.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount(100);
        atomikosProperties22.setAllowSubTransactions(true);
        boolean boolean27 = atomikosProperties22.isForceShutdownOnVmExit();
        int int28 = atomikosProperties22.getConsoleFileCount();
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        atomikosProperties22.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.lang.String str39 = atomikosProperties34.getService();
        java.lang.String str40 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setOutputDir("tmlog");
        long long43 = atomikosProperties34.getMaxTimeout();
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean46 = atomikosProperties34.isAllowSubTransactions();
        java.lang.Object obj47 = properties5.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosProperties34);
        atomikosProperties22.setConsoleFileLimit(50);
        atomikosProperties22.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties22.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setConsoleFileCount(100);
        int int41 = atomikosProperties38.getConsoleFileCount();
        atomikosProperties38.setOutputDir("");
        java.lang.String str44 = atomikosProperties38.getConsoleFileName();
        int int45 = atomikosProperties38.getConsoleFileCount();
        boolean boolean46 = atomikosProperties38.isEnableLogging();
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        boolean boolean48 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setService("tm.out");
        boolean boolean51 = properties37.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties52 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getConsoleFileName();
        java.lang.Object obj56 = properties52.put((java.lang.Object) atomikosProperties53, (java.lang.Object) 0L);
        java.lang.Object obj59 = properties52.setProperty("", "");
        java.lang.Object obj62 = properties52.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getTransactionManagerUniqueName();
        atomikosProperties63.setAllowSubTransactions(false);
        boolean boolean67 = properties52.containsKey((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setConsoleFileLimit(100);
        boolean boolean71 = properties37.remove((java.lang.Object) atomikosProperties63, (java.lang.Object) 50);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties37.elements();
        java.lang.String str74 = properties37.getProperty("hi!");
        java.io.InputStream inputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties37.load(inputStream75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Collection<java.lang.Object> objCollection15 = properties1.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.lang.Object obj25 = properties17.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties20);
        boolean boolean26 = properties1.equals((java.lang.Object) properties17);
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long4 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 100);
        recovery0.setForgetOrphanedLogEntriesDelay(10000L);
        java.lang.Class<?> wildcardClass9 = recovery0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        int int15 = atomikosProperties7.getMaxActives();
        java.lang.String str16 = atomikosProperties7.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.lang.Object obj47 = properties39.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel48);
        boolean boolean51 = properties0.containsKey((java.lang.Object) atomikosProperties6);
        java.lang.String str52 = atomikosProperties6.getTransactionManagerUniqueName();
        java.util.Properties properties53 = atomikosProperties6.asProperties();
        java.util.Enumeration<?> wildcardEnumeration54 = properties53.propertyNames();
        java.io.PrintWriter printWriter55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.list(printWriter55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.lang.Object obj10 = properties0.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setAllowSubTransactions(false);
        boolean boolean15 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        java.lang.Object obj36 = properties28.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseName("tm.out");
        atomikosProperties31.setForceShutdownOnVmExit(false);
        boolean boolean41 = properties24.containsValue((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setService("hi!");
        atomikosProperties31.setService("");
        java.lang.String str46 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setMaxActives((int) (byte) -1);
        atomikosProperties31.setConsoleFileLimit(5);
        java.lang.Object obj51 = properties0.get((java.lang.Object) atomikosProperties31);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.lang.String str15 = atomikosProperties9.getService();
        atomikosProperties9.setService("hi!");
        atomikosProperties9.setConsoleFileName("tm.out");
        java.lang.String str20 = atomikosProperties9.getTransactionManagerUniqueName();
        long long21 = atomikosProperties9.getMaxTimeout();
        int int22 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj23 = properties8.get((java.lang.Object) atomikosProperties9);
        boolean boolean24 = atomikosProperties9.isAllowSubTransactions();
        atomikosProperties9.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean9 = properties7.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.keys();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties14.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("tm.out");
        boolean boolean32 = properties14.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = new java.util.Properties(properties34);
        java.lang.String str42 = properties34.getProperty("tmlog");
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        properties44.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        atomikosProperties47.setOutputDir("hi!");
        int int51 = atomikosProperties47.getConsoleFileLimit();
        java.lang.Object obj52 = properties44.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileLimit((int) (short) 0);
        boolean boolean55 = properties34.containsValue((java.lang.Object) atomikosProperties47);
        java.lang.Object obj56 = properties1.getOrDefault((java.lang.Object) properties7, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties57 = atomikosProperties47.asProperties();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.util.Properties properties60 = new java.util.Properties(properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties63.getConsoleLogLevel();
        atomikosProperties61.setConsoleLogLevel(atomikosLoggingLevel65);
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean69 = properties60.containsValue((java.lang.Object) atomikosProperties61);
        java.util.Enumeration<?> wildcardEnumeration70 = properties60.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties60.entrySet();
        java.util.Properties properties72 = new java.util.Properties(properties60);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.save(outputStream74, "{tm.out=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNotNull(objEntrySet71);
    }
}
