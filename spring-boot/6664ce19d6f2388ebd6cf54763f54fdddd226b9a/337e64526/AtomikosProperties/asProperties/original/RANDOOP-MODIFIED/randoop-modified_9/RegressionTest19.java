import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getRetryInterval();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) '4');
        long long9 = recovery0.getRetryInterval();
        int int10 = recovery0.getMaxRetries();
        recovery0.setDelay((long) (short) 1);
        long long13 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long14 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries(0);
        recovery0.setRetryInterval((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long4 = recovery0.getDelay();
        recovery0.setMaxRetries(97);
        recovery0.setRetryInterval(97L);
        long long9 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 97L + "'", long9 == 97L);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        properties0.clear();
        int int7 = properties0.size();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        atomikosProperties9.setDefaultJtaTimeout(1L);
        atomikosProperties9.setForceShutdownOnVmExit(false);
        boolean boolean18 = atomikosProperties9.isForceShutdownOnVmExit();
        long long19 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setOutputDir("tm.out");
        java.util.Properties properties22 = atomikosProperties9.asProperties();
        boolean boolean23 = properties8.contains((java.lang.Object) atomikosProperties9);
        properties8.clear();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        int int8 = properties7.size();
        boolean boolean9 = properties7.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Properties properties11 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.lang.String str18 = atomikosProperties12.getService();
        atomikosProperties12.setService("hi!");
        atomikosProperties12.setForceShutdownOnVmExit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties25 = atomikosProperties12.asProperties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long31 = recovery30.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass32 = recovery30.getClass();
        boolean boolean33 = properties28.containsKey((java.lang.Object) wildcardClass32);
        boolean boolean34 = properties7.replace((java.lang.Object) properties25, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass32);
        java.util.Properties properties35 = new java.util.Properties(properties25);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        java.lang.Object obj45 = properties37.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties40.getService();
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        boolean boolean51 = properties1.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setConsoleFileCount(100);
        atomikosProperties54.setCheckpointInterval((long) (short) 10);
        atomikosProperties54.setOutputDir("");
        java.lang.String str61 = atomikosProperties54.getLogBaseName();
        atomikosProperties54.setTransactionManagerUniqueName("{10=10.0}");
        atomikosProperties54.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel66 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel66);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 86400000L + "'", long31 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        java.lang.Object obj8 = properties4.put((java.lang.Object) atomikosProperties5, (java.lang.Object) 0L);
        atomikosProperties5.setThreadedTwoPhaseCommit(false);
        atomikosProperties5.setConsoleFileLimit((int) ' ');
        java.lang.String str13 = atomikosProperties5.getTransactionManagerUniqueName();
        java.util.Properties properties14 = atomikosProperties5.asProperties();
        boolean boolean15 = properties1.containsKey((java.lang.Object) atomikosProperties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        int int18 = properties17.size();
        boolean boolean19 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties23.isEmpty();
        boolean boolean26 = properties17.containsValue((java.lang.Object) boolean25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties17.elements();
        properties17.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties17.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        java.lang.String str35 = atomikosProperties31.getOutputDir();
        java.util.Properties properties36 = atomikosProperties31.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj38 = properties17.remove((java.lang.Object) properties37);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) 18);
        recovery0.setRetryInterval((long) 35);
        long long10 = recovery0.getRetryInterval();
        int int11 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 35L + "'", long10 == 35L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setDelay((long) (short) 1);
        recovery6.setDelay((long) (-1));
        java.lang.Object obj12 = properties3.remove((java.lang.Object) (-1));
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        int int15 = properties14.size();
        boolean boolean16 = properties14.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties14);
        java.util.Properties properties18 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        java.lang.String str25 = atomikosProperties19.getService();
        atomikosProperties19.setService("hi!");
        atomikosProperties19.setForceShutdownOnVmExit(true);
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties32 = atomikosProperties19.asProperties();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        int int36 = properties35.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long38 = recovery37.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass39 = recovery37.getClass();
        boolean boolean40 = properties35.containsKey((java.lang.Object) wildcardClass39);
        boolean boolean41 = properties14.replace((java.lang.Object) properties32, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass39);
        java.util.Properties properties42 = new java.util.Properties(properties32);
        java.util.Properties properties43 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        java.lang.Object obj47 = properties43.put((java.lang.Object) atomikosProperties44, (java.lang.Object) 0L);
        java.util.Properties properties48 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        atomikosProperties49.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj54 = properties43.remove((java.lang.Object) atomikosProperties49);
        boolean boolean55 = atomikosProperties49.isForceShutdownOnVmExit();
        java.lang.Object obj56 = properties32.get((java.lang.Object) boolean55);
        java.util.Properties properties57 = new java.util.Properties(properties32);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long60 = recovery59.getForgetOrphanedLogEntriesDelay();
        long long61 = recovery59.getRetryInterval();
        long long62 = recovery59.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount(100);
        int int66 = atomikosProperties63.getConsoleFileCount();
        atomikosProperties63.setOutputDir("");
        java.lang.String str69 = atomikosProperties63.getConsoleFileName();
        int int70 = atomikosProperties63.getConsoleFileCount();
        boolean boolean71 = atomikosProperties63.isEnableLogging();
        java.lang.String str72 = atomikosProperties63.getConsoleFileName();
        boolean boolean73 = atomikosProperties63.isSerialJtaTransactions();
        java.lang.String str74 = atomikosProperties63.getLogBaseDir();
        boolean boolean75 = atomikosProperties63.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = atomikosProperties63.getConsoleLogLevel();
        boolean boolean77 = properties32.remove((java.lang.Object) long62, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties78 = atomikosProperties63.asProperties();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 86400000L + "'", long38 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 86400000L + "'", long60 == 86400000L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel76 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel76.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(properties78);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        atomikosProperties10.setLogBaseDir("tm.out");
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean20 = properties9.containsValue((java.lang.Object) false);
        properties9.clear();
        java.util.Properties properties22 = new java.util.Properties(properties9);
        java.util.Set<java.lang.String> strSet23 = properties9.stringPropertyNames();
        java.lang.Object obj24 = properties9.clone();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties2.entrySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        boolean boolean24 = properties9.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount(100);
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) atomikosProperties25);
        java.util.Properties properties31 = new java.util.Properties(properties9);
        java.lang.String str33 = properties31.getProperty("");
        properties31.clear();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Collection<java.lang.Object> objCollection41 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.util.Properties properties47 = atomikosProperties42.asProperties();
        boolean boolean48 = properties38.containsValue((java.lang.Object) atomikosProperties42);
        boolean boolean49 = properties38.isEmpty();
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        atomikosProperties54.setOutputDir("hi!");
        int int58 = atomikosProperties54.getConsoleFileLimit();
        java.lang.Object obj59 = properties51.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties54);
        atomikosProperties54.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties54.setConsoleLogLevel(atomikosLoggingLevel64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setConsoleFileCount(100);
        atomikosProperties66.setAllowSubTransactions(true);
        boolean boolean71 = atomikosProperties66.isForceShutdownOnVmExit();
        int int72 = atomikosProperties66.getConsoleFileCount();
        java.util.Properties properties73 = atomikosProperties66.asProperties();
        java.lang.Object obj74 = properties38.replace((java.lang.Object) atomikosLoggingLevel64, (java.lang.Object) atomikosProperties66);
        boolean boolean75 = properties2.remove((java.lang.Object) properties31, (java.lang.Object) atomikosLoggingLevel64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setConsoleFileCount(100);
        int int79 = atomikosProperties76.getConsoleFileCount();
        atomikosProperties76.setOutputDir("");
        java.lang.String str82 = atomikosProperties76.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str84 = atomikosProperties83.getConsoleFileName();
        java.lang.String str85 = atomikosProperties83.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str87 = atomikosProperties86.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel88 = atomikosProperties86.getConsoleLogLevel();
        atomikosProperties83.setConsoleLogLevel(atomikosLoggingLevel88);
        boolean boolean90 = atomikosProperties83.isAllowSubTransactions();
        atomikosProperties83.setSerialJtaTransactions(false);
        boolean boolean93 = atomikosProperties83.isForceShutdownOnVmExit();
        java.util.Properties properties94 = atomikosProperties83.asProperties();
        boolean boolean95 = properties31.remove((java.lang.Object) atomikosProperties76, (java.lang.Object) properties94);
        java.io.Writer writer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.store(writer96, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tm.out" + "'", str84, "tm.out");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tm.out" + "'", str87, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel88 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel88.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(properties94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        boolean boolean14 = properties3.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.lang.Object obj24 = properties16.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        boolean boolean36 = atomikosProperties31.isForceShutdownOnVmExit();
        int int37 = atomikosProperties31.getConsoleFileCount();
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Object obj39 = properties3.replace((java.lang.Object) atomikosLoggingLevel29, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties40 = new java.util.Properties(properties3);
        java.util.Properties properties41 = new java.util.Properties(properties3);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        java.lang.Object obj51 = properties43.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties46);
        atomikosProperties46.setOutputDir("hi!");
        atomikosProperties46.setLogBaseDir("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel56 = atomikosProperties46.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount((-1));
        java.lang.String str60 = atomikosProperties57.getOutputDir();
        atomikosProperties57.setLogBaseName("tm.out");
        atomikosProperties57.setLogBaseDir("tm.out");
        java.lang.String str65 = atomikosProperties57.getLogBaseDir();
        atomikosProperties57.setDefaultJtaTimeout(10L);
        atomikosProperties57.setSerialJtaTransactions(false);
        java.lang.String str70 = atomikosProperties57.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties57.getRecovery();
        atomikosProperties57.setLogBaseDir("");
        boolean boolean74 = atomikosProperties57.isSerialJtaTransactions();
        long long75 = atomikosProperties57.getDefaultJtaTimeout();
        boolean boolean76 = properties41.remove((java.lang.Object) atomikosProperties46, (java.lang.Object) atomikosProperties57);
        java.lang.Class<?> wildcardClass77 = atomikosProperties57.getClass();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel56 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel56.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties5.entrySet();
        int int17 = properties5.size();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, 100={}, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 19 + "'", int17 == 19);
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        recovery0.setMaxRetries((-1));
        int int5 = recovery0.getMaxRetries();
        recovery0.setRetryInterval(86400000L);
        long long8 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay(52L);
        recovery0.setDelay((long) (short) 10);
        long long13 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setConsoleFileCount(100);
        int int14 = atomikosProperties11.getConsoleFileCount();
        atomikosProperties11.setOutputDir("");
        java.lang.String str17 = atomikosProperties11.getConsoleFileName();
        int int18 = atomikosProperties11.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel19);
        boolean boolean21 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean40 = properties38.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getTransactionManagerUniqueName();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties45.getConsoleLogLevel();
        java.lang.Object obj51 = properties38.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) atomikosLoggingLevel50);
        java.util.Collection<java.lang.Object> objCollection52 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 100);
        java.util.Properties properties57 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        java.lang.Object obj61 = properties57.put((java.lang.Object) atomikosProperties58, (java.lang.Object) 0L);
        java.util.Properties properties62 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount(100);
        atomikosProperties63.setAllowSubTransactions(true);
        boolean boolean68 = atomikosProperties63.isForceShutdownOnVmExit();
        boolean boolean69 = properties62.contains((java.lang.Object) atomikosProperties63);
        java.util.Collection<java.lang.Object> objCollection70 = properties62.values();
        boolean boolean71 = properties15.replace((java.lang.Object) properties38, (java.lang.Object) (byte) 100, (java.lang.Object) objCollection70);
        java.util.Properties properties72 = new java.util.Properties(properties38);
        java.util.Properties properties73 = new java.util.Properties(properties38);
        java.util.Properties properties74 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str76 = atomikosProperties75.getConsoleFileName();
        java.lang.Object obj78 = properties74.put((java.lang.Object) atomikosProperties75, (java.lang.Object) 0L);
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.lang.Object obj80 = properties79.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str82 = atomikosProperties81.getConsoleFileName();
        long long83 = atomikosProperties81.getDefaultJtaTimeout();
        atomikosProperties81.setConsoleFileCount(0);
        atomikosProperties81.setDefaultJtaTimeout((long) 50);
        java.util.Properties properties88 = atomikosProperties81.asProperties();
        java.lang.String str90 = properties88.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj91 = properties38.putIfAbsent(obj80, (java.lang.Object) properties88);
        java.lang.String str94 = properties88.getProperty("{10=10.0}", "{false=500}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tm.out" + "'", str76, "tm.out");
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{false=500}" + "'", str94, "{false=500}");
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        int int10 = properties1.size();
        java.lang.String str11 = properties1.toString();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.lang.Object obj22 = properties15.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount((-1));
        java.lang.String str27 = atomikosProperties24.getOutputDir();
        atomikosProperties24.setLogBaseName("tm.out");
        boolean boolean30 = properties15.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        java.lang.Object obj36 = properties15.remove((java.lang.Object) atomikosProperties31);
        java.util.Properties properties37 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.String str43 = atomikosProperties38.getService();
        java.lang.String str44 = atomikosProperties38.getOutputDir();
        atomikosProperties38.setOutputDir("tmlog");
        long long47 = atomikosProperties38.getMaxTimeout();
        boolean boolean48 = properties37.contains((java.lang.Object) atomikosProperties38);
        java.util.Properties properties49 = new java.util.Properties(properties37);
        java.util.Properties properties50 = new java.util.Properties(properties37);
        java.util.Set<java.lang.String> strSet51 = properties50.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setOutputDir("hi!");
        long long56 = atomikosProperties52.getCheckpointInterval();
        java.lang.Object obj57 = properties50.get((java.lang.Object) long56);
        boolean boolean58 = properties1.containsValue((java.lang.Object) properties50);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{10=10.0}" + "'", str11, "{10=10.0}");
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives(0);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        int int12 = atomikosProperties0.getMaxActives();
        boolean boolean13 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str2 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        boolean boolean5 = atomikosProperties3.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties3.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        java.lang.Object obj13 = properties9.put((java.lang.Object) atomikosProperties10, (java.lang.Object) 0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties14.setForceShutdownOnVmExit(true);
        long long19 = atomikosProperties14.getMaxTimeout();
        boolean boolean20 = atomikosProperties14.isEnableLogging();
        boolean boolean21 = properties9.contains((java.lang.Object) boolean20);
        java.util.Properties properties22 = new java.util.Properties(properties9);
        java.lang.String str23 = properties9.toString();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        java.lang.Object obj33 = properties25.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setLogBaseName("tm.out");
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setEnableLogging(false);
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.String str44 = atomikosProperties28.getService();
        boolean boolean45 = properties8.remove((java.lang.Object) properties9, (java.lang.Object) atomikosProperties28);
        java.util.Properties properties46 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        java.lang.Object obj50 = properties46.put((java.lang.Object) atomikosProperties47, (java.lang.Object) 0L);
        java.lang.Object obj53 = properties46.setProperty("", "");
        java.util.Properties properties54 = new java.util.Properties(properties46);
        java.lang.Object obj55 = properties54.clone();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean59 = properties57.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getConsoleFileName();
        atomikosProperties64.setOutputDir("hi!");
        int int68 = atomikosProperties64.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = atomikosProperties64.getConsoleLogLevel();
        java.lang.Object obj70 = properties57.putIfAbsent((java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosLoggingLevel69);
        boolean boolean71 = properties54.contains((java.lang.Object) atomikosProperties60);
        int int72 = atomikosProperties60.getMaxActives();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        boolean boolean75 = atomikosProperties60.isAllowSubTransactions();
        java.lang.Object obj76 = properties9.remove((java.lang.Object) boolean75);
        int int77 = properties9.size();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel69 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel69.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean13 = properties11.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getTransactionManagerUniqueName();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        int int22 = atomikosProperties18.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties18.getConsoleLogLevel();
        java.lang.Object obj24 = properties11.putIfAbsent((java.lang.Object) atomikosProperties14, (java.lang.Object) atomikosLoggingLevel23);
        boolean boolean25 = properties8.contains((java.lang.Object) atomikosProperties14);
        int int26 = atomikosProperties14.getMaxActives();
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        boolean boolean29 = atomikosProperties14.isAllowSubTransactions();
        atomikosProperties14.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long32 = atomikosProperties14.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 100L + "'", long32 == 100L);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        atomikosProperties1.setConsoleFileName("{=hi!}");
        atomikosProperties1.setService("{tm.out=}");
        boolean boolean14 = atomikosProperties1.isEnableLogging();
        atomikosProperties1.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setConsoleFileName("hi!");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getService();
        atomikosProperties0.setTransactionManagerUniqueName("{10=10.0}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int13 = atomikosProperties0.getConsoleFileCount();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        atomikosProperties7.setEnableLogging(false);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        java.io.PrintStream printStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.list(printStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objSet19);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        atomikosProperties44.setLogBaseDir("tm.out");
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean55 = properties37.replace((java.lang.Object) objSet42, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties44);
        java.lang.String str56 = atomikosProperties44.getService();
        java.lang.Object obj57 = properties29.remove((java.lang.Object) atomikosProperties44);
        java.lang.String str58 = properties29.toString();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection60 = properties59.values();
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.lang.Object obj62 = null;
        boolean boolean63 = properties59.equals(obj62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties59.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties59.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str67 = atomikosProperties66.getTransactionManagerUniqueName();
        boolean boolean68 = atomikosProperties66.isForceShutdownOnVmExit();
        atomikosProperties66.setAllowSubTransactions(false);
        atomikosProperties66.setLogBaseName("");
        java.lang.Object obj73 = properties59.remove((java.lang.Object) atomikosProperties66);
        java.lang.Object obj74 = properties29.remove((java.lang.Object) atomikosProperties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery75 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long76 = recovery75.getForgetOrphanedLogEntriesDelay();
        recovery75.setDelay((long) (short) 1);
        long long79 = recovery75.getForgetOrphanedLogEntriesDelay();
        long long80 = recovery75.getRetryInterval();
        recovery75.setRetryInterval((long) 0);
        long long83 = recovery75.getRetryInterval();
        boolean boolean84 = properties29.containsValue((java.lang.Object) recovery75);
        recovery75.setMaxRetries(18);
        long long87 = recovery75.getRetryInterval();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 86400000L + "'", long76 == 86400000L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 86400000L + "'", long79 == 86400000L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties5.setForceShutdownOnVmExit(true);
        long long10 = atomikosProperties5.getMaxTimeout();
        boolean boolean11 = atomikosProperties5.isEnableLogging();
        boolean boolean12 = properties0.contains((java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setConsoleFileCount((-1));
        atomikosProperties14.setTransactionManagerUniqueName("tm.out");
        java.lang.String str19 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties14.setService("tm.out");
        boolean boolean24 = atomikosProperties14.isEnableLogging();
        atomikosProperties14.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        atomikosProperties27.setLogBaseDir("tm.out");
        java.lang.String str35 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.setDefaultJtaTimeout(10L);
        atomikosProperties27.setConsoleFileCount((int) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.String str45 = atomikosProperties40.getLogBaseName();
        atomikosProperties40.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties40.setService("tm.out");
        boolean boolean50 = atomikosProperties40.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        java.lang.String str53 = atomikosProperties51.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel54);
        atomikosProperties27.setConsoleLogLevel(atomikosLoggingLevel54);
        atomikosProperties14.setConsoleLogLevel(atomikosLoggingLevel54);
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.String str60 = atomikosProperties14.getConsoleFileName();
        long long61 = atomikosProperties14.getMaxTimeout();
        boolean boolean62 = properties13.containsKey((java.lang.Object) atomikosProperties14);
        java.util.Set<java.lang.Object> objSet63 = properties13.keySet();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet63);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        atomikosProperties0.setEnableLogging(false);
        long long18 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setMaxTimeout((long) 1);
        java.lang.String str16 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval((long) 19);
        int int12 = atomikosProperties0.getConsoleFileLimit();
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setSerialJtaTransactions(true);
        atomikosProperties4.setCheckpointInterval(10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        java.lang.String str21 = atomikosProperties17.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj35 = properties28.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setConsoleFileCount((-1));
        java.lang.String str40 = atomikosProperties37.getOutputDir();
        atomikosProperties37.setLogBaseName("tm.out");
        boolean boolean43 = properties28.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount(100);
        atomikosProperties44.setAllowSubTransactions(true);
        java.lang.Object obj49 = properties28.remove((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setAllowSubTransactions(false);
        atomikosProperties44.setSerialJtaTransactions(true);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties(properties54);
        properties55.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        atomikosProperties58.setOutputDir("hi!");
        int int62 = atomikosProperties58.getConsoleFileLimit();
        java.lang.Object obj63 = properties55.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties44.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties22.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel64);
        atomikosProperties4.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties4.getRecovery();
        java.lang.String str72 = atomikosProperties4.getOutputDir();
        int int73 = atomikosProperties4.getMaxActives();
        java.lang.String str74 = atomikosProperties4.getConsoleFileName();
        boolean boolean75 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str78 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tm.out" + "'", str74, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        atomikosProperties44.setOutputDir("hi!");
        int int48 = atomikosProperties44.getConsoleFileLimit();
        java.util.Properties properties49 = atomikosProperties44.asProperties();
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Enumeration<?> wildcardEnumeration54 = properties51.propertyNames();
        java.util.Set<java.lang.Object> objSet55 = properties51.keySet();
        java.lang.String str57 = properties51.getProperty("{10=10.0}");
        java.util.Collection<java.lang.Object> objCollection58 = properties51.values();
        boolean boolean59 = properties7.containsValue((java.lang.Object) properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties7.entrySet();
        properties7.clear();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEntrySet60);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str3 = atomikosProperties2.getConsoleFileName();
        java.lang.Object obj5 = properties1.put((java.lang.Object) atomikosProperties2, (java.lang.Object) 0L);
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.lang.Object obj10 = properties9.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount(100);
        atomikosProperties12.setCheckpointInterval((long) (short) 10);
        boolean boolean17 = properties0.remove((java.lang.Object) objEntrySet11, (java.lang.Object) atomikosProperties12);
        java.util.Properties properties18 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        int int21 = atomikosProperties19.getMaxActives();
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        boolean boolean23 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = atomikosProperties19.getRecovery();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        boolean boolean28 = atomikosProperties19.isAllowSubTransactions();
        boolean boolean29 = properties18.equals((java.lang.Object) boolean28);
        java.lang.Object obj30 = properties18.clone();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tm.out" + "'", str3, "tm.out");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(recovery26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties(properties23);
        java.lang.String str31 = properties23.getProperty("tmlog");
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.lang.Object obj41 = properties33.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setConsoleFileLimit((int) (short) 0);
        boolean boolean44 = properties23.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setMaxTimeout(0L);
        boolean boolean47 = atomikosProperties36.isEnableLogging();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives((int) (short) 0);
        int int11 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        java.lang.Object obj9 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setOutputDir("hi!");
        int int14 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setDefaultJtaTimeout(1L);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setLogBaseDir("tmlog");
        boolean boolean21 = properties5.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str23 = atomikosProperties22.getConsoleFileName();
        java.lang.String str24 = atomikosProperties22.getTransactionManagerUniqueName();
        atomikosProperties22.setCheckpointInterval((long) (byte) 0);
        atomikosProperties22.setConsoleFileName("hi!");
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        java.lang.Object obj31 = properties5.get((java.lang.Object) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        atomikosProperties37.setOutputDir("hi!");
        int int41 = atomikosProperties37.getConsoleFileLimit();
        java.lang.Object obj42 = properties34.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties37);
        boolean boolean43 = atomikosProperties37.isForceShutdownOnVmExit();
        int int44 = atomikosProperties37.getConsoleFileCount();
        atomikosProperties37.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = atomikosProperties37.getRecovery();
        boolean boolean48 = properties29.containsValue((java.lang.Object) atomikosProperties37);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(recovery47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setOutputDir("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        int int6 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        boolean boolean19 = properties8.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties1.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        java.lang.String str26 = atomikosProperties23.getOutputDir();
        atomikosProperties23.setLogBaseName("tm.out");
        atomikosProperties23.setLogBaseDir("tm.out");
        atomikosProperties23.setOutputDir("tmlog");
        java.lang.String str33 = atomikosProperties23.getService();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        boolean boolean52 = properties37.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount(100);
        atomikosProperties53.setAllowSubTransactions(true);
        java.lang.Object obj58 = properties37.remove((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setAllowSubTransactions(false);
        atomikosProperties53.setSerialJtaTransactions(true);
        java.util.Properties properties63 = atomikosProperties53.asProperties();
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj65 = properties1.putIfAbsent((java.lang.Object) atomikosProperties23, (java.lang.Object) properties64);
        java.io.InputStream inputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        int int10 = atomikosProperties0.getMaxActives();
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.lang.String str51 = properties8.getProperty("{}");
        java.util.Properties properties52 = new java.util.Properties(properties8);
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.String str54 = properties52.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties52.entrySet();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertNotNull(objEntrySet55);
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        boolean boolean15 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str18 = atomikosProperties9.getService();
        java.util.Properties properties19 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getTransactionManagerUniqueName();
        boolean boolean22 = atomikosProperties20.isForceShutdownOnVmExit();
        java.util.Properties properties23 = atomikosProperties20.asProperties();
        int int24 = atomikosProperties20.getConsoleFileCount();
        java.lang.Object obj25 = properties19.get((java.lang.Object) atomikosProperties20);
        long long26 = atomikosProperties20.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties20.getConsoleLogLevel();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties20);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        int int31 = properties30.size();
        boolean boolean32 = properties30.isEmpty();
        boolean boolean34 = properties30.contains((java.lang.Object) "tmlog");
        java.lang.Object obj37 = properties30.setProperty("{hi!=10}", "tm.out");
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties30.elements();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.String str41 = properties30.getProperty("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        int int26 = properties3.size();
        java.util.Properties properties27 = new java.util.Properties(properties3);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj42 = properties35.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        boolean boolean50 = properties35.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setConsoleFileCount(100);
        atomikosProperties51.setAllowSubTransactions(true);
        java.lang.Object obj56 = properties35.remove((java.lang.Object) atomikosProperties51);
        java.util.Set<java.lang.Object> objSet57 = properties35.keySet();
        java.util.Properties properties58 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getTransactionManagerUniqueName();
        boolean boolean61 = atomikosProperties59.isForceShutdownOnVmExit();
        java.util.Properties properties62 = atomikosProperties59.asProperties();
        boolean boolean63 = properties58.contains((java.lang.Object) atomikosProperties59);
        boolean boolean64 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.Object obj65 = properties3.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) boolean64);
        java.util.Properties properties66 = new java.util.Properties(properties3);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        boolean boolean29 = atomikosProperties19.isSerialJtaTransactions();
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Collection<java.lang.Object> objCollection38 = properties35.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        boolean boolean45 = properties35.containsValue((java.lang.Object) atomikosProperties39);
        java.lang.String str46 = atomikosProperties39.getService();
        atomikosProperties39.setCheckpointInterval((long) 100);
        atomikosProperties39.setLogBaseDir("hi!");
        atomikosProperties39.setCheckpointInterval((long) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount((-1));
        java.lang.String str56 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setLogBaseName("tm.out");
        atomikosProperties53.setLogBaseDir("tm.out");
        int int61 = atomikosProperties53.getMaxActives();
        java.lang.Object obj62 = properties30.replace((java.lang.Object) atomikosProperties39, (java.lang.Object) int61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties63.setForceShutdownOnVmExit(true);
        long long68 = atomikosProperties63.getMaxTimeout();
        long long69 = atomikosProperties63.getCheckpointInterval();
        boolean boolean70 = properties30.equals((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setMaxActives(32);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 500L + "'", long69 == 500L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties4.setMaxTimeout((long) (short) 0);
        atomikosProperties4.setAllowSubTransactions(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str7 = properties5.getProperty("{hi!=}");
        java.util.Properties properties8 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        java.lang.Object obj12 = properties8.put((java.lang.Object) atomikosProperties9, (java.lang.Object) 0L);
        java.util.Properties properties13 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setConsoleFileCount((-1));
        atomikosProperties14.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj19 = properties8.remove((java.lang.Object) atomikosProperties14);
        java.util.Properties properties20 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount(100);
        int int24 = atomikosProperties21.getConsoleFileCount();
        atomikosProperties21.setOutputDir("");
        java.lang.String str27 = atomikosProperties21.getConsoleFileName();
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        boolean boolean29 = properties8.contains((java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long31 = recovery30.getForgetOrphanedLogEntriesDelay();
        recovery30.setDelay((long) (short) 1);
        long long34 = recovery30.getRetryInterval();
        long long35 = recovery30.getForgetOrphanedLogEntriesDelay();
        int int36 = recovery30.getMaxRetries();
        long long37 = recovery30.getRetryInterval();
        recovery30.setDelay(1L);
        int int40 = recovery30.getMaxRetries();
        java.lang.Object obj41 = properties5.getOrDefault((java.lang.Object) properties8, (java.lang.Object) recovery30);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        java.lang.Object obj51 = properties43.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties46);
        boolean boolean52 = atomikosProperties46.isForceShutdownOnVmExit();
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str55 = atomikosProperties46.getService();
        atomikosProperties46.setForceShutdownOnVmExit(true);
        boolean boolean58 = atomikosProperties46.isForceShutdownOnVmExit();
        boolean boolean59 = atomikosProperties46.isThreadedTwoPhaseCommit();
        atomikosProperties46.setConsoleFileCount((int) '4');
        atomikosProperties46.setAllowSubTransactions(false);
        boolean boolean64 = atomikosProperties46.isThreadedTwoPhaseCommit();
        atomikosProperties46.setCheckpointInterval(50L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties46.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        java.lang.String str70 = atomikosProperties68.getTransactionManagerUniqueName();
        java.lang.String str71 = atomikosProperties68.getService();
        long long72 = atomikosProperties68.getCheckpointInterval();
        java.lang.Object obj73 = properties5.putIfAbsent((java.lang.Object) atomikosProperties46, (java.lang.Object) long72);
        java.lang.Object obj76 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 86400000L + "'", long31 == 86400000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 86400000L + "'", long35 == 86400000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties5.getConsoleLogLevel();
        atomikosProperties3.setConsoleLogLevel(atomikosLoggingLevel7);
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean11 = properties2.containsValue((java.lang.Object) atomikosProperties3);
        java.util.Enumeration<?> wildcardEnumeration12 = properties2.propertyNames();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.store(outputStream13, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        long long3 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        recovery0.setDelay((long) (short) 10);
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        recovery0.setMaxRetries(97);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 5L + "'", long3 == 5L);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long2 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long3 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) 100);
        recovery0.setDelay(52L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 86400000L + "'", long2 == 86400000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 86400000L + "'", long3 == 86400000L);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        java.util.Properties properties13 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        java.lang.Object obj17 = properties13.put((java.lang.Object) atomikosProperties14, (java.lang.Object) 0L);
        java.util.Properties properties18 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount((-1));
        atomikosProperties19.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj24 = properties13.remove((java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setMaxActives((-1));
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean33 = properties31.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties38.getConsoleLogLevel();
        java.lang.Object obj44 = properties31.putIfAbsent((java.lang.Object) atomikosProperties34, (java.lang.Object) atomikosLoggingLevel43);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel46);
        long long48 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        atomikosProperties19.setConsoleFileLimit((int) (short) -1);
        long long45 = atomikosProperties19.getMaxTimeout();
        boolean boolean46 = atomikosProperties19.isSerialJtaTransactions();
        java.util.Properties properties47 = atomikosProperties19.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(properties47);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.lang.String str36 = properties5.getProperty("{}");
        java.lang.Object obj37 = properties5.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties5.elements();
        java.io.PrintWriter printWriter39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printWriter39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals(obj37.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration38);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.util.Set<java.lang.String> strSet35 = properties22.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties22);
        java.util.Properties properties37 = new java.util.Properties(properties22);
        java.util.Properties properties38 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        java.lang.Object obj42 = properties38.put((java.lang.Object) atomikosProperties39, (java.lang.Object) 0L);
        atomikosProperties39.setThreadedTwoPhaseCommit(false);
        atomikosProperties39.setConsoleFileLimit((int) ' ');
        java.lang.String str47 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties39.getConsoleLogLevel();
        boolean boolean51 = properties37.containsKey((java.lang.Object) atomikosLoggingLevel50);
        properties37.clear();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection54 = properties53.values();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.lang.Object obj63 = properties56.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setConsoleFileCount((-1));
        java.lang.String str68 = atomikosProperties65.getOutputDir();
        atomikosProperties65.setLogBaseName("tm.out");
        boolean boolean71 = properties56.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setConsoleFileCount(100);
        atomikosProperties72.setAllowSubTransactions(true);
        java.lang.Object obj77 = properties56.remove((java.lang.Object) atomikosProperties72);
        java.util.Set<java.lang.Object> objSet78 = properties56.keySet();
        int int79 = properties56.size();
        java.util.Properties properties80 = new java.util.Properties(properties56);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties56.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties56.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties56.elements();
        boolean boolean84 = properties37.containsKey((java.lang.Object) objEnumeration83);
        java.io.OutputStream outputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties37.storeToXML(outputStream85, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{tm.out=}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long4 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        recovery6.setDelay(19L);
        recovery6.setDelay((long) (byte) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(recovery6);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        long long12 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.lang.String str19 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}" + "'", str19, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        org.junit.Assert.assertNotNull(objSet6);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        boolean boolean43 = atomikosProperties19.isEnableLogging();
        int int44 = atomikosProperties19.getConsoleFileCount();
        int int45 = atomikosProperties19.getMaxActives();
        long long46 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setLogBaseName("");
        java.lang.String str49 = atomikosProperties19.getLogBaseName();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        atomikosProperties6.setMaxActives((-1));
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel30);
        long long33 = atomikosProperties6.getDefaultJtaTimeout();
        java.util.Properties properties34 = atomikosProperties6.asProperties();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Collection<java.lang.Object> objCollection45 = properties42.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        java.util.Properties properties51 = atomikosProperties46.asProperties();
        boolean boolean52 = properties42.containsValue((java.lang.Object) atomikosProperties46);
        boolean boolean53 = properties36.containsValue((java.lang.Object) properties42);
        boolean boolean54 = properties34.containsValue((java.lang.Object) boolean53);
        java.lang.String str55 = properties34.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setConsoleFileCount(100);
        atomikosProperties56.setAllowSubTransactions(true);
        atomikosProperties56.setMaxTimeout((long) '4');
        java.lang.String str63 = atomikosProperties56.getLogBaseDir();
        boolean boolean64 = atomikosProperties56.isForceShutdownOnVmExit();
        atomikosProperties56.setLogBaseDir("tm.out");
        atomikosProperties56.setConsoleFileName("hi!");
        boolean boolean69 = properties34.equals((java.lang.Object) atomikosProperties56);
        java.lang.String str70 = atomikosProperties56.getLogBaseDir();
        atomikosProperties56.setMaxTimeout((long) ' ');
        int int73 = atomikosProperties56.getConsoleFileLimit();
        atomikosProperties56.setService("{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean76 = atomikosProperties56.isEnableLogging();
        int int77 = atomikosProperties56.getMaxActives();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str55, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        atomikosProperties4.setForceShutdownOnVmExit(false);
        int int14 = atomikosProperties4.getMaxActives();
        atomikosProperties4.setConsoleFileLimit((int) (short) 10);
        java.lang.String str17 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setService("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        long long2 = recovery0.getDelay();
        long long3 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) 'a');
        recovery0.setMaxRetries(97);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 86400000L + "'", long3 == 86400000L);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setOutputDir("hi!");
        int int9 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        java.lang.String str11 = atomikosProperties5.getService();
        int int12 = atomikosProperties5.getMaxActives();
        boolean boolean13 = properties1.equals((java.lang.Object) atomikosProperties5);
        int int14 = atomikosProperties5.getConsoleFileCount();
        int int15 = atomikosProperties5.getConsoleFileCount();
        atomikosProperties5.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties5.setLogBaseName("{={=hi!}}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setMaxTimeout((long) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str14 = properties11.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.lang.Object obj13 = properties5.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties8);
        boolean boolean14 = atomikosProperties8.isForceShutdownOnVmExit();
        atomikosProperties8.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties8.getService();
        atomikosProperties8.setForceShutdownOnVmExit(true);
        boolean boolean20 = atomikosProperties8.isForceShutdownOnVmExit();
        java.lang.Object obj21 = properties0.remove((java.lang.Object) atomikosProperties8);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.Object obj31 = properties23.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        atomikosProperties33.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties40.getConsoleLogLevel();
        atomikosProperties38.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties26.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties8.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties8.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=32, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties6 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        java.lang.Object obj10 = properties6.put((java.lang.Object) atomikosProperties7, (java.lang.Object) 0L);
        atomikosProperties7.setThreadedTwoPhaseCommit(false);
        atomikosProperties7.setConsoleFileLimit((int) ' ');
        long long15 = atomikosProperties7.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setOutputDir("hi!");
        int int20 = atomikosProperties16.getConsoleFileLimit();
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.Object obj30 = properties25.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean31 = properties21.equals(obj30);
        java.lang.Object obj34 = properties21.setProperty("", "");
        java.util.Properties properties35 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount(100);
        atomikosProperties36.setAllowSubTransactions(true);
        boolean boolean41 = atomikosProperties36.isForceShutdownOnVmExit();
        java.util.Properties properties42 = atomikosProperties36.asProperties();
        atomikosProperties36.setConsoleFileName("");
        java.lang.String str45 = atomikosProperties36.getLogBaseName();
        java.lang.Object obj46 = properties21.get((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setMaxActives((int) ' ');
        boolean boolean49 = properties1.replace((java.lang.Object) '#', (java.lang.Object) atomikosProperties7, (java.lang.Object) atomikosProperties36);
        java.lang.String str50 = atomikosProperties36.getLogBaseDir();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        boolean boolean7 = properties6.isEmpty();
        java.lang.String str9 = properties6.getProperty("{}");
        boolean boolean10 = properties6.isEmpty();
        java.lang.String str13 = properties6.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str13, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        long long12 = atomikosProperties0.getMaxTimeout();
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getConsoleFileName();
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.getService();
        long long16 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties16.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet22 = properties16.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj30 = properties12.put((java.lang.Object) properties16, (java.lang.Object) properties27);
        int int31 = properties27.size();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.save(outputStream32, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel10);
        atomikosProperties6.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties6.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.keys();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        atomikosProperties17.setTransactionManagerUniqueName("tm.out");
        atomikosProperties17.setForceShutdownOnVmExit(false);
        long long24 = atomikosProperties17.getMaxTimeout();
        long long25 = atomikosProperties17.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<?> wildcardEnumeration36 = properties33.propertyNames();
        java.lang.Object obj37 = properties33.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.lang.Object obj52 = properties47.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean53 = properties43.equals(obj52);
        java.util.Collection<java.lang.Object> objCollection54 = properties43.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getConsoleFileName();
        atomikosProperties55.setOutputDir("hi!");
        int int59 = atomikosProperties55.getConsoleFileLimit();
        java.util.Properties properties60 = atomikosProperties55.asProperties();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setConsoleFileCount((-1));
        java.lang.String str68 = atomikosProperties65.getOutputDir();
        atomikosProperties65.setLogBaseName("tm.out");
        int int71 = atomikosProperties65.getMaxActives();
        boolean boolean72 = properties43.remove((java.lang.Object) properties60, (java.lang.Object) int71);
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties();
        java.util.Properties properties77 = new java.util.Properties(properties76);
        properties77.clear();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.lang.Object obj82 = properties77.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet83 = properties77.stringPropertyNames();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Object obj85 = properties77.get(obj84);
        java.util.Collection<java.lang.Object> objCollection86 = properties77.values();
        java.util.Properties properties87 = new java.util.Properties(properties77);
        boolean boolean88 = properties14.replace((java.lang.Object) long25, (java.lang.Object) properties60, (java.lang.Object) properties77);
        java.util.Properties properties89 = new java.util.Properties(properties77);
        java.util.Properties properties90 = new java.util.Properties(properties89);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tm.out" + "'", str56, "tm.out");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.String str10 = properties8.toString();
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        boolean boolean15 = properties13.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getTransactionManagerUniqueName();
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties20.getConsoleLogLevel();
        java.lang.Object obj26 = properties13.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties16.isSerialJtaTransactions();
        long long28 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str29 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setMaxActives(20);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties16.getRecovery();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.lang.Object obj41 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj50 = properties43.setProperty("", "hi!");
        java.util.Properties properties51 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet52 = properties43.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection53 = properties43.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.lang.Object obj57 = null;
        boolean boolean58 = properties54.equals(obj57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties54.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties54.elements();
        java.lang.Object obj61 = properties34.put((java.lang.Object) properties43, (java.lang.Object) properties54);
        java.lang.Object obj62 = properties8.getOrDefault((java.lang.Object) recovery32, (java.lang.Object) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel67);
        atomikosProperties63.setSerialJtaTransactions(false);
        java.util.Properties properties71 = atomikosProperties63.asProperties();
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.lang.String str74 = atomikosProperties63.getService();
        java.lang.Object obj75 = properties8.get((java.lang.Object) atomikosProperties63);
        boolean boolean76 = atomikosProperties63.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxTimeout((long) 'a');
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        int int8 = atomikosProperties0.getMaxActives();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        int int8 = properties7.size();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        boolean boolean36 = properties7.containsKey((java.lang.Object) atomikosProperties28);
        java.lang.String str37 = atomikosProperties28.getTransactionManagerUniqueName();
        int int38 = atomikosProperties28.getConsoleFileCount();
        java.util.Properties properties39 = atomikosProperties28.asProperties();
        atomikosProperties28.setConsoleFileLimit((int) (byte) 0);
        int int42 = atomikosProperties28.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        int int5 = recovery4.getMaxRetries();
        int int6 = recovery4.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        long long12 = atomikosProperties0.getMaxTimeout();
        long long13 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        properties14.clear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileCount(10);
        atomikosProperties0.setConsoleFileCount(50);
        java.lang.String str10 = atomikosProperties0.getService();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties6 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        java.lang.Object obj10 = properties6.put((java.lang.Object) atomikosProperties7, (java.lang.Object) 0L);
        properties6.clear();
        java.util.Properties properties12 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        java.lang.Object obj16 = properties12.put((java.lang.Object) atomikosProperties13, (java.lang.Object) 0L);
        java.util.Properties properties17 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        atomikosProperties18.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj23 = properties12.remove((java.lang.Object) atomikosProperties18);
        java.lang.Object obj24 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) properties12);
        java.util.Enumeration<?> wildcardEnumeration25 = properties6.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        long long30 = atomikosProperties26.getCheckpointInterval();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties33 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        java.lang.Object obj37 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) 0L);
        java.lang.Object obj40 = properties33.setProperty("", "");
        java.util.Properties properties41 = new java.util.Properties(properties33);
        java.lang.Object obj42 = properties6.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties6.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount(100);
        atomikosProperties44.setAllowSubTransactions(true);
        java.lang.String str49 = atomikosProperties44.getConsoleFileName();
        java.util.Properties properties50 = atomikosProperties44.asProperties();
        atomikosProperties44.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties44.setConsoleFileLimit((int) (short) 100);
        int int55 = atomikosProperties44.getConsoleFileCount();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties(properties60);
        properties61.clear();
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.lang.Object obj66 = properties59.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setConsoleFileCount((-1));
        java.lang.String str71 = atomikosProperties68.getOutputDir();
        atomikosProperties68.setLogBaseName("tm.out");
        boolean boolean74 = properties59.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setConsoleFileCount(100);
        atomikosProperties75.setAllowSubTransactions(true);
        java.lang.Object obj80 = properties59.remove((java.lang.Object) atomikosProperties75);
        java.util.Properties properties81 = new java.util.Properties(properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getConsoleFileName();
        atomikosProperties82.setOutputDir("hi!");
        int int86 = atomikosProperties82.getConsoleFileLimit();
        java.lang.String str87 = atomikosProperties82.getService();
        java.lang.String str88 = atomikosProperties82.getOutputDir();
        atomikosProperties82.setOutputDir("tmlog");
        long long91 = atomikosProperties82.getMaxTimeout();
        boolean boolean92 = properties81.contains((java.lang.Object) atomikosProperties82);
        java.util.Properties properties93 = new java.util.Properties(properties81);
        boolean boolean94 = properties6.remove((java.lang.Object) int55, (java.lang.Object) properties93);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tm.out" + "'", str83, "tm.out");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 300000L + "'", long91 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.lang.Object obj10 = properties0.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setAllowSubTransactions(false);
        boolean boolean15 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        long long16 = atomikosProperties11.getCheckpointInterval();
        java.util.Properties properties17 = atomikosProperties11.asProperties();
        java.util.Properties properties18 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        java.lang.Object obj22 = properties18.put((java.lang.Object) atomikosProperties19, (java.lang.Object) 0L);
        java.util.Properties properties23 = new java.util.Properties(properties18);
        java.lang.Object obj24 = properties18.clone();
        java.util.Set<java.lang.Object> objSet25 = properties18.keySet();
        java.util.Properties properties26 = new java.util.Properties(properties18);
        properties26.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        boolean boolean33 = atomikosProperties28.isAllowSubTransactions();
        boolean boolean34 = atomikosProperties28.isAllowSubTransactions();
        long long35 = atomikosProperties28.getCheckpointInterval();
        boolean boolean36 = atomikosProperties28.isForceShutdownOnVmExit();
        boolean boolean37 = properties17.remove((java.lang.Object) properties26, (java.lang.Object) atomikosProperties28);
        int int38 = atomikosProperties28.getConsoleFileLimit();
        boolean boolean39 = atomikosProperties28.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        int int2 = atomikosProperties0.getMaxActives();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        atomikosProperties0.setCheckpointInterval(35L);
        atomikosProperties0.setConsoleFileCount((int) '#');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties5.stringPropertyNames();
        properties5.clear();
        java.util.Enumeration<?> wildcardEnumeration9 = properties5.propertyNames();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.springframework.boot.jta.atomikos.AtomikosProperties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        java.lang.String str11 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties12.getConsoleLogLevel();
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel14);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setDefaultJtaTimeout(18L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit(52);
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.lang.Object obj18 = properties5.setProperty("", "");
        java.util.Properties properties19 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount(100);
        atomikosProperties20.setAllowSubTransactions(true);
        boolean boolean25 = atomikosProperties20.isForceShutdownOnVmExit();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        atomikosProperties20.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties20.getLogBaseName();
        java.lang.Object obj30 = properties5.get((java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        boolean boolean36 = atomikosProperties31.isForceShutdownOnVmExit();
        int int37 = atomikosProperties31.getConsoleFileCount();
        boolean boolean38 = atomikosProperties31.isEnableLogging();
        atomikosProperties31.setMaxActives((int) (byte) 1);
        atomikosProperties31.setSerialJtaTransactions(false);
        java.lang.String str43 = atomikosProperties31.getTransactionManagerUniqueName();
        boolean boolean44 = properties5.equals((java.lang.Object) atomikosProperties31);
        boolean boolean45 = properties5.isEmpty();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.lang.Object obj23 = properties16.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount((-1));
        java.lang.String str28 = atomikosProperties25.getOutputDir();
        atomikosProperties25.setLogBaseName("tm.out");
        boolean boolean31 = properties16.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setConsoleFileCount(100);
        atomikosProperties32.setAllowSubTransactions(true);
        java.lang.Object obj37 = properties16.remove((java.lang.Object) atomikosProperties32);
        java.util.Properties properties38 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.lang.String str44 = atomikosProperties39.getService();
        java.lang.String str45 = atomikosProperties39.getOutputDir();
        atomikosProperties39.setOutputDir("tmlog");
        long long48 = atomikosProperties39.getMaxTimeout();
        boolean boolean49 = properties38.contains((java.lang.Object) atomikosProperties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount(100);
        atomikosProperties50.setAllowSubTransactions(true);
        boolean boolean55 = atomikosProperties50.isForceShutdownOnVmExit();
        atomikosProperties50.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties50.setConsoleLogLevel(atomikosLoggingLevel60);
        java.lang.Object obj62 = properties12.putIfAbsent((java.lang.Object) properties38, (java.lang.Object) atomikosProperties50);
        int int63 = atomikosProperties50.getConsoleFileLimit();
        atomikosProperties50.setCheckpointInterval(52L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties4.getRecovery();
        java.util.Properties properties15 = atomikosProperties4.asProperties();
        atomikosProperties4.setDefaultJtaTimeout(32L);
        atomikosProperties4.setDefaultJtaTimeout(0L);
        atomikosProperties4.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties4.getRecovery();
        long long23 = recovery22.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str25 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        int int28 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setMaxTimeout(18L);
        atomikosProperties0.setDefaultJtaTimeout(32L);
        java.util.Properties properties33 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(properties33);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        java.lang.String str6 = atomikosProperties4.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties4.getConsoleLogLevel();
        boolean boolean8 = properties0.equals((java.lang.Object) atomikosProperties4);
        int int9 = atomikosProperties4.getConsoleFileCount();
        java.lang.String str10 = atomikosProperties4.getLogBaseDir();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        boolean boolean12 = atomikosProperties4.isThreadedTwoPhaseCommit();
        java.util.Properties properties13 = atomikosProperties4.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties13.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setConsoleFileCount(100);
        int int18 = atomikosProperties15.getConsoleFileCount();
        atomikosProperties15.setOutputDir("");
        java.lang.String str21 = atomikosProperties15.getConsoleFileName();
        long long22 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setMaxActives(100);
        atomikosProperties15.setMaxActives(0);
        atomikosProperties15.setSerialJtaTransactions(false);
        java.util.Properties properties29 = atomikosProperties15.asProperties();
        java.lang.String str30 = atomikosProperties15.getLogBaseName();
        java.util.Properties properties31 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getConsoleFileName();
        java.lang.Object obj35 = properties31.put((java.lang.Object) atomikosProperties32, (java.lang.Object) 0L);
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = atomikosProperties32.asProperties();
        java.util.Enumeration<?> wildcardEnumeration38 = properties37.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getConsoleFileName();
        atomikosProperties53.setOutputDir("hi!");
        int int57 = atomikosProperties53.getConsoleFileLimit();
        java.lang.Object obj58 = properties50.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setLogBaseName("tm.out");
        atomikosProperties53.setForceShutdownOnVmExit(false);
        boolean boolean63 = properties46.containsValue((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setService("hi!");
        int int66 = atomikosProperties53.getConsoleFileLimit();
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        int int69 = properties68.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties68.entrySet();
        java.util.Collection<java.lang.Object> objCollection71 = properties68.values();
        java.lang.Object obj72 = properties37.putIfAbsent((java.lang.Object) int66, (java.lang.Object) objCollection71);
        java.lang.Object obj73 = properties13.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) objCollection71);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        int int5 = atomikosProperties0.getMaxActives();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = properties6.setProperty("", "{hi!=10}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties6.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.setProperty("tm.out", "");
        java.util.Properties properties20 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount(100);
        atomikosProperties21.setAllowSubTransactions(true);
        boolean boolean26 = atomikosProperties21.isForceShutdownOnVmExit();
        int int27 = atomikosProperties21.getConsoleFileCount();
        java.lang.Object obj28 = properties20.get((java.lang.Object) atomikosProperties21);
        properties20.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.save(outputStream31, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.lang.Object obj12 = properties11.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        java.lang.String str15 = atomikosProperties13.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties13.getConsoleLogLevel();
        atomikosProperties13.setLogBaseDir("tm.out");
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties21.setMaxTimeout(1L);
        java.lang.Object obj26 = properties19.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties21);
        atomikosProperties21.setConsoleFileLimit(2);
        boolean boolean29 = properties11.equals((java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        atomikosProperties30.setOutputDir("hi!");
        int int34 = atomikosProperties30.getConsoleFileLimit();
        java.util.Properties properties35 = atomikosProperties30.asProperties();
        java.util.Set<java.lang.String> strSet36 = properties35.stringPropertyNames();
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.lang.Object obj46 = properties41.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet47 = properties41.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount((-1));
        java.lang.String str51 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setLogBaseName("tm.out");
        int int54 = atomikosProperties48.getConsoleFileCount();
        boolean boolean55 = properties41.containsKey((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = atomikosProperties48.getRecovery();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        int int67 = atomikosProperties63.getConsoleFileLimit();
        java.lang.Object obj68 = properties60.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setLogBaseName("tm.out");
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.lang.Object obj73 = properties37.replace((java.lang.Object) recovery58, (java.lang.Object) atomikosProperties63);
        boolean boolean74 = properties11.contains((java.lang.Object) properties37);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = properties11.entrySet();
        java.lang.String str76 = properties11.toString();
        java.io.PrintWriter printWriter77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printWriter77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(recovery58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEntrySet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileCount(10);
        atomikosProperties0.setConsoleFileCount(50);
        java.lang.String str10 = atomikosProperties0.getService();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties15.entrySet();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEntrySet16);
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setMaxTimeout(52L);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties1.equals((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        java.lang.String str29 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setLogBaseName("tm.out");
        atomikosProperties26.setForceShutdownOnVmExit(true);
        atomikosProperties26.setConsoleFileCount((int) (byte) 0);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean39 = properties37.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.keys();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj51 = properties44.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount((-1));
        java.lang.String str56 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setLogBaseName("tm.out");
        boolean boolean59 = properties44.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setConsoleFileCount(100);
        atomikosProperties60.setAllowSubTransactions(true);
        java.lang.Object obj65 = properties44.remove((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setAllowSubTransactions(false);
        atomikosProperties60.setSerialJtaTransactions(true);
        boolean boolean70 = properties37.containsKey((java.lang.Object) atomikosProperties60);
        java.util.Properties properties71 = new java.util.Properties(properties37);
        java.util.Collection<java.lang.Object> objCollection72 = properties71.values();
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties1.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties73.keys();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertNotNull(objEnumeration75);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        java.lang.String str6 = atomikosProperties4.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties4.getConsoleLogLevel();
        boolean boolean8 = properties0.equals((java.lang.Object) atomikosProperties4);
        int int9 = atomikosProperties4.getConsoleFileCount();
        java.lang.String str10 = atomikosProperties4.getLogBaseDir();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        boolean boolean12 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setLogBaseDir("{hi!=10}");
        long long15 = atomikosProperties4.getDefaultJtaTimeout();
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        java.util.Properties properties17 = atomikosProperties4.asProperties();
        boolean boolean18 = atomikosProperties4.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 2);
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long11 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj17 = properties0.setProperty("", "{hi!=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties18.getRecovery();
        atomikosProperties18.setAllowSubTransactions(false);
        atomikosProperties18.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean27 = atomikosProperties18.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        atomikosProperties29.setDefaultJtaTimeout(1L);
        atomikosProperties29.setForceShutdownOnVmExit(false);
        atomikosProperties29.setMaxActives(0);
        atomikosProperties29.setConsoleFileCount((int) 'a');
        boolean boolean42 = atomikosProperties29.isThreadedTwoPhaseCommit();
        java.lang.String str43 = atomikosProperties29.getTransactionManagerUniqueName();
        int int44 = atomikosProperties29.getConsoleFileLimit();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.keys();
        java.util.Properties properties49 = new java.util.Properties(properties45);
        java.lang.String str50 = properties45.toString();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Collection<java.lang.Object> objCollection57 = properties54.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        atomikosProperties58.setOutputDir("hi!");
        int int62 = atomikosProperties58.getConsoleFileLimit();
        java.util.Properties properties63 = atomikosProperties58.asProperties();
        boolean boolean64 = properties54.containsValue((java.lang.Object) atomikosProperties58);
        atomikosProperties58.setLogBaseName("");
        long long67 = atomikosProperties58.getCheckpointInterval();
        int int68 = atomikosProperties58.getConsoleFileCount();
        atomikosProperties58.setMaxActives((int) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int72 = recovery71.getMaxRetries();
        recovery71.setForgetOrphanedLogEntriesDelay(500L);
        long long75 = recovery71.getRetryInterval();
        recovery71.setMaxRetries((-1));
        boolean boolean78 = properties45.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) recovery71);
        boolean boolean79 = properties0.replace((java.lang.Object) recovery28, (java.lang.Object) int44, (java.lang.Object) boolean78);
        java.lang.Object obj82 = properties0.setProperty("tm.out", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel10);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet14 = properties13.keySet();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objSet14);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel10);
        atomikosProperties6.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties6.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.keys();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.lang.Object obj25 = properties18.setProperty("tm.out", "");
        java.util.Collection<java.lang.Object> objCollection26 = properties18.values();
        boolean boolean27 = properties18.isEmpty();
        boolean boolean28 = properties18.isEmpty();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        java.lang.String str45 = atomikosProperties39.getService();
        int int46 = atomikosProperties39.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        atomikosProperties47.setOutputDir("hi!");
        int int51 = atomikosProperties47.getConsoleFileLimit();
        java.util.Properties properties52 = atomikosProperties47.asProperties();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<?> wildcardEnumeration57 = properties54.propertyNames();
        java.lang.Object obj58 = properties30.getOrDefault((java.lang.Object) int46, (java.lang.Object) properties54);
        java.lang.Object obj59 = properties14.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) int46);
        java.util.Set<java.lang.String> strSet60 = properties14.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        atomikosProperties65.setOutputDir("hi!");
        int int69 = atomikosProperties65.getConsoleFileLimit();
        java.lang.Object obj70 = properties62.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties65);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties62.entrySet();
        java.util.Properties properties72 = new java.util.Properties(properties62);
        boolean boolean73 = properties14.equals((java.lang.Object) properties72);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 50 + "'", obj59, 50);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties5.getConsoleLogLevel();
        atomikosProperties3.setConsoleLogLevel(atomikosLoggingLevel7);
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean11 = properties2.containsValue((java.lang.Object) atomikosProperties3);
        java.util.Enumeration<?> wildcardEnumeration12 = properties2.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties2.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getTransactionManagerUniqueName();
        boolean boolean16 = atomikosProperties14.isForceShutdownOnVmExit();
        java.util.Properties properties17 = atomikosProperties14.asProperties();
        int int18 = atomikosProperties14.getConsoleFileCount();
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        java.lang.String str20 = atomikosProperties14.getOutputDir();
        boolean boolean21 = atomikosProperties14.isEnableLogging();
        boolean boolean22 = properties2.contains((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setEnableLogging(false);
        boolean boolean25 = atomikosProperties14.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.lang.String str5 = properties2.getProperty("hi!");
        properties2.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setConsoleFileCount(100);
        atomikosProperties7.setAllowSubTransactions(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        int int13 = atomikosProperties7.getConsoleFileCount();
        java.util.Properties properties14 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties7.getRecovery();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.Object obj26 = properties19.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount((-1));
        java.lang.String str31 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setLogBaseName("tm.out");
        boolean boolean34 = properties19.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount(100);
        atomikosProperties35.setAllowSubTransactions(true);
        java.lang.Object obj40 = properties19.remove((java.lang.Object) atomikosProperties35);
        atomikosProperties35.setAllowSubTransactions(false);
        int int43 = atomikosProperties35.getConsoleFileCount();
        java.util.Properties properties44 = atomikosProperties35.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties35.getConsoleLogLevel();
        java.lang.Object obj46 = properties2.getOrDefault((java.lang.Object) recovery15, (java.lang.Object) atomikosProperties35);
        int int47 = atomikosProperties35.getMaxActives();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(recovery15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        atomikosProperties0.setCheckpointInterval(5L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(recovery9);
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) (byte) 10);
        int int3 = recovery0.getMaxRetries();
        recovery0.setDelay(10L);
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        recovery0.setDelay(2L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.lang.Object obj12 = properties7.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.lang.Object obj22 = properties14.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties17);
        atomikosProperties17.setLogBaseName("tm.out");
        boolean boolean25 = properties7.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties33 = new java.util.Properties(properties27);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Set<java.lang.String> strSet35 = properties3.stringPropertyNames();
        java.lang.String str36 = properties3.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str36, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        java.lang.String str6 = atomikosProperties4.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties4.getConsoleLogLevel();
        boolean boolean8 = properties0.equals((java.lang.Object) atomikosProperties4);
        java.lang.String str9 = properties0.toString();
        int int10 = properties0.size();
        java.util.Properties properties11 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties11.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objEntrySet12);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setAllowSubTransactions(false);
        int int15 = atomikosProperties4.getMaxActives();
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        atomikosProperties4.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getMaxActives();
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        java.lang.String str12 = atomikosProperties10.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties13.getConsoleLogLevel();
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.lang.String str19 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) -1);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setSerialJtaTransactions(true);
        java.util.Properties properties27 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount((-1));
        java.lang.String str31 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setLogBaseName("tm.out");
        atomikosProperties28.setLogBaseDir("tm.out");
        java.lang.String str36 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setDefaultJtaTimeout(10L);
        java.util.Properties properties39 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties28.getRecovery();
        recovery40.setMaxRetries((int) (short) 100);
        long long43 = recovery40.getForgetOrphanedLogEntriesDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        atomikosProperties44.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties49.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties44.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties44.setLogBaseName("");
        atomikosProperties44.setDefaultJtaTimeout(5L);
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean66 = properties9.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) long43, (java.lang.Object) atomikosProperties44);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.putAll(objMap67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 86400000L + "'", long43 == 86400000L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str7 = properties5.getProperty("{}");
        java.util.Properties properties8 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        java.lang.Object obj12 = properties8.put((java.lang.Object) atomikosProperties9, (java.lang.Object) 0L);
        java.util.Properties properties13 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount((-1));
        atomikosProperties25.setAllowSubTransactions(false);
        boolean boolean30 = properties19.containsValue((java.lang.Object) false);
        boolean boolean31 = properties13.contains((java.lang.Object) properties19);
        java.util.Properties properties32 = new java.util.Properties(properties19);
        boolean boolean33 = properties5.containsKey((java.lang.Object) properties19);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.keys();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean41 = properties39.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties46.getConsoleLogLevel();
        java.lang.Object obj52 = properties39.putIfAbsent((java.lang.Object) atomikosProperties42, (java.lang.Object) atomikosLoggingLevel51);
        java.util.Collection<java.lang.Object> objCollection53 = properties39.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int55 = recovery54.getMaxRetries();
        recovery54.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long58 = recovery54.getDelay();
        boolean boolean59 = properties39.contains((java.lang.Object) recovery54);
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties61 = new java.util.Properties(properties39);
        boolean boolean62 = properties39.isEmpty();
        java.util.Collection<java.lang.Object> objCollection63 = properties39.values();
        boolean boolean64 = properties19.equals((java.lang.Object) objCollection63);
        java.io.PrintStream printStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setSerialJtaTransactions(true);
        atomikosProperties4.setCheckpointInterval(10000L);
        int int17 = atomikosProperties4.getConsoleFileLimit();
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        atomikosProperties4.setForceShutdownOnVmExit(false);
        atomikosProperties4.setLogBaseName("{false=500}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.String str2 = properties0.toString();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.lang.Object obj12 = properties4.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties7);
        boolean boolean13 = atomikosProperties7.isForceShutdownOnVmExit();
        atomikosProperties7.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties7.getService();
        boolean boolean17 = atomikosProperties7.isEnableLogging();
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Enumeration<?> wildcardEnumeration19 = properties18.propertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.Object obj30 = properties23.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setConsoleFileCount((-1));
        java.lang.String str35 = atomikosProperties32.getOutputDir();
        atomikosProperties32.setLogBaseName("tm.out");
        boolean boolean38 = properties23.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount(100);
        atomikosProperties39.setAllowSubTransactions(true);
        java.lang.Object obj44 = properties23.remove((java.lang.Object) atomikosProperties39);
        atomikosProperties39.setAllowSubTransactions(false);
        int int47 = atomikosProperties39.getConsoleFileCount();
        atomikosProperties39.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        java.lang.Object obj51 = properties0.replace((java.lang.Object) properties18, (java.lang.Object) properties50);
        properties50.clear();
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{}" + "'", str2, "{}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        boolean boolean16 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setSerialJtaTransactions(false);
        java.lang.String str19 = atomikosProperties4.getService();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileCount(10);
        atomikosProperties0.setConsoleFileCount(50);
        java.lang.String str10 = atomikosProperties0.getService();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        int int12 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileCount(20);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties0.values();
        java.util.Set<java.lang.String> strSet16 = properties0.stringPropertyNames();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.lang.String str19 = properties0.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        properties0.clear();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream21, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        boolean boolean11 = properties1.isEmpty();
        int int12 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long14 = recovery13.getForgetOrphanedLogEntriesDelay();
        recovery13.setDelay((long) (short) 1);
        long long17 = recovery13.getRetryInterval();
        long long18 = recovery13.getForgetOrphanedLogEntriesDelay();
        boolean boolean19 = properties1.containsKey((java.lang.Object) recovery13);
        java.util.Enumeration<?> wildcardEnumeration20 = properties1.propertyNames();
        java.lang.String str21 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int23 = recovery22.getMaxRetries();
        long long24 = recovery22.getDelay();
        java.lang.Object obj25 = properties1.remove((java.lang.Object) long24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        long long28 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties29 = atomikosProperties26.asProperties();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        int int32 = properties31.size();
        boolean boolean33 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties31.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount((-1));
        java.lang.String str39 = atomikosProperties36.getOutputDir();
        atomikosProperties36.setLogBaseName("tm.out");
        atomikosProperties36.setLogBaseDir("tm.out");
        int int44 = atomikosProperties36.getMaxActives();
        atomikosProperties36.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean47 = properties29.replace((java.lang.Object) objSet34, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount((-1));
        java.lang.String str51 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setLogBaseName("tm.out");
        atomikosProperties48.setLogBaseDir("tm.out");
        java.lang.String str56 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setDefaultJtaTimeout(10L);
        java.util.Properties properties59 = atomikosProperties48.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = atomikosProperties48.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = atomikosProperties48.getRecovery();
        java.lang.Object obj62 = properties29.remove((java.lang.Object) recovery61);
        recovery61.setForgetOrphanedLogEntriesDelay((long) '#');
        boolean boolean65 = properties1.equals((java.lang.Object) recovery61);
        recovery61.setDelay(2L);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 86400000L + "'", long18 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{=hi!}" + "'", str21, "{=hi!}");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tm.out" + "'", str56, "tm.out");
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(recovery60);
        org.junit.Assert.assertNotNull(recovery61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getMaxActives();
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        java.lang.String str12 = atomikosProperties10.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties13.getConsoleLogLevel();
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.lang.String str19 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) -1);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setSerialJtaTransactions(true);
        java.util.Properties properties27 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount((-1));
        java.lang.String str31 = atomikosProperties28.getOutputDir();
        atomikosProperties28.setLogBaseName("tm.out");
        atomikosProperties28.setLogBaseDir("tm.out");
        java.lang.String str36 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setDefaultJtaTimeout(10L);
        java.util.Properties properties39 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties28.getRecovery();
        recovery40.setMaxRetries((int) (short) 100);
        long long43 = recovery40.getForgetOrphanedLogEntriesDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        atomikosProperties44.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties49.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties44.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties44.setLogBaseName("");
        atomikosProperties44.setDefaultJtaTimeout(5L);
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean66 = properties9.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) long43, (java.lang.Object) atomikosProperties44);
        atomikosProperties10.setDefaultJtaTimeout((long) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 86400000L + "'", long43 == 86400000L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setCheckpointInterval((long) 1);
        boolean boolean14 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties6.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        long long11 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.setEnableLogging(false);
        int int14 = atomikosProperties7.getMaxActives();
        boolean boolean15 = atomikosProperties7.isAllowSubTransactions();
        boolean boolean16 = properties1.containsKey((java.lang.Object) boolean15);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getConsoleFileName();
        java.util.Properties properties7 = atomikosProperties1.asProperties();
        atomikosProperties1.setConsoleFileName("tm.out");
        atomikosProperties1.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties1.getConsoleLogLevel();
        atomikosProperties1.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        long long7 = atomikosProperties0.getCheckpointInterval();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        atomikosProperties19.setCheckpointInterval((long) (short) -1);
        java.lang.String str32 = atomikosProperties19.getTransactionManagerUniqueName();
        java.util.Properties properties33 = atomikosProperties19.asProperties();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.lang.Object obj44 = properties36.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties39);
        boolean boolean45 = atomikosProperties39.isForceShutdownOnVmExit();
        atomikosProperties39.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties39.getService();
        boolean boolean49 = atomikosProperties39.isEnableLogging();
        long long50 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getConsoleFileName();
        atomikosProperties55.setOutputDir("hi!");
        int int59 = atomikosProperties55.getConsoleFileLimit();
        java.lang.Object obj60 = properties52.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties55);
        boolean boolean61 = atomikosProperties55.isForceShutdownOnVmExit();
        atomikosProperties55.setOutputDir("tm.out");
        java.lang.Object obj64 = properties34.replace((java.lang.Object) atomikosProperties39, (java.lang.Object) "tm.out");
        atomikosProperties39.setLogBaseDir("");
        int int67 = atomikosProperties39.getConsoleFileLimit();
        long long68 = atomikosProperties39.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setConsoleFileCount((-1));
        java.lang.String str72 = atomikosProperties69.getOutputDir();
        atomikosProperties69.setLogBaseName("tm.out");
        atomikosProperties69.setLogBaseDir("tm.out");
        int int77 = atomikosProperties69.getMaxActives();
        java.lang.String str78 = atomikosProperties69.getService();
        atomikosProperties69.setConsoleFileLimit((int) ' ');
        java.util.Properties properties81 = atomikosProperties69.asProperties();
        boolean boolean82 = properties33.remove((java.lang.Object) long68, (java.lang.Object) atomikosProperties69);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tm.out" + "'", str56, "tm.out");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10000L + "'", long68 == 10000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties0.clone();
        java.util.Set<java.lang.Object> objSet7 = properties0.keySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount(100);
        int int12 = atomikosProperties9.getConsoleFileCount();
        atomikosProperties9.setOutputDir("");
        java.lang.String str15 = atomikosProperties9.getConsoleFileName();
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        atomikosProperties18.setConsoleFileName("");
        atomikosProperties18.setDefaultJtaTimeout((long) '4');
        java.lang.Object obj25 = properties8.replace((java.lang.Object) properties17, (java.lang.Object) atomikosProperties18);
        java.util.Properties properties26 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        atomikosProperties27.setLogBaseDir("tm.out");
        java.lang.String str35 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.setDefaultJtaTimeout(10L);
        atomikosProperties27.setLogBaseDir("");
        atomikosProperties27.setDefaultJtaTimeout((long) (short) 100);
        java.util.Properties properties42 = atomikosProperties27.asProperties();
        java.lang.String str44 = properties42.getProperty("");
        boolean boolean45 = properties8.containsKey((java.lang.Object) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount(100);
        int int49 = atomikosProperties46.getConsoleFileCount();
        atomikosProperties46.setOutputDir("");
        java.lang.String str52 = atomikosProperties46.getConsoleFileName();
        int int53 = atomikosProperties46.getConsoleFileCount();
        boolean boolean54 = atomikosProperties46.isEnableLogging();
        java.lang.String str55 = atomikosProperties46.getOutputDir();
        java.util.Properties properties56 = atomikosProperties46.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount((-1));
        atomikosProperties57.setTransactionManagerUniqueName("tm.out");
        atomikosProperties57.setLogBaseName("tm.out");
        java.lang.Object obj64 = properties42.replace((java.lang.Object) properties56, (java.lang.Object) "tm.out");
        java.util.Properties properties65 = new java.util.Properties(properties42);
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties(properties66);
        int int68 = properties67.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties67.entrySet();
        java.util.Set<java.lang.Object> objSet70 = properties67.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery71.setDelay((long) 5);
        recovery71.setMaxRetries((-1));
        long long76 = recovery71.getRetryInterval();
        long long77 = recovery71.getForgetOrphanedLogEntriesDelay();
        recovery71.setRetryInterval(0L);
        java.lang.Object obj80 = properties65.putIfAbsent((java.lang.Object) properties67, (java.lang.Object) recovery71);
        java.util.Set<java.lang.String> strSet81 = properties65.stringPropertyNames();
        java.lang.String str83 = properties65.getProperty("{10=10.0, {com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 86400000L + "'", long77 == 86400000L);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        int int8 = properties7.size();
        boolean boolean9 = properties7.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Properties properties11 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.lang.String str18 = atomikosProperties12.getService();
        atomikosProperties12.setService("hi!");
        atomikosProperties12.setForceShutdownOnVmExit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties25 = atomikosProperties12.asProperties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long31 = recovery30.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass32 = recovery30.getClass();
        boolean boolean33 = properties28.containsKey((java.lang.Object) wildcardClass32);
        boolean boolean34 = properties7.replace((java.lang.Object) properties25, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass32);
        java.util.Properties properties35 = new java.util.Properties(properties25);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        java.lang.Object obj45 = properties37.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties40.getService();
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        boolean boolean51 = properties1.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount((-1));
        java.lang.String str55 = atomikosProperties52.getOutputDir();
        java.lang.Class<?> wildcardClass56 = atomikosProperties52.getClass();
        java.lang.Object obj57 = null;
        java.lang.Object obj58 = properties25.getOrDefault((java.lang.Object) atomikosProperties52, obj57);
        java.lang.Object obj61 = properties25.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 86400000L + "'", long31 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties4.getConsoleLogLevel();
        java.lang.String str11 = atomikosProperties4.getTransactionManagerUniqueName();
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        long long15 = atomikosProperties4.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setDefaultJtaTimeout(10L);
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{hi!=}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(recovery19);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties1.equals((java.lang.Object) properties23);
        int int26 = properties1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        boolean boolean24 = properties9.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount(100);
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setAllowSubTransactions(false);
        int int33 = atomikosProperties25.getConsoleFileCount();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setCheckpointInterval((long) (short) -1);
        java.lang.String str38 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties25.getConsoleLogLevel();
        boolean boolean42 = properties3.equals((java.lang.Object) atomikosLoggingLevel41);
        java.util.Properties properties43 = new java.util.Properties(properties3);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties15 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.Object obj19 = properties15.put((java.lang.Object) atomikosProperties16, (java.lang.Object) 0L);
        java.util.Properties properties20 = new java.util.Properties(properties15);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties0);
        java.lang.Object obj26 = properties23.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.util.Properties properties27 = new java.util.Properties(properties23);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        java.lang.String str14 = properties13.toString();
        int int15 = properties13.size();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        int int19 = properties18.size();
        boolean boolean20 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        recovery24.setDelay((long) (short) 1);
        long long28 = recovery24.getRetryInterval();
        long long29 = recovery24.getForgetOrphanedLogEntriesDelay();
        int int30 = recovery24.getMaxRetries();
        recovery24.setRetryInterval((long) '4');
        long long33 = recovery24.getRetryInterval();
        int int34 = recovery24.getMaxRetries();
        boolean boolean35 = properties22.equals((java.lang.Object) int34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount((-1));
        java.lang.String str39 = atomikosProperties36.getOutputDir();
        atomikosProperties36.setLogBaseName("tm.out");
        atomikosProperties36.setForceShutdownOnVmExit(true);
        int int44 = atomikosProperties36.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = atomikosProperties36.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount(100);
        atomikosProperties46.setAllowSubTransactions(true);
        atomikosProperties46.setMaxTimeout((long) '4');
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        boolean boolean54 = atomikosProperties46.isForceShutdownOnVmExit();
        atomikosProperties46.setLogBaseDir("tm.out");
        java.util.Properties properties57 = atomikosProperties46.asProperties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties22.remove((java.lang.Object) atomikosProperties36, (java.lang.Object) properties58);
        java.lang.Object obj60 = properties13.get((java.lang.Object) boolean59);
        java.util.Enumeration<?> wildcardEnumeration61 = properties13.propertyNames();
        java.io.InputStream inputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.loadFromXML(inputStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 19 + "'", int15 == 19);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 86400000L + "'", long29 == 86400000L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 52L + "'", long33 == 52L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(recovery45);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(wildcardEnumeration61);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties83 = atomikosProperties49.asProperties();
        long long84 = atomikosProperties49.getCheckpointInterval();
        long long85 = atomikosProperties49.getMaxTimeout();
        boolean boolean86 = atomikosProperties49.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 500L + "'", long84 == 500L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getRetryInterval();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) '4');
        long long9 = recovery0.getRetryInterval();
        int int10 = recovery0.getMaxRetries();
        long long11 = recovery0.getDelay();
        long long12 = recovery0.getDelay();
        recovery0.setRetryInterval((long) 'a');
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        recovery4.setMaxRetries((int) (short) 0);
        recovery4.setRetryInterval((long) (short) 0);
        recovery4.setDelay(1L);
        recovery4.setForgetOrphanedLogEntriesDelay(5L);
        recovery4.setRetryInterval((long) '#');
        int int15 = recovery4.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        java.util.Properties properties12 = new java.util.Properties(properties0);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties16.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet22 = properties16.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj30 = properties12.put((java.lang.Object) properties16, (java.lang.Object) properties27);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        boolean boolean38 = properties32.equals((java.lang.Object) (-1.0d));
        java.util.Properties properties39 = new java.util.Properties(properties32);
        java.lang.Object obj40 = properties12.remove((java.lang.Object) properties39);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int9 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        int int11 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        boolean boolean19 = atomikosProperties13.isForceShutdownOnVmExit();
        atomikosProperties13.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties13.getService();
        java.util.Properties properties23 = atomikosProperties13.asProperties();
        java.lang.Object obj24 = null;
        boolean boolean25 = properties23.equals(obj24);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean29 = properties27.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getTransactionManagerUniqueName();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties34.getConsoleLogLevel();
        java.lang.Object obj40 = properties27.putIfAbsent((java.lang.Object) atomikosProperties30, (java.lang.Object) atomikosLoggingLevel39);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery41.setRetryInterval((long) (byte) 10);
        int int44 = recovery41.getMaxRetries();
        recovery41.setDelay(10L);
        recovery41.setRetryInterval((long) (short) 10);
        java.lang.Object obj49 = properties23.replace((java.lang.Object) atomikosLoggingLevel39, (java.lang.Object) recovery41);
        long long50 = recovery41.getDelay();
        long long51 = recovery41.getForgetOrphanedLogEntriesDelay();
        recovery41.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.lang.Object obj64 = properties57.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setConsoleFileCount((-1));
        java.lang.String str69 = atomikosProperties66.getOutputDir();
        atomikosProperties66.setLogBaseName("tm.out");
        boolean boolean72 = properties57.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setConsoleFileCount(100);
        atomikosProperties73.setAllowSubTransactions(true);
        java.lang.Object obj78 = properties57.remove((java.lang.Object) atomikosProperties73);
        java.util.Properties properties79 = new java.util.Properties(properties57);
        java.lang.String str81 = properties79.getProperty("");
        java.util.Set<java.lang.Object> objSet82 = properties79.keySet();
        java.util.Set<java.lang.String> strSet83 = properties79.stringPropertyNames();
        java.util.Properties properties84 = new java.util.Properties(properties79);
        int int85 = properties84.size();
        java.lang.Object obj86 = properties0.putIfAbsent((java.lang.Object) recovery41, (java.lang.Object) properties84);
        java.util.Collection<java.lang.Object> objCollection87 = properties84.values();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10L + "'", long50 == 10L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 86400000L + "'", long51 == 86400000L);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objCollection87);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        atomikosProperties6.setMaxActives((-1));
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel30);
        long long33 = atomikosProperties6.getDefaultJtaTimeout();
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.lang.String str36 = atomikosProperties6.getOutputDir();
        long long37 = atomikosProperties6.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties8.setMaxTimeout(1L);
        java.lang.Object obj13 = properties6.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery14.setRetryInterval((long) (byte) 10);
        int int17 = recovery14.getMaxRetries();
        recovery14.setDelay(10L);
        long long20 = recovery14.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj21 = properties6.remove((java.lang.Object) long20);
        java.util.Collection<java.lang.Object> objCollection22 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties6.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setAllowSubTransactions(true);
        boolean boolean29 = atomikosProperties24.isForceShutdownOnVmExit();
        int int30 = atomikosProperties24.getConsoleFileCount();
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties24.getRecovery();
        boolean boolean33 = properties6.containsValue((java.lang.Object) atomikosProperties24);
        java.lang.String str34 = properties6.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 86400000L + "'", long20 == 86400000L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        int int27 = atomikosProperties14.getConsoleFileLimit();
        boolean boolean28 = atomikosProperties14.isForceShutdownOnVmExit();
        java.lang.String str29 = atomikosProperties14.getConsoleFileName();
        java.util.Properties properties30 = atomikosProperties14.asProperties();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties8.setMaxTimeout(1L);
        java.lang.Object obj13 = properties6.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties8);
        long long14 = atomikosProperties8.getCheckpointInterval();
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties8.getRecovery();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(writer18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties7.keys();
        boolean boolean46 = properties7.equals((java.lang.Object) 0.0d);
        java.util.Properties properties47 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection48 = properties7.values();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection48);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str14 = atomikosProperties0.getService();
        boolean boolean15 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        int int8 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        atomikosProperties4.setOutputDir("hi!");
        atomikosProperties4.setConsoleFileLimit((int) '#');
        atomikosProperties4.setEnableLogging(true);
        boolean boolean22 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setMaxActives((int) (short) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) (byte) 10);
        recovery0.setRetryInterval((long) 100);
        int int5 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (byte) 100);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int3 = recovery2.getMaxRetries();
        recovery2.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        java.lang.Object obj6 = properties1.get((java.lang.Object) (short) -1);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.lang.Object obj16 = properties8.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties11);
        atomikosProperties11.setLogBaseName("tm.out");
        atomikosProperties11.setForceShutdownOnVmExit(false);
        int int21 = atomikosProperties11.getMaxActives();
        java.lang.Object obj22 = properties1.remove((java.lang.Object) int21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        int int25 = properties24.size();
        boolean boolean26 = properties24.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        boolean boolean32 = properties30.isEmpty();
        boolean boolean33 = properties24.containsValue((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.keys();
        boolean boolean38 = properties24.containsKey((java.lang.Object) objEnumeration37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration49 = properties46.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount(100);
        atomikosProperties50.setAllowSubTransactions(true);
        boolean boolean55 = atomikosProperties50.isForceShutdownOnVmExit();
        atomikosProperties50.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties50.setConsoleLogLevel(atomikosLoggingLevel60);
        boolean boolean62 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties63 = atomikosProperties50.asProperties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        properties71.clear();
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        boolean boolean75 = properties69.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj76 = properties64.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getConsoleFileName();
        atomikosProperties77.setOutputDir("hi!");
        int int81 = atomikosProperties77.getConsoleFileLimit();
        java.util.Properties properties82 = atomikosProperties77.asProperties();
        java.lang.String str83 = atomikosProperties77.getService();
        atomikosProperties77.setService("hi!");
        atomikosProperties77.setThreadedTwoPhaseCommit(false);
        atomikosProperties77.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties77.setTransactionManagerUniqueName("");
        boolean boolean92 = properties64.containsValue((java.lang.Object) "");
        java.util.Properties properties93 = new java.util.Properties(properties64);
        boolean boolean94 = properties63.equals((java.lang.Object) properties93);
        java.lang.Object obj95 = properties24.replace((java.lang.Object) properties46, (java.lang.Object) boolean94);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.lang.String> strSet97 = properties24.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration98 = properties24.keys();
        java.lang.Object obj99 = properties24.clone();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(strSet97);
        org.junit.Assert.assertNotNull(objEnumeration98);
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "{}");
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) (byte) 10);
        long long3 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setDelay(300000L);
        long long8 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) ' ');
        recovery0.setMaxRetries((int) '#');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        recovery0.setDelay((long) (byte) 0);
        recovery0.setMaxRetries(10);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        int int33 = properties32.size();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties32.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.lang.String str42 = atomikosProperties36.getService();
        int int43 = atomikosProperties36.getMaxActives();
        boolean boolean44 = properties32.equals((java.lang.Object) atomikosProperties36);
        int int45 = atomikosProperties36.getConsoleFileCount();
        java.util.Properties properties46 = atomikosProperties36.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<?> wildcardEnumeration48 = properties46.propertyNames();
        java.util.Properties properties49 = new java.util.Properties(properties46);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setConsoleFileCount((-1));
        java.lang.String str54 = atomikosProperties51.getOutputDir();
        atomikosProperties51.setLogBaseName("tm.out");
        atomikosProperties51.setLogBaseDir("tm.out");
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean61 = properties49.containsKey((java.lang.Object) false);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties49.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        boolean boolean66 = properties64.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str68 = atomikosProperties67.getTransactionManagerUniqueName();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str72 = atomikosProperties71.getConsoleFileName();
        atomikosProperties71.setOutputDir("hi!");
        int int75 = atomikosProperties71.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = atomikosProperties71.getConsoleLogLevel();
        java.lang.Object obj77 = properties64.putIfAbsent((java.lang.Object) atomikosProperties67, (java.lang.Object) atomikosLoggingLevel76);
        java.util.Collection<java.lang.Object> objCollection78 = properties64.values();
        java.util.Properties properties79 = new java.util.Properties();
        java.util.Properties properties80 = new java.util.Properties(properties79);
        properties80.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str84 = atomikosProperties83.getConsoleFileName();
        atomikosProperties83.setOutputDir("hi!");
        int int87 = atomikosProperties83.getConsoleFileLimit();
        java.lang.Object obj88 = properties80.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties83);
        boolean boolean89 = properties64.equals((java.lang.Object) properties80);
        java.lang.Object obj90 = properties49.remove((java.lang.Object) properties64);
        java.util.Properties properties91 = new java.util.Properties(properties64);
        boolean boolean92 = properties64.isEmpty();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel76 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel76.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objCollection78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tm.out" + "'", str84, "tm.out");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setCheckpointInterval(52L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        atomikosProperties27.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = atomikosProperties27.getRecovery();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection41 = properties40.values();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj50 = properties43.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount((-1));
        java.lang.String str55 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setLogBaseName("tm.out");
        boolean boolean58 = properties43.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setConsoleFileCount(100);
        atomikosProperties59.setAllowSubTransactions(true);
        java.lang.Object obj64 = properties43.remove((java.lang.Object) atomikosProperties59);
        java.lang.String str65 = atomikosProperties59.getLogBaseDir();
        java.lang.Class<?> wildcardClass66 = atomikosProperties59.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setConsoleFileLimit((int) (byte) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = atomikosProperties67.getConsoleLogLevel();
        java.lang.Object obj71 = properties39.put((java.lang.Object) wildcardClass66, (java.lang.Object) atomikosLoggingLevel70);
        atomikosProperties14.setConsoleLogLevel(atomikosLoggingLevel70);
        boolean boolean73 = atomikosProperties14.isThreadedTwoPhaseCommit();
        long long74 = atomikosProperties14.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10000L + "'", long74 == 10000L);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties8 = atomikosProperties1.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        java.util.Set<java.lang.Object> objSet34 = properties12.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties12.keySet();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection37 = properties36.values();
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.keys();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj48 = properties41.setProperty("", "hi!");
        java.lang.Object obj49 = properties36.remove((java.lang.Object) "");
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection51 = properties50.values();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties(properties54);
        properties55.clear();
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.lang.Object obj60 = properties53.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setConsoleFileCount((-1));
        java.lang.String str65 = atomikosProperties62.getOutputDir();
        atomikosProperties62.setLogBaseName("tm.out");
        boolean boolean68 = properties53.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setConsoleFileCount(100);
        atomikosProperties69.setAllowSubTransactions(true);
        java.lang.Object obj74 = properties53.remove((java.lang.Object) atomikosProperties69);
        java.util.Properties properties75 = new java.util.Properties(properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str77 = atomikosProperties76.getConsoleFileName();
        atomikosProperties76.setOutputDir("hi!");
        int int80 = atomikosProperties76.getConsoleFileLimit();
        java.lang.String str81 = atomikosProperties76.getService();
        java.lang.String str82 = atomikosProperties76.getOutputDir();
        atomikosProperties76.setOutputDir("tmlog");
        long long85 = atomikosProperties76.getMaxTimeout();
        boolean boolean86 = properties75.contains((java.lang.Object) atomikosProperties76);
        java.util.Properties properties87 = new java.util.Properties(properties75);
        java.lang.Object obj88 = properties12.replace((java.lang.Object) properties36, (java.lang.Object) properties87);
        boolean boolean89 = properties8.containsKey((java.lang.Object) properties36);
        java.io.PrintWriter printWriter90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.list(printWriter90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tm.out" + "'", str77, "tm.out");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        boolean boolean15 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setService("");
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties4.getOutputDir();
        java.util.Properties properties21 = atomikosProperties4.asProperties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Set<java.lang.String> strSet24 = properties23.stringPropertyNames();
        java.lang.Object obj25 = properties21.get((java.lang.Object) strSet24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties21.entrySet();
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.load(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEntrySet26);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.lang.String str12 = atomikosProperties6.getService();
        atomikosProperties6.setService("hi!");
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass26 = recovery24.getClass();
        boolean boolean27 = properties22.containsKey((java.lang.Object) wildcardClass26);
        boolean boolean28 = properties1.replace((java.lang.Object) properties19, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass26);
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        properties31.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.lang.Object obj39 = properties31.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setLogBaseName("tm.out");
        long long42 = atomikosProperties34.getDefaultJtaTimeout();
        atomikosProperties34.setAllowSubTransactions(false);
        int int45 = atomikosProperties34.getMaxActives();
        boolean boolean46 = atomikosProperties34.isAllowSubTransactions();
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties49 = atomikosProperties34.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.io.Reader reader51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(reader51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties49);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        boolean boolean12 = atomikosProperties4.isForceShutdownOnVmExit();
        boolean boolean13 = atomikosProperties4.isForceShutdownOnVmExit();
        boolean boolean14 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setConsoleFileLimit((int) '4');
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties4.getConsoleLogLevel();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        java.lang.Object obj15 = null;
        boolean boolean16 = properties14.equals(obj15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.setRetryInterval((long) (byte) 10);
        int int35 = recovery32.getMaxRetries();
        recovery32.setDelay(10L);
        recovery32.setRetryInterval((long) (short) 10);
        java.lang.Object obj40 = properties14.replace((java.lang.Object) atomikosLoggingLevel30, (java.lang.Object) recovery32);
        java.util.Properties properties41 = new java.util.Properties(properties14);
        java.util.Properties properties42 = new java.util.Properties(properties14);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.lang.String str32 = properties29.getProperty("");
        boolean boolean33 = properties3.equals((java.lang.Object) "");
        java.util.Properties properties34 = new java.util.Properties(properties3);
        java.util.Properties properties35 = new java.util.Properties(properties3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Properties properties11 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        java.lang.Object obj15 = properties11.put((java.lang.Object) atomikosProperties12, (java.lang.Object) 0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        atomikosProperties12.setConsoleFileLimit((int) ' ');
        java.lang.String str20 = atomikosProperties12.getTransactionManagerUniqueName();
        java.util.Properties properties21 = atomikosProperties12.asProperties();
        java.lang.String str22 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setOutputDir("hi!");
        int int27 = atomikosProperties23.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties23.setMaxTimeout(0L);
        boolean boolean33 = properties21.contains((java.lang.Object) 0L);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.Object obj43 = properties35.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties38);
        boolean boolean44 = atomikosProperties38.isForceShutdownOnVmExit();
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str47 = atomikosProperties38.getService();
        java.util.Properties properties48 = atomikosProperties38.asProperties();
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj51 = properties1.putIfAbsent((java.lang.Object) boolean33, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties1.keys();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str22, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        java.lang.Object obj8 = properties4.put((java.lang.Object) atomikosProperties5, (java.lang.Object) 0L);
        long long9 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str10 = atomikosProperties5.getConsoleFileName();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        java.lang.Object obj13 = properties1.get((java.lang.Object) boolean12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties1.keys();
        java.util.Properties properties15 = new java.util.Properties(properties1);
        java.io.PrintStream printStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.util.Set<java.lang.String> strSet35 = properties22.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties22);
        java.util.Set<java.lang.String> strSet37 = properties22.stringPropertyNames();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        java.lang.String str15 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setCheckpointInterval(52L);
        boolean boolean18 = atomikosProperties4.isSerialJtaTransactions();
        int int19 = atomikosProperties4.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        boolean boolean13 = properties11.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        properties19.clear();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.lang.Object obj24 = properties17.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean29 = properties27.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties27.entrySet();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj42 = properties35.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        boolean boolean50 = properties35.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setConsoleFileCount(100);
        atomikosProperties51.setAllowSubTransactions(true);
        java.lang.Object obj56 = properties35.remove((java.lang.Object) atomikosProperties51);
        java.util.Set<java.lang.Object> objSet57 = properties35.keySet();
        boolean boolean58 = properties11.replace((java.lang.Object) properties17, (java.lang.Object) objEntrySet31, (java.lang.Object) properties35);
        java.lang.String str60 = properties17.getProperty("{}");
        java.util.Properties properties61 = new java.util.Properties(properties17);
        boolean boolean62 = properties8.equals((java.lang.Object) properties17);
        java.util.Set<java.lang.String> strSet63 = properties17.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setConsoleFileCount((-1));
        atomikosProperties64.setAllowSubTransactions(false);
        java.util.Properties properties69 = atomikosProperties64.asProperties();
        java.util.Enumeration<?> wildcardEnumeration70 = properties69.propertyNames();
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str76 = atomikosProperties75.getConsoleFileName();
        atomikosProperties75.setOutputDir("hi!");
        int int79 = atomikosProperties75.getConsoleFileLimit();
        java.lang.Object obj80 = properties72.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties75);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = atomikosProperties75.getConsoleLogLevel();
        java.lang.String str82 = atomikosProperties75.getTransactionManagerUniqueName();
        boolean boolean83 = atomikosProperties75.isThreadedTwoPhaseCommit();
        boolean boolean84 = properties17.remove((java.lang.Object) wildcardEnumeration70, (java.lang.Object) boolean83);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties17.keys();
        java.lang.String str87 = properties17.getProperty("{false=500}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tm.out" + "'", str76, "tm.out");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration6 = properties5.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties14.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        java.lang.String str26 = atomikosProperties23.getOutputDir();
        atomikosProperties23.setLogBaseName("tm.out");
        boolean boolean29 = properties14.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount(100);
        atomikosProperties30.setAllowSubTransactions(true);
        java.lang.Object obj35 = properties14.remove((java.lang.Object) atomikosProperties30);
        java.util.Set<java.lang.Object> objSet36 = properties14.keySet();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj43 = properties14.get((java.lang.Object) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        atomikosProperties44.setAllowSubTransactions(false);
        boolean boolean49 = properties14.contains((java.lang.Object) false);
        java.util.Properties properties50 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        java.lang.Object obj54 = properties50.put((java.lang.Object) atomikosProperties51, (java.lang.Object) 0L);
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        properties56.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setOutputDir("hi!");
        int int63 = atomikosProperties59.getConsoleFileLimit();
        java.lang.Object obj64 = properties56.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties59);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties56.entrySet();
        java.util.Properties properties66 = new java.util.Properties(properties56);
        boolean boolean67 = properties14.remove((java.lang.Object) 0L, (java.lang.Object) properties56);
        java.lang.Object obj70 = properties56.setProperty("tm.out", "");
        java.lang.Object obj71 = properties5.getOrDefault((java.lang.Object) properties7, (java.lang.Object) "");
        java.lang.String str72 = properties5.toString();
        java.io.PrintStream printStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printStream73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str72, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.lang.Object obj22 = properties15.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount((-1));
        java.lang.String str27 = atomikosProperties24.getOutputDir();
        atomikosProperties24.setLogBaseName("tm.out");
        boolean boolean30 = properties15.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        java.lang.Object obj36 = properties15.remove((java.lang.Object) atomikosProperties31);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        java.lang.Object obj46 = properties38.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties38.entrySet();
        boolean boolean48 = properties15.containsValue((java.lang.Object) properties38);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        java.util.Collection<java.lang.Object> objCollection50 = properties38.values();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean55 = properties53.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties53.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties60.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties(properties63);
        int int65 = properties64.size();
        boolean boolean66 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties64.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        java.util.Properties properties73 = atomikosProperties68.asProperties();
        java.lang.String str74 = atomikosProperties68.getService();
        int int75 = atomikosProperties68.getMaxActives();
        boolean boolean76 = properties64.equals((java.lang.Object) atomikosProperties68);
        java.lang.Object obj77 = properties53.putIfAbsent((java.lang.Object) objEntrySet62, (java.lang.Object) boolean76);
        boolean boolean78 = properties38.contains((java.lang.Object) objEntrySet62);
        java.lang.String str79 = properties38.toString();
        java.util.Collection<java.lang.Object> objCollection80 = properties38.values();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objCollection80);
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileCount(10);
        atomikosProperties0.setConsoleFileCount(50);
        java.lang.String str10 = atomikosProperties0.getService();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = properties11.toString();
        java.lang.String str15 = properties11.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=50, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=50, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setOutputDir("{10=10.0}");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties4.getConsoleLogLevel();
        java.lang.String str11 = atomikosProperties4.getTransactionManagerUniqueName();
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        long long13 = atomikosProperties4.getCheckpointInterval();
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties4.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties4.getRecovery();
        recovery12.setForgetOrphanedLogEntriesDelay((long) ' ');
        long long15 = recovery12.getRetryInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        boolean boolean15 = properties13.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.Object obj26 = properties19.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean31 = properties29.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        boolean boolean52 = properties37.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount(100);
        atomikosProperties53.setAllowSubTransactions(true);
        java.lang.Object obj58 = properties37.remove((java.lang.Object) atomikosProperties53);
        java.util.Set<java.lang.Object> objSet59 = properties37.keySet();
        boolean boolean60 = properties13.replace((java.lang.Object) properties19, (java.lang.Object) objEntrySet33, (java.lang.Object) properties37);
        java.lang.String str62 = properties19.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount((-1));
        atomikosProperties63.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties70.getConsoleLogLevel();
        atomikosProperties68.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.Object obj77 = properties10.replace((java.lang.Object) properties19, (java.lang.Object) (byte) 0);
        java.util.Properties properties78 = new java.util.Properties(properties19);
        java.io.OutputStream outputStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(outputStream79, "{tm.out=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        int int34 = properties29.size();
        java.util.Set<java.lang.Object> objSet35 = properties29.keySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties40.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        boolean boolean55 = properties40.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setConsoleFileCount(100);
        atomikosProperties56.setAllowSubTransactions(true);
        java.lang.Object obj61 = properties40.remove((java.lang.Object) atomikosProperties56);
        java.util.Set<java.lang.Object> objSet62 = properties40.keySet();
        java.util.Properties properties63 = new java.util.Properties(properties40);
        java.lang.Object obj66 = properties40.setProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj67 = properties29.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        java.lang.String str70 = atomikosProperties68.getTransactionManagerUniqueName();
        atomikosProperties68.setCheckpointInterval((long) (byte) 0);
        atomikosProperties68.setConsoleFileName("hi!");
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        java.lang.String str76 = atomikosProperties68.getService();
        atomikosProperties68.setTransactionManagerUniqueName("{10=10.0}");
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setAllowSubTransactions(false);
        java.lang.String str83 = atomikosProperties68.getConsoleFileName();
        java.lang.String str84 = atomikosProperties68.getTransactionManagerUniqueName();
        boolean boolean85 = properties29.equals((java.lang.Object) str84);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", obj67, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{10=10.0}" + "'", str84, "{10=10.0}");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties(properties3);
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean40 = properties38.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getTransactionManagerUniqueName();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties45.getConsoleLogLevel();
        java.lang.Object obj51 = properties38.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) atomikosLoggingLevel50);
        java.util.Collection<java.lang.Object> objCollection52 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 100);
        java.util.Properties properties57 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        java.lang.Object obj61 = properties57.put((java.lang.Object) atomikosProperties58, (java.lang.Object) 0L);
        java.util.Properties properties62 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setConsoleFileCount(100);
        atomikosProperties63.setAllowSubTransactions(true);
        boolean boolean68 = atomikosProperties63.isForceShutdownOnVmExit();
        boolean boolean69 = properties62.contains((java.lang.Object) atomikosProperties63);
        java.util.Collection<java.lang.Object> objCollection70 = properties62.values();
        boolean boolean71 = properties15.replace((java.lang.Object) properties38, (java.lang.Object) (byte) 100, (java.lang.Object) objCollection70);
        java.util.Properties properties72 = new java.util.Properties(properties38);
        java.util.Properties properties73 = new java.util.Properties(properties38);
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties74.storeToXML(outputStream75, "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties0.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.Object obj12 = properties0.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties8);
        java.lang.Object obj15 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        properties8.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties8.keys();
        java.lang.Object obj20 = properties8.setProperty("{10=10.0, {com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        java.lang.Object obj24 = properties20.put((java.lang.Object) atomikosProperties21, (java.lang.Object) 0L);
        java.util.Properties properties25 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        atomikosProperties26.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj31 = properties20.remove((java.lang.Object) atomikosProperties26);
        boolean boolean32 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean37 = properties35.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties42.getConsoleLogLevel();
        java.lang.Object obj48 = properties35.putIfAbsent((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosLoggingLevel47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties49.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long56 = recovery55.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getConsoleFileName();
        atomikosProperties61.setOutputDir("hi!");
        int int65 = atomikosProperties61.getConsoleFileLimit();
        java.lang.Object obj66 = properties58.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties61.getConsoleLogLevel();
        java.lang.String str68 = atomikosProperties61.getTransactionManagerUniqueName();
        atomikosProperties61.setThreadedTwoPhaseCommit(false);
        boolean boolean71 = properties35.replace((java.lang.Object) atomikosProperties49, (java.lang.Object) recovery55, (java.lang.Object) false);
        java.lang.Object obj72 = properties15.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery73.setDelay((long) 5);
        recovery73.setMaxRetries((-1));
        int int78 = recovery73.getMaxRetries();
        java.lang.Object obj79 = properties35.get((java.lang.Object) int78);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery80 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery80.setRetryInterval((long) (byte) 10);
        int int83 = recovery80.getMaxRetries();
        recovery80.setDelay(10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery86 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long87 = recovery86.getForgetOrphanedLogEntriesDelay();
        recovery86.setDelay((long) (short) 1);
        long long90 = recovery86.getForgetOrphanedLogEntriesDelay();
        recovery86.setDelay((long) '4');
        int int93 = recovery86.getMaxRetries();
        recovery86.setMaxRetries(1);
        java.lang.Object obj96 = properties35.put((java.lang.Object) recovery80, (java.lang.Object) recovery86);
        long long97 = recovery86.getRetryInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 86400000L + "'", long87 == 86400000L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 86400000L + "'", long90 == 86400000L);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 5 + "'", int93 == 5);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 10000L + "'", long97 == 10000L);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getService();
        atomikosProperties1.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties1.setConsoleFileName("tm.out");
        atomikosProperties1.setMaxTimeout(10L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<?> wildcardEnumeration16 = properties13.propertyNames();
        java.util.Set<java.lang.Object> objSet17 = properties13.keySet();
        java.lang.Object obj18 = properties13.clone();
        boolean boolean19 = properties13.isEmpty();
        boolean boolean20 = properties1.containsValue((java.lang.Object) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties13.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties(properties23);
        java.lang.String str31 = properties23.getProperty("tmlog");
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.lang.Object obj41 = properties33.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setConsoleFileLimit((int) (short) 0);
        boolean boolean44 = properties23.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setOutputDir("{hi!=}");
        java.lang.String str47 = atomikosProperties36.getOutputDir();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{hi!=}" + "'", str47, "{hi!=}");
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str2 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        boolean boolean5 = atomikosProperties3.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties3.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        java.lang.Object obj13 = properties9.put((java.lang.Object) atomikosProperties10, (java.lang.Object) 0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties14.setForceShutdownOnVmExit(true);
        long long19 = atomikosProperties14.getMaxTimeout();
        boolean boolean20 = atomikosProperties14.isEnableLogging();
        boolean boolean21 = properties9.contains((java.lang.Object) boolean20);
        java.util.Properties properties22 = new java.util.Properties(properties9);
        java.lang.String str23 = properties9.toString();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        java.lang.Object obj33 = properties25.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setLogBaseName("tm.out");
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setEnableLogging(false);
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.String str44 = atomikosProperties28.getService();
        boolean boolean45 = properties8.remove((java.lang.Object) properties9, (java.lang.Object) atomikosProperties28);
        java.lang.String str46 = properties8.toString();
        java.lang.Object obj49 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{}" + "'", str46, "{}");
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setOutputDir("hi!");
        int int9 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        java.lang.String str11 = atomikosProperties5.getService();
        int int12 = atomikosProperties5.getMaxActives();
        boolean boolean13 = properties1.equals((java.lang.Object) atomikosProperties5);
        int int14 = atomikosProperties5.getConsoleFileCount();
        int int15 = atomikosProperties5.getConsoleFileCount();
        long long16 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.setEnableLogging(true);
        boolean boolean19 = atomikosProperties5.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setLogBaseDir("tm.out");
        java.util.Properties properties17 = atomikosProperties11.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties8.elements();
        java.util.Properties properties20 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long22 = recovery21.getForgetOrphanedLogEntriesDelay();
        recovery21.setDelay((long) (short) 1);
        recovery21.setRetryInterval(100L);
        recovery21.setMaxRetries((int) (byte) 100);
        int int29 = recovery21.getMaxRetries();
        recovery21.setDelay((long) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getConsoleFileName();
        atomikosProperties32.setOutputDir("hi!");
        int int36 = atomikosProperties32.getConsoleFileLimit();
        atomikosProperties32.setDefaultJtaTimeout(1L);
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setMaxActives(0);
        atomikosProperties32.setConsoleFileCount((int) 'a');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties32.getConsoleLogLevel();
        java.lang.Object obj46 = properties8.getOrDefault((java.lang.Object) 50, (java.lang.Object) atomikosLoggingLevel45);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        int int49 = properties48.size();
        boolean boolean50 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties48.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setOutputDir("hi!");
        int int56 = atomikosProperties52.getConsoleFileLimit();
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        java.lang.String str58 = atomikosProperties52.getService();
        int int59 = atomikosProperties52.getMaxActives();
        boolean boolean60 = properties48.equals((java.lang.Object) atomikosProperties52);
        int int61 = atomikosProperties52.getConsoleFileCount();
        java.util.Properties properties62 = atomikosProperties52.asProperties();
        java.util.Properties properties63 = new java.util.Properties(properties62);
        boolean boolean64 = properties8.contains((java.lang.Object) properties62);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 86400000L + "'", long22 == 86400000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", obj46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setConsoleFileCount(0);
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount((-1));
        java.lang.String str12 = atomikosProperties9.getOutputDir();
        atomikosProperties9.setLogBaseName("tm.out");
        atomikosProperties9.setLogBaseDir("tm.out");
        java.lang.String str17 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setDefaultJtaTimeout(10L);
        atomikosProperties9.setLogBaseDir("");
        atomikosProperties9.setDefaultJtaTimeout((long) (short) 100);
        int int24 = atomikosProperties9.getConsoleFileCount();
        atomikosProperties9.setConsoleFileLimit(1);
        java.lang.String str27 = atomikosProperties9.getConsoleFileName();
        java.util.Properties properties28 = atomikosProperties9.asProperties();
        java.lang.Object obj29 = properties8.remove((java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getTransactionManagerUniqueName();
        boolean boolean32 = atomikosProperties30.isForceShutdownOnVmExit();
        atomikosProperties30.setAllowSubTransactions(false);
        atomikosProperties30.setLogBaseName("");
        java.util.Properties properties37 = atomikosProperties30.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj48 = properties41.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount((-1));
        java.lang.String str53 = atomikosProperties50.getOutputDir();
        atomikosProperties50.setLogBaseName("tm.out");
        boolean boolean56 = properties41.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount(100);
        atomikosProperties57.setAllowSubTransactions(true);
        java.lang.Object obj62 = properties41.remove((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setAllowSubTransactions(false);
        long long65 = atomikosProperties57.getCheckpointInterval();
        boolean boolean66 = atomikosProperties57.isSerialJtaTransactions();
        boolean boolean67 = properties37.equals((java.lang.Object) atomikosProperties57);
        java.util.Properties properties68 = new java.util.Properties(properties37);
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.util.Properties properties71 = new java.util.Properties(properties8);
        java.io.Writer writer72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer72, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        long long3 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries((int) (byte) -1);
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay(2L);
        recovery0.setDelay((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 5L + "'", long3 == 5L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        atomikosProperties1.setOutputDir("hi!");
        int int5 = atomikosProperties1.getConsoleFileLimit();
        java.util.Properties properties6 = atomikosProperties1.asProperties();
        java.lang.String str7 = atomikosProperties1.getService();
        atomikosProperties1.setService("hi!");
        java.lang.Object obj11 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.elements();
        java.util.Properties properties13 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties13.entrySet();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet14);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount(100);
        atomikosProperties16.setAllowSubTransactions(true);
        java.lang.String str21 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setDefaultJtaTimeout((long) 0);
        boolean boolean24 = atomikosProperties16.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties16.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel25);
        java.lang.String str27 = atomikosProperties4.getLogBaseName();
        long long28 = atomikosProperties4.getMaxTimeout();
        boolean boolean29 = atomikosProperties4.isThreadedTwoPhaseCommit();
        atomikosProperties4.setConsoleFileCount(52);
        boolean boolean32 = atomikosProperties4.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        recovery0.setRetryInterval(100L);
        long long6 = recovery0.getRetryInterval();
        recovery0.setMaxRetries(0);
        int int9 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (short) -1);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        atomikosProperties4.setOutputDir("hi!");
        atomikosProperties4.setConsoleFileLimit((int) '#');
        atomikosProperties4.setEnableLogging(true);
        boolean boolean22 = atomikosProperties4.isEnableLogging();
        int int23 = atomikosProperties4.getConsoleFileCount();
        java.lang.String str24 = atomikosProperties4.getLogBaseDir();
        java.util.Properties properties25 = atomikosProperties4.asProperties();
        boolean boolean26 = atomikosProperties4.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties4.asProperties();
        boolean boolean28 = atomikosProperties4.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        int int5 = properties4.size();
        boolean boolean6 = properties4.isEmpty();
        java.lang.Object obj7 = properties0.remove((java.lang.Object) boolean6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj18 = properties11.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.lang.String str23 = atomikosProperties20.getOutputDir();
        atomikosProperties20.setLogBaseName("tm.out");
        boolean boolean26 = properties11.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount(100);
        atomikosProperties27.setAllowSubTransactions(true);
        java.lang.Object obj32 = properties11.remove((java.lang.Object) atomikosProperties27);
        boolean boolean33 = atomikosProperties27.isSerialJtaTransactions();
        int int34 = atomikosProperties27.getConsoleFileLimit();
        long long35 = atomikosProperties27.getMaxTimeout();
        java.lang.Object obj36 = properties0.get((java.lang.Object) atomikosProperties27);
        java.lang.String str37 = properties0.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        boolean boolean47 = properties45.isEmpty();
        boolean boolean48 = properties39.containsValue((java.lang.Object) boolean47);
        java.util.Properties properties49 = new java.util.Properties(properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount((-1));
        atomikosProperties52.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties59.getConsoleLogLevel();
        atomikosProperties57.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties52.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str66 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setConsoleFileLimit(50);
        atomikosProperties52.setForceShutdownOnVmExit(true);
        boolean boolean71 = properties51.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setRetryInterval(86400000L);
        long long8 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) -1);
        long long11 = recovery0.getDelay();
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries((int) (byte) 1);
        int int15 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.lang.String str13 = properties1.getProperty("{}");
        java.util.Set<java.lang.String> strSet14 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        java.util.Properties properties20 = atomikosProperties15.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        properties22.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Enumeration<?> wildcardEnumeration25 = properties22.propertyNames();
        java.lang.Object obj26 = properties22.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties22.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties28.setForceShutdownOnVmExit(true);
        long long33 = atomikosProperties28.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties28.getRecovery();
        long long35 = recovery34.getDelay();
        long long36 = recovery34.getDelay();
        recovery34.setRetryInterval((long) 35);
        java.lang.Object obj39 = properties1.getOrDefault((java.lang.Object) objEnumeration27, (java.lang.Object) 35);
        java.util.Properties properties40 = new java.util.Properties(properties1);
        int int41 = properties1.size();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream42, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 35 + "'", obj39, 35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("tm.out", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream11, "{tm.out=100}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        atomikosProperties6.setMaxActives((-1));
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel30);
        long long33 = atomikosProperties6.getDefaultJtaTimeout();
        java.util.Properties properties34 = atomikosProperties6.asProperties();
        java.lang.Object obj35 = null;
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection37 = properties36.values();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.lang.Object obj46 = properties39.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount((-1));
        java.lang.String str51 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setLogBaseName("tm.out");
        boolean boolean54 = properties39.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setConsoleFileCount(100);
        atomikosProperties55.setAllowSubTransactions(true);
        java.lang.Object obj60 = properties39.remove((java.lang.Object) atomikosProperties55);
        java.util.Set<java.lang.Object> objSet61 = properties39.keySet();
        int int62 = properties39.size();
        java.util.Properties properties63 = new java.util.Properties(properties39);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection65 = properties64.values();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.lang.Object obj74 = properties67.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setConsoleFileCount((-1));
        java.lang.String str79 = atomikosProperties76.getOutputDir();
        atomikosProperties76.setLogBaseName("tm.out");
        boolean boolean82 = properties67.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setConsoleFileCount(100);
        atomikosProperties83.setAllowSubTransactions(true);
        java.lang.Object obj88 = properties67.remove((java.lang.Object) atomikosProperties83);
        atomikosProperties83.setAllowSubTransactions(false);
        int int91 = atomikosProperties83.getConsoleFileCount();
        java.util.Properties properties92 = atomikosProperties83.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel93 = atomikosProperties83.getConsoleLogLevel();
        boolean boolean94 = properties39.equals((java.lang.Object) atomikosLoggingLevel93);
        java.util.Set<java.lang.Object> objSet95 = properties39.keySet();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = properties34.put(obj35, (java.lang.Object) objSet95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel93 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel93.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objSet95);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setConsoleFileName("{hi!=}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long2 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long3 = recovery0.getRetryInterval();
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long5 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 86400000L + "'", long2 == 86400000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 86400000L + "'", long4 == 86400000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties7.getConsoleLogLevel();
        atomikosProperties5.setConsoleLogLevel(atomikosLoggingLevel9);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel9);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setLogBaseName("");
        java.lang.String str16 = atomikosProperties0.getOutputDir();
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        java.lang.String str18 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.String str10 = properties8.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        java.lang.Object obj20 = properties12.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties15);
        boolean boolean21 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties15.getService();
        atomikosProperties15.setTransactionManagerUniqueName("");
        atomikosProperties15.setOutputDir("hi!");
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean31 = atomikosProperties15.isEnableLogging();
        boolean boolean32 = properties8.containsValue((java.lang.Object) atomikosProperties15);
        java.util.Collection<java.lang.Object> objCollection33 = properties8.values();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        atomikosProperties35.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties35.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties35.setLogBaseName("");
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getConsoleFileName();
        atomikosProperties55.setOutputDir("hi!");
        int int59 = atomikosProperties55.getConsoleFileLimit();
        java.lang.Object obj60 = properties52.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setOutputDir("hi!");
        java.lang.String str63 = atomikosProperties55.getTransactionManagerUniqueName();
        java.util.Properties properties64 = atomikosProperties55.asProperties();
        java.lang.Object obj65 = properties8.getOrDefault((java.lang.Object) atomikosProperties35, (java.lang.Object) properties64);
        long long66 = atomikosProperties35.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tm.out" + "'", str56, "tm.out");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals(obj65.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean39 = atomikosProperties33.isForceShutdownOnVmExit();
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties33.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery43 = atomikosProperties33.getRecovery();
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.lang.Object obj53 = properties45.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties48);
        boolean boolean54 = atomikosProperties48.isForceShutdownOnVmExit();
        atomikosProperties48.setConsoleFileName("");
        java.lang.String str57 = atomikosProperties48.getService();
        atomikosProperties48.setTransactionManagerUniqueName("");
        boolean boolean60 = atomikosProperties48.isEnableLogging();
        java.lang.Object obj61 = properties3.replace((java.lang.Object) recovery43, (java.lang.Object) atomikosProperties48);
        atomikosProperties48.setDefaultJtaTimeout(1L);
        java.lang.String str64 = atomikosProperties48.getOutputDir();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(recovery43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit(52);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.setForgetOrphanedLogEntriesDelay((long) (byte) 10);
        recovery7.setForgetOrphanedLogEntriesDelay(0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        atomikosProperties19.setConsoleFileLimit((int) (short) -1);
        long long45 = atomikosProperties19.getMaxTimeout();
        boolean boolean46 = atomikosProperties19.isSerialJtaTransactions();
        boolean boolean47 = atomikosProperties19.isEnableLogging();
        java.lang.String str48 = atomikosProperties19.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.lang.String str36 = properties5.getProperty("{}");
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        java.lang.Object obj46 = properties38.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties41);
        boolean boolean47 = atomikosProperties41.isForceShutdownOnVmExit();
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str50 = atomikosProperties41.getService();
        boolean boolean51 = atomikosProperties41.isEnableLogging();
        long long52 = atomikosProperties41.getMaxTimeout();
        boolean boolean53 = atomikosProperties41.isAllowSubTransactions();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Collection<java.lang.Object> objCollection60 = properties57.values();
        java.lang.Object obj61 = properties5.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) objCollection60);
        int int62 = atomikosProperties41.getConsoleFileCount();
        atomikosProperties41.setAllowSubTransactions(true);
        java.lang.String str65 = atomikosProperties41.getService();
        atomikosProperties41.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setService("tm.out");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str18 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setMaxActives(35);
        int int18 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str2 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        boolean boolean5 = atomikosProperties3.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties3.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        java.util.Set<java.lang.Object> objSet34 = properties12.keySet();
        java.util.Properties properties35 = new java.util.Properties(properties12);
        java.util.Set<java.lang.String> strSet36 = properties35.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet37 = properties35.keySet();
        java.lang.Object obj38 = properties6.get((java.lang.Object) objSet37);
        boolean boolean39 = properties6.isEmpty();
        java.util.Properties properties40 = new java.util.Properties(properties6);
        java.lang.Object obj41 = properties40.clone();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj50 = properties45.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount((-1));
        java.lang.String str55 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setLogBaseName("tm.out");
        int int58 = atomikosProperties52.getConsoleFileCount();
        boolean boolean59 = properties45.containsKey((java.lang.Object) atomikosProperties52);
        long long60 = atomikosProperties52.getCheckpointInterval();
        java.lang.Object obj61 = properties40.remove((java.lang.Object) atomikosProperties52);
        java.lang.String str62 = properties40.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 500L + "'", long60 == 500L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.util.Properties properties50 = new java.util.Properties(properties2);
        java.lang.Object obj53 = properties50.setProperty("{hi!=10}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.Object> objSet54 = properties50.keySet();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean58 = properties56.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.keys();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection61 = properties60.values();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties65 = new java.util.Properties(properties64);
        properties65.clear();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj70 = properties63.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setConsoleFileCount((-1));
        java.lang.String str75 = atomikosProperties72.getOutputDir();
        atomikosProperties72.setLogBaseName("tm.out");
        boolean boolean78 = properties63.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setConsoleFileCount(100);
        atomikosProperties79.setAllowSubTransactions(true);
        java.lang.Object obj84 = properties63.remove((java.lang.Object) atomikosProperties79);
        atomikosProperties79.setAllowSubTransactions(false);
        atomikosProperties79.setSerialJtaTransactions(true);
        boolean boolean89 = properties56.containsKey((java.lang.Object) atomikosProperties79);
        java.util.Properties properties90 = new java.util.Properties(properties56);
        boolean boolean91 = properties50.containsKey((java.lang.Object) properties56);
        java.util.Set<java.lang.Object> objSet92 = properties56.keySet();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objSet92);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        boolean boolean41 = atomikosProperties19.isEnableLogging();
        boolean boolean42 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        long long12 = atomikosProperties4.getDefaultJtaTimeout();
        java.util.Properties properties13 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        java.lang.Object obj17 = properties13.put((java.lang.Object) atomikosProperties14, (java.lang.Object) 0L);
        java.util.Properties properties18 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount((-1));
        atomikosProperties19.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj24 = properties13.remove((java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setMaxActives((-1));
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean33 = properties31.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties38.getConsoleLogLevel();
        java.lang.Object obj44 = properties31.putIfAbsent((java.lang.Object) atomikosProperties34, (java.lang.Object) atomikosLoggingLevel43);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel46);
        long long48 = atomikosProperties4.getDefaultJtaTimeout();
        long long49 = atomikosProperties4.getDefaultJtaTimeout();
        java.util.Properties properties50 = atomikosProperties4.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertNotNull(properties50);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        java.lang.String str14 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties17 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        java.lang.Object obj21 = properties17.put((java.lang.Object) atomikosProperties18, (java.lang.Object) 0L);
        atomikosProperties18.setThreadedTwoPhaseCommit(false);
        atomikosProperties18.setConsoleFileLimit((int) ' ');
        java.lang.String str26 = atomikosProperties18.getTransactionManagerUniqueName();
        atomikosProperties18.setEnableLogging(false);
        atomikosProperties18.setLogBaseName("{hi!=}");
        atomikosProperties18.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel33);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean37 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties38 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(inputStream39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties38);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        int int14 = atomikosProperties7.getConsoleFileLimit();
        java.lang.String str15 = atomikosProperties7.getService();
        atomikosProperties7.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        boolean boolean18 = atomikosProperties7.isThreadedTwoPhaseCommit();
        atomikosProperties7.setDefaultJtaTimeout(0L);
        boolean boolean21 = atomikosProperties7.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        properties1.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties1.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties1.keys();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.lang.Object obj24 = properties16.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setConsoleFileLimit((int) (short) 0);
        atomikosProperties19.setTransactionManagerUniqueName("{10=10.0}");
        boolean boolean29 = atomikosProperties19.isForceShutdownOnVmExit();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Properties properties32 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        atomikosProperties33.setDefaultJtaTimeout(1L);
        atomikosProperties33.setForceShutdownOnVmExit(false);
        boolean boolean42 = atomikosProperties33.isForceShutdownOnVmExit();
        int int43 = atomikosProperties33.getConsoleFileLimit();
        atomikosProperties33.setSerialJtaTransactions(true);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        properties49.clear();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Collection<java.lang.Object> objCollection52 = properties49.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getConsoleFileName();
        atomikosProperties53.setOutputDir("hi!");
        int int57 = atomikosProperties53.getConsoleFileLimit();
        java.util.Properties properties58 = atomikosProperties53.asProperties();
        boolean boolean59 = properties49.containsValue((java.lang.Object) atomikosProperties53);
        java.lang.String str60 = atomikosProperties53.getService();
        atomikosProperties53.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties53.setConsoleFileCount((int) (short) 0);
        java.util.Properties properties65 = atomikosProperties53.asProperties();
        boolean boolean66 = atomikosProperties53.isAllowSubTransactions();
        java.lang.Object obj67 = properties32.getOrDefault((java.lang.Object) atomikosProperties33, (java.lang.Object) atomikosProperties53);
        java.lang.Object obj68 = properties1.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) atomikosProperties53);
        long long69 = atomikosProperties53.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties1.equals((java.lang.Object) properties23);
        java.util.Properties properties26 = new java.util.Properties(properties23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) '4');
        recovery0.setDelay((long) (byte) 100);
        recovery0.setMaxRetries(0);
        long long11 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 86400000L + "'", long4 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str27 = properties25.getProperty("");
        java.lang.String str28 = properties25.toString();
        java.lang.String str29 = properties25.toString();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean33 = properties31.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection36 = properties35.values();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj45 = properties38.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setConsoleFileCount((-1));
        java.lang.String str50 = atomikosProperties47.getOutputDir();
        atomikosProperties47.setLogBaseName("tm.out");
        boolean boolean53 = properties38.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setConsoleFileCount(100);
        atomikosProperties54.setAllowSubTransactions(true);
        java.lang.Object obj59 = properties38.remove((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setAllowSubTransactions(false);
        atomikosProperties54.setSerialJtaTransactions(true);
        boolean boolean64 = properties31.containsKey((java.lang.Object) atomikosProperties54);
        java.util.Collection<java.lang.Object> objCollection65 = properties31.values();
        java.util.Properties properties66 = new java.util.Properties(properties31);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        int int69 = properties68.size();
        boolean boolean70 = properties68.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Properties properties74 = new java.util.Properties(properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        boolean boolean76 = properties74.isEmpty();
        boolean boolean77 = properties68.containsValue((java.lang.Object) boolean76);
        java.util.Properties properties78 = new java.util.Properties(properties68);
        java.util.Enumeration<?> wildcardEnumeration79 = properties78.propertyNames();
        boolean boolean80 = properties25.remove((java.lang.Object) properties31, (java.lang.Object) properties78);
        java.lang.Object obj81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = properties25.getOrDefault(obj81, (java.lang.Object) 97L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery4.setDelay((long) 5);
        recovery4.setMaxRetries((-1));
        recovery4.setForgetOrphanedLogEntriesDelay(86400000L);
        long long11 = recovery4.getDelay();
        java.lang.Object obj13 = properties1.getOrDefault((java.lang.Object) recovery4, (java.lang.Object) (short) 10);
        long long14 = recovery4.getDelay();
        recovery4.setRetryInterval((long) 20);
        long long17 = recovery4.getForgetOrphanedLogEntriesDelay();
        int int18 = recovery4.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 5L + "'", long11 == 5L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 5L + "'", long14 == 5L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        boolean boolean11 = properties1.isEmpty();
        java.util.Properties properties12 = new java.util.Properties(properties1);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str2 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        boolean boolean5 = atomikosProperties3.isForceShutdownOnVmExit();
        java.util.Properties properties6 = atomikosProperties3.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setConsoleFileCount((-1));
        java.lang.String str12 = atomikosProperties9.getOutputDir();
        atomikosProperties9.setLogBaseName("tm.out");
        atomikosProperties9.setLogBaseDir("tm.out");
        java.lang.String str17 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setDefaultJtaTimeout(10L);
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties9.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties9.getRecovery();
        java.lang.String str23 = atomikosProperties9.getOutputDir();
        atomikosProperties9.setEnableLogging(false);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection27 = properties26.values();
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.String str31 = properties28.getProperty("hi!");
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setAllowSubTransactions(true);
        boolean boolean38 = atomikosProperties33.isForceShutdownOnVmExit();
        int int39 = atomikosProperties33.getConsoleFileCount();
        java.util.Properties properties40 = atomikosProperties33.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties33.getRecovery();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.lang.Object obj52 = properties45.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setConsoleFileCount((-1));
        java.lang.String str57 = atomikosProperties54.getOutputDir();
        atomikosProperties54.setLogBaseName("tm.out");
        boolean boolean60 = properties45.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileCount(100);
        atomikosProperties61.setAllowSubTransactions(true);
        java.lang.Object obj66 = properties45.remove((java.lang.Object) atomikosProperties61);
        atomikosProperties61.setAllowSubTransactions(false);
        int int69 = atomikosProperties61.getConsoleFileCount();
        java.util.Properties properties70 = atomikosProperties61.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties61.getConsoleLogLevel();
        java.lang.Object obj72 = properties28.getOrDefault((java.lang.Object) recovery41, (java.lang.Object) atomikosProperties61);
        java.util.Set<java.lang.Object> objSet73 = properties28.keySet();
        java.lang.Object obj74 = properties8.put((java.lang.Object) false, (java.lang.Object) objSet73);
        java.util.Properties properties75 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setConsoleFileCount(100);
        atomikosProperties76.setAllowSubTransactions(true);
        boolean boolean81 = atomikosProperties76.isForceShutdownOnVmExit();
        int int82 = atomikosProperties76.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery83 = atomikosProperties76.getRecovery();
        recovery83.setDelay((long) 0);
        long long86 = recovery83.getForgetOrphanedLogEntriesDelay();
        recovery83.setMaxRetries((-1));
        recovery83.setForgetOrphanedLogEntriesDelay(19L);
        boolean boolean91 = properties75.containsKey((java.lang.Object) recovery83);
        recovery83.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(recovery83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 86400000L + "'", long86 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        int int5 = atomikosProperties0.getMaxActives();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval(10L);
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setConsoleFileCount(100);
        int int41 = atomikosProperties38.getConsoleFileCount();
        atomikosProperties38.setOutputDir("");
        java.lang.String str44 = atomikosProperties38.getConsoleFileName();
        int int45 = atomikosProperties38.getConsoleFileCount();
        boolean boolean46 = atomikosProperties38.isEnableLogging();
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        boolean boolean48 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setService("tm.out");
        boolean boolean51 = properties37.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties52 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getConsoleFileName();
        java.lang.Object obj56 = properties52.put((java.lang.Object) atomikosProperties53, (java.lang.Object) 0L);
        java.lang.Object obj59 = properties52.setProperty("", "");
        java.lang.Object obj62 = properties52.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getTransactionManagerUniqueName();
        atomikosProperties63.setAllowSubTransactions(false);
        boolean boolean67 = properties52.containsKey((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setConsoleFileLimit(100);
        boolean boolean71 = properties37.remove((java.lang.Object) atomikosProperties63, (java.lang.Object) 50);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties37.elements();
        java.io.OutputStream outputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties37.storeToXML(outputStream73, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        recovery13.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        recovery13.setForgetOrphanedLogEntriesDelay(300000L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(recovery13);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long11 = atomikosProperties0.getMaxTimeout();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        properties22.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        java.lang.Object obj30 = properties22.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties25.setCheckpointInterval((long) 5);
        java.util.Properties properties39 = atomikosProperties25.asProperties();
        java.lang.Object obj40 = properties1.getOrDefault((java.lang.Object) atomikosProperties12, (java.lang.Object) properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.io.InputStream inputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(obj40);
// flaky:         org.junit.Assert.assertEquals(obj40.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=5, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=5, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=5, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection42);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        recovery0.setMaxRetries((-1));
        long long5 = recovery0.getRetryInterval();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval(0L);
        int int9 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet20 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.util.Properties properties26 = atomikosProperties21.asProperties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj35 = properties30.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean36 = properties26.equals(obj35);
        java.lang.Object obj39 = properties26.setProperty("", "");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        int int43 = atomikosProperties41.getMaxActives();
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        boolean boolean45 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = atomikosProperties41.getRecovery();
        java.util.Properties properties49 = atomikosProperties41.asProperties();
        java.lang.Object obj50 = properties1.remove((java.lang.Object) atomikosProperties41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(recovery48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet51);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        atomikosProperties19.setCheckpointInterval((long) (short) 100);
        atomikosProperties19.setConsoleFileName("hi!");
        boolean boolean34 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties19.getConsoleFileName();
        java.util.Properties properties38 = atomikosProperties19.asProperties();
        properties38.clear();
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.storeToXML(outputStream40, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(properties38);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties83 = atomikosProperties49.asProperties();
        java.lang.String str84 = atomikosProperties49.getTransactionManagerUniqueName();
        atomikosProperties49.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
        int int87 = atomikosProperties49.getConsoleFileCount();
        atomikosProperties49.setConsoleFileCount((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit(52);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.setForgetOrphanedLogEntriesDelay((long) (byte) 10);
        int int10 = recovery7.getMaxRetries();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties83 = atomikosProperties49.asProperties();
        java.lang.String str84 = atomikosProperties49.getTransactionManagerUniqueName();
        atomikosProperties49.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10}");
        int int87 = atomikosProperties49.getConsoleFileCount();
        java.lang.String str88 = atomikosProperties49.getConsoleFileName();
        int int89 = atomikosProperties49.getMaxActives();
        java.lang.String str90 = atomikosProperties49.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "tm.out" + "'", str88, "tm.out");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long4 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 100);
        recovery0.setForgetOrphanedLogEntriesDelay(10000L);
        long long9 = recovery0.getRetryInterval();
        recovery0.setDelay((long) 100);
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long13 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        java.lang.Object obj26 = properties24.clone();
        java.util.Set<java.lang.Object> objSet27 = properties24.keySet();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        properties31.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Collection<java.lang.Object> objCollection34 = properties31.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        atomikosProperties35.setOutputDir("hi!");
        int int39 = atomikosProperties35.getConsoleFileLimit();
        java.util.Properties properties40 = atomikosProperties35.asProperties();
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties35);
        java.lang.String str42 = atomikosProperties35.getService();
        atomikosProperties35.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean45 = atomikosProperties35.isEnableLogging();
        atomikosProperties35.setTransactionManagerUniqueName("tm.out");
        atomikosProperties35.setOutputDir("hi!");
        atomikosProperties35.setEnableLogging(true);
        java.util.Properties properties52 = atomikosProperties35.asProperties();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getConsoleFileName();
        atomikosProperties57.setOutputDir("hi!");
        int int61 = atomikosProperties57.getConsoleFileLimit();
        java.lang.Object obj62 = properties54.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties57);
        boolean boolean63 = atomikosProperties57.isForceShutdownOnVmExit();
        int int64 = atomikosProperties57.getConsoleFileCount();
        atomikosProperties57.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties57.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        java.util.Properties properties73 = atomikosProperties68.asProperties();
        java.lang.String str74 = atomikosProperties68.getService();
        atomikosProperties68.setService("hi!");
        atomikosProperties68.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery79 = atomikosProperties68.getRecovery();
        atomikosProperties68.setDefaultJtaTimeout((long) ' ');
        java.lang.Object obj82 = properties52.put((java.lang.Object) atomikosProperties57, (java.lang.Object) ' ');
        boolean boolean83 = properties24.containsValue((java.lang.Object) atomikosProperties57);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(recovery79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        int int10 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel11);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.lang.Object obj18 = properties5.setProperty("", "");
        java.util.Enumeration<?> wildcardEnumeration19 = properties5.propertyNames();
        java.lang.String str21 = properties5.getProperty("{hi!=10}");
        java.util.Properties properties22 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        atomikosProperties23.setOutputDir("hi!");
        int int27 = atomikosProperties23.getConsoleFileLimit();
        java.util.Properties properties28 = atomikosProperties23.asProperties();
        java.lang.String str29 = atomikosProperties23.getService();
        atomikosProperties23.setService("hi!");
        java.lang.Object obj33 = properties22.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        java.lang.Object obj34 = properties5.remove((java.lang.Object) properties22);
        java.lang.Object obj35 = properties5.clone();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals(obj35.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        long long8 = atomikosProperties0.getCheckpointInterval();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount((int) 'a');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        atomikosProperties10.setLogBaseDir("tm.out");
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean20 = properties9.containsValue((java.lang.Object) false);
        java.util.Set<java.lang.Object> objSet21 = properties9.keySet();
        java.lang.String str22 = properties9.toString();
        java.lang.String str23 = properties9.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties9.entrySet();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objEntrySet24);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        atomikosProperties4.setForceShutdownOnVmExit(false);
        atomikosProperties4.setEnableLogging(false);
        atomikosProperties4.setForceShutdownOnVmExit(false);
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties4.getRecovery();
        atomikosProperties4.setEnableLogging(true);
        long long23 = atomikosProperties4.getMaxTimeout();
        atomikosProperties4.setAllowSubTransactions(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        long long8 = atomikosProperties0.getMaxTimeout();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.keys();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        int int6 = properties5.size();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties10.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet16 = properties10.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        int int23 = atomikosProperties17.getConsoleFileCount();
        boolean boolean24 = properties10.containsKey((java.lang.Object) atomikosProperties17);
        boolean boolean25 = properties5.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Set<java.lang.Object> objSet26 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getTransactionManagerUniqueName();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 100);
        java.lang.Object obj31 = properties2.putIfAbsent((java.lang.Object) properties5, (java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setConsoleFileCount(100);
        atomikosProperties32.setAllowSubTransactions(true);
        boolean boolean37 = atomikosProperties32.isForceShutdownOnVmExit();
        java.util.Properties properties38 = atomikosProperties32.asProperties();
        atomikosProperties32.setConsoleFileName("");
        boolean boolean41 = atomikosProperties32.isSerialJtaTransactions();
        boolean boolean42 = atomikosProperties32.isEnableLogging();
        boolean boolean43 = properties5.containsValue((java.lang.Object) boolean42);
        java.util.Set<java.lang.String> strSet44 = properties5.stringPropertyNames();
        java.io.Reader reader45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(reader45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        java.util.Properties properties18 = new java.util.Properties(properties10);
        java.util.Set<java.lang.String> strSet19 = properties10.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection20 = properties10.values();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.lang.Object obj24 = null;
        boolean boolean25 = properties21.equals(obj24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.elements();
        java.lang.Object obj28 = properties1.put((java.lang.Object) properties10, (java.lang.Object) properties21);
        java.util.Properties properties29 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str34 = atomikosProperties30.getConsoleFileName();
        java.util.Properties properties35 = atomikosProperties30.asProperties();
        java.util.Properties properties36 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        java.lang.Object obj40 = properties36.put((java.lang.Object) atomikosProperties37, (java.lang.Object) 0L);
        atomikosProperties37.setThreadedTwoPhaseCommit(false);
        atomikosProperties37.setConsoleFileLimit((int) ' ');
        java.lang.String str45 = atomikosProperties37.getConsoleFileName();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.String str48 = atomikosProperties37.getService();
        atomikosProperties37.setCheckpointInterval((long) 19);
        long long51 = atomikosProperties37.getCheckpointInterval();
        java.util.Properties properties52 = atomikosProperties37.asProperties();
        java.lang.Object obj53 = properties29.getOrDefault((java.lang.Object) properties35, (java.lang.Object) properties52);
        java.util.Properties properties54 = new java.util.Properties(properties35);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 19L + "'", long51 == 19L);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals(obj53.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=19, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=19, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=19, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties8.setMaxTimeout(1L);
        java.lang.Object obj13 = properties6.put((java.lang.Object) 1.0f, (java.lang.Object) atomikosProperties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery14.setRetryInterval((long) (byte) 10);
        int int17 = recovery14.getMaxRetries();
        recovery14.setDelay(10L);
        long long20 = recovery14.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj21 = properties6.remove((java.lang.Object) long20);
        java.util.Collection<java.lang.Object> objCollection22 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties6.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount(100);
        atomikosProperties24.setAllowSubTransactions(true);
        boolean boolean29 = atomikosProperties24.isForceShutdownOnVmExit();
        int int30 = atomikosProperties24.getConsoleFileCount();
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties24.getRecovery();
        boolean boolean33 = properties6.containsValue((java.lang.Object) atomikosProperties24);
        properties6.clear();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 86400000L + "'", long20 == 86400000L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean9 = properties7.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.keys();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties14.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("tm.out");
        boolean boolean32 = properties14.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = new java.util.Properties(properties34);
        java.lang.String str42 = properties34.getProperty("tmlog");
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        properties44.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        atomikosProperties47.setOutputDir("hi!");
        int int51 = atomikosProperties47.getConsoleFileLimit();
        java.lang.Object obj52 = properties44.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileLimit((int) (short) 0);
        boolean boolean55 = properties34.containsValue((java.lang.Object) atomikosProperties47);
        java.lang.Object obj56 = properties1.getOrDefault((java.lang.Object) properties7, (java.lang.Object) atomikosProperties47);
        java.io.Writer writer57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(writer57, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        boolean boolean17 = properties7.containsValue((java.lang.Object) atomikosProperties11);
        boolean boolean18 = properties1.containsValue((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        long long21 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties22 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getTransactionManagerUniqueName();
        boolean boolean25 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj38 = properties31.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        java.lang.String str43 = atomikosProperties40.getOutputDir();
        atomikosProperties40.setLogBaseName("tm.out");
        boolean boolean46 = properties31.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setConsoleFileCount(100);
        atomikosProperties47.setAllowSubTransactions(true);
        java.lang.Object obj52 = properties31.remove((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setAllowSubTransactions(false);
        atomikosProperties47.setSerialJtaTransactions(true);
        boolean boolean57 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setOutputDir("{}");
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj62 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.lang.Object obj71 = properties64.setProperty("tm.out", "");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str74 = atomikosProperties73.getConsoleFileName();
        int int75 = atomikosProperties73.getConsoleFileCount();
        java.lang.String str76 = atomikosProperties73.getTransactionManagerUniqueName();
        boolean boolean77 = properties1.remove((java.lang.Object) properties64, (java.lang.Object) atomikosProperties73);
        java.lang.String str78 = properties1.toString();
        boolean boolean79 = properties1.isEmpty();
        java.util.Properties properties80 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet81 = properties80.keySet();
        java.util.Properties properties82 = new java.util.Properties(properties80);
        java.util.Properties properties83 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str85 = atomikosProperties84.getConsoleFileName();
        java.lang.Object obj87 = properties83.put((java.lang.Object) atomikosProperties84, (java.lang.Object) 0L);
        java.util.Properties properties88 = new java.util.Properties(properties83);
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.lang.Object obj92 = properties89.setProperty("{hi!=}", "{}");
        boolean boolean93 = properties89.isEmpty();
        java.util.Collection<java.lang.Object> objCollection94 = properties89.values();
        boolean boolean95 = properties80.containsValue((java.lang.Object) objCollection94);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tm.out" + "'", str74, "tm.out");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tm.out" + "'", str85, "tm.out");
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long12 = recovery11.getForgetOrphanedLogEntriesDelay();
        recovery11.setDelay((long) (short) 1);
        recovery11.setDelay((long) (-1));
        java.lang.Object obj17 = properties8.remove((java.lang.Object) (-1));
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties8.keys();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        properties22.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj27 = properties22.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet28 = properties22.stringPropertyNames();
        java.lang.Object obj29 = properties8.get((java.lang.Object) properties22);
        java.util.Enumeration<?> wildcardEnumeration30 = properties8.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long32 = recovery31.getForgetOrphanedLogEntriesDelay();
        long long33 = recovery31.getForgetOrphanedLogEntriesDelay();
        long long34 = recovery31.getRetryInterval();
        recovery31.setMaxRetries(10);
        java.lang.Object obj37 = properties1.replace((java.lang.Object) wildcardEnumeration30, (java.lang.Object) 10);
        int int38 = properties1.size();
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream39, "{hi!=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 86400000L + "'", long32 == 86400000L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("{hi!=10}");
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        int int16 = atomikosProperties0.getMaxActives();
        boolean boolean17 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties3.get(obj10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        properties19.clear();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties22 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        java.lang.Object obj26 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) 0L);
        java.lang.Object obj29 = properties22.setProperty("", "");
        java.util.Properties properties30 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties31.getConsoleLogLevel();
        java.lang.Object obj37 = properties17.getOrDefault((java.lang.Object) properties22, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Collection<java.lang.Object> objCollection44 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        java.util.Properties properties50 = atomikosProperties45.asProperties();
        boolean boolean51 = properties41.containsValue((java.lang.Object) atomikosProperties45);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties41.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties41.elements();
        java.lang.Object obj54 = properties3.putIfAbsent((java.lang.Object) atomikosProperties31, (java.lang.Object) properties41);
        java.util.Properties properties55 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getConsoleFileName();
        java.lang.Object obj59 = properties55.put((java.lang.Object) atomikosProperties56, (java.lang.Object) 0L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties55.entrySet();
        java.util.Properties properties61 = new java.util.Properties(properties55);
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Properties properties63 = new java.util.Properties(properties62);
        properties63.clear();
        java.lang.Object obj65 = properties3.getOrDefault((java.lang.Object) properties55, (java.lang.Object) properties63);
        java.lang.String str67 = properties63.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=50, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{}");
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        int int8 = atomikosProperties0.getConsoleFileCount();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.getRecovery();
        atomikosProperties0.setAllowSubTransactions(false);
        int int17 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        recovery0.setRetryInterval(100L);
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) ' ');
        recovery0.setRetryInterval((long) (short) 100);
        long long11 = recovery0.getRetryInterval();
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties3.get(obj10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        properties19.clear();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties22 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        java.lang.Object obj26 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) 0L);
        java.lang.Object obj29 = properties22.setProperty("", "");
        java.util.Properties properties30 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties31.getConsoleLogLevel();
        java.lang.Object obj37 = properties17.getOrDefault((java.lang.Object) properties22, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Collection<java.lang.Object> objCollection44 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setOutputDir("hi!");
        int int49 = atomikosProperties45.getConsoleFileLimit();
        java.util.Properties properties50 = atomikosProperties45.asProperties();
        boolean boolean51 = properties41.containsValue((java.lang.Object) atomikosProperties45);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties41.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties41.elements();
        java.lang.Object obj54 = properties3.putIfAbsent((java.lang.Object) atomikosProperties31, (java.lang.Object) properties41);
        java.lang.Object obj55 = null;
        boolean boolean56 = properties41.equals(obj55);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Collection<java.lang.Object> objCollection63 = properties60.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getConsoleFileName();
        atomikosProperties64.setOutputDir("hi!");
        int int68 = atomikosProperties64.getConsoleFileLimit();
        java.util.Properties properties69 = atomikosProperties64.asProperties();
        boolean boolean70 = properties60.containsValue((java.lang.Object) atomikosProperties64);
        int int71 = atomikosProperties64.getConsoleFileLimit();
        java.lang.String str72 = atomikosProperties64.getService();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        boolean boolean76 = properties74.containsValue((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection77 = properties74.values();
        java.util.Set<java.lang.Object> objSet78 = properties74.keySet();
        java.lang.Object obj79 = properties41.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) properties74);
        java.io.Writer writer80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties74.store(writer80, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, 100={}, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = atomikosProperties19.asProperties();
        atomikosProperties19.setMaxActives(10);
        int int32 = atomikosProperties19.getMaxActives();
        java.lang.String str33 = atomikosProperties19.getLogBaseName();
        java.util.Properties properties34 = atomikosProperties19.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties34);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.lang.String str5 = properties2.getProperty("hi!");
        java.util.Properties properties6 = new java.util.Properties(properties2);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        java.lang.Object obj12 = properties8.put((java.lang.Object) atomikosProperties9, (java.lang.Object) 0L);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Object obj14 = properties8.get(obj13);
        properties8.clear();
        boolean boolean16 = properties2.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties2.elements();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        atomikosProperties7.setCheckpointInterval((long) 100);
        atomikosProperties7.setLogBaseDir("hi!");
        atomikosProperties7.setCheckpointInterval((long) 50);
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        java.util.Properties properties23 = atomikosProperties7.asProperties();
        java.io.Reader reader24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.load(reader24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties23);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        int int13 = properties12.size();
        boolean boolean14 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        boolean boolean20 = properties18.isEmpty();
        boolean boolean21 = properties12.containsValue((java.lang.Object) boolean20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties12.elements();
        properties12.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount((-1));
        java.lang.String str27 = atomikosProperties24.getOutputDir();
        atomikosProperties24.setLogBaseName("tm.out");
        atomikosProperties24.setLogBaseDir("tm.out");
        java.lang.String str32 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setDefaultJtaTimeout(10L);
        java.util.Properties properties35 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = atomikosProperties24.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties24.getRecovery();
        java.lang.String str38 = atomikosProperties24.getOutputDir();
        int int39 = atomikosProperties24.getConsoleFileLimit();
        boolean boolean40 = properties12.equals((java.lang.Object) atomikosProperties24);
        boolean boolean41 = properties9.containsKey((java.lang.Object) properties12);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(recovery36);
        org.junit.Assert.assertNotNull(recovery37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean26 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties27 = atomikosProperties0.asProperties();
        java.lang.Object obj28 = null;
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        boolean boolean47 = properties32.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount(100);
        atomikosProperties48.setAllowSubTransactions(true);
        java.lang.Object obj53 = properties32.remove((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setAllowSubTransactions(false);
        atomikosProperties48.setSerialJtaTransactions(true);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setOutputDir("hi!");
        int int66 = atomikosProperties62.getConsoleFileLimit();
        java.lang.Object obj67 = properties59.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties62);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties48.setDefaultJtaTimeout((long) 10);
        boolean boolean72 = atomikosProperties48.isEnableLogging();
        java.lang.String str73 = atomikosProperties48.getConsoleFileName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = properties27.put(obj28, (java.lang.Object) atomikosProperties48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setMaxTimeout(52L);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str7 = properties5.getProperty("{}");
        java.util.Properties properties8 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        java.lang.Object obj12 = properties8.put((java.lang.Object) atomikosProperties9, (java.lang.Object) 0L);
        java.util.Properties properties13 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount((-1));
        atomikosProperties25.setAllowSubTransactions(false);
        boolean boolean30 = properties19.containsValue((java.lang.Object) false);
        boolean boolean31 = properties13.contains((java.lang.Object) properties19);
        java.util.Properties properties32 = new java.util.Properties(properties19);
        boolean boolean33 = properties5.containsKey((java.lang.Object) properties19);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setOutputDir("hi!");
        int int42 = atomikosProperties38.getConsoleFileLimit();
        java.lang.Object obj43 = properties35.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setLogBaseName("tm.out");
        long long46 = atomikosProperties38.getDefaultJtaTimeout();
        long long47 = atomikosProperties38.getDefaultJtaTimeout();
        java.util.Properties properties48 = atomikosProperties38.asProperties();
        boolean boolean49 = properties5.equals((java.lang.Object) atomikosProperties38);
        boolean boolean50 = atomikosProperties38.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = atomikosProperties19.asProperties();
        java.util.Properties properties30 = atomikosProperties19.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel12);
        atomikosProperties8.setSerialJtaTransactions(false);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.lang.Object obj17 = properties5.remove((java.lang.Object) atomikosProperties8);
        java.lang.String str18 = atomikosProperties8.getLogBaseName();
        java.util.Properties properties19 = atomikosProperties8.asProperties();
        boolean boolean20 = atomikosProperties8.isAllowSubTransactions();
        java.lang.String str21 = atomikosProperties8.getTransactionManagerUniqueName();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties8);
        boolean boolean23 = atomikosProperties8.isEnableLogging();
        long long24 = atomikosProperties8.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int15 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration17 = properties16.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean22 = properties20.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties20.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties27.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        int int32 = properties31.size();
        boolean boolean33 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties31.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        atomikosProperties35.setOutputDir("hi!");
        int int39 = atomikosProperties35.getConsoleFileLimit();
        java.util.Properties properties40 = atomikosProperties35.asProperties();
        java.lang.String str41 = atomikosProperties35.getService();
        int int42 = atomikosProperties35.getMaxActives();
        boolean boolean43 = properties31.equals((java.lang.Object) atomikosProperties35);
        java.lang.Object obj44 = properties20.putIfAbsent((java.lang.Object) objEntrySet29, (java.lang.Object) boolean43);
        java.lang.Object obj45 = properties16.get((java.lang.Object) properties20);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.lang.Object obj12 = properties7.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties13 = new java.util.Properties(properties7);
        java.util.Properties properties14 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        java.lang.Object obj18 = properties14.put((java.lang.Object) atomikosProperties15, (java.lang.Object) 0L);
        atomikosProperties15.setLogBaseName("tm.out");
        java.lang.Object obj21 = properties13.remove((java.lang.Object) atomikosProperties15);
        java.util.Properties properties22 = atomikosProperties15.asProperties();
        java.lang.String str24 = properties22.getProperty("hi!");
        int int25 = properties22.size();
        java.lang.Object obj26 = properties0.get((java.lang.Object) int25);
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream27, "{false=500}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 18 + "'", int25 == 18);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        java.lang.Object obj27 = properties23.put((java.lang.Object) atomikosProperties24, (java.lang.Object) 0L);
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        atomikosProperties24.setConsoleFileLimit((int) ' ');
        long long32 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean33 = atomikosProperties24.isForceShutdownOnVmExit();
        java.lang.String str34 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setConsoleFileLimit((int) (byte) -1);
        boolean boolean37 = properties22.equals((java.lang.Object) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties7.keys();
        java.lang.Object obj47 = properties7.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setService("{=hi!}");
        atomikosProperties0.setCheckpointInterval(86400000L);
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{=hi!}" + "'", str11, "{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.String str17 = atomikosProperties12.getService();
        java.lang.String str18 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setOutputDir("tmlog");
        long long21 = atomikosProperties12.getMaxTimeout();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        int int23 = atomikosProperties12.getConsoleFileCount();
        atomikosProperties12.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        boolean boolean31 = atomikosProperties26.isForceShutdownOnVmExit();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) atomikosProperties12, (java.lang.Object) boolean31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount(100);
        atomikosProperties33.setAllowSubTransactions(true);
        atomikosProperties33.setMaxTimeout((long) '4');
        java.lang.String str40 = atomikosProperties33.getLogBaseDir();
        int int41 = atomikosProperties33.getConsoleFileCount();
        int int42 = atomikosProperties33.getMaxActives();
        int int43 = atomikosProperties33.getMaxActives();
        boolean boolean44 = properties11.contains((java.lang.Object) atomikosProperties33);
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        int int46 = atomikosProperties33.getConsoleFileCount();
        boolean boolean47 = atomikosProperties33.isForceShutdownOnVmExit();
        java.util.Properties properties48 = atomikosProperties33.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        boolean boolean50 = properties48.isEmpty();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.Object obj10 = properties7.setProperty("{10=10.0}", "{10=10.0}");
        java.util.Enumeration<?> wildcardEnumeration11 = properties7.propertyNames();
        java.util.Collection<java.lang.Object> objCollection12 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long19 = recovery18.getForgetOrphanedLogEntriesDelay();
        recovery18.setDelay((long) (short) 1);
        recovery18.setDelay((long) (-1));
        recovery18.setForgetOrphanedLogEntriesDelay(10000L);
        java.lang.Object obj26 = properties7.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) 10000L);
        java.util.Properties properties27 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        java.lang.Object obj31 = properties27.put((java.lang.Object) atomikosProperties28, (java.lang.Object) 0L);
        java.util.Properties properties32 = new java.util.Properties(properties27);
        java.lang.Object obj33 = properties27.clone();
        java.util.Set<java.lang.Object> objSet34 = properties27.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties27.entrySet();
        boolean boolean36 = properties16.containsKey((java.lang.Object) objEntrySet35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long38 = recovery37.getForgetOrphanedLogEntriesDelay();
        recovery37.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        long long41 = recovery37.getDelay();
        recovery37.setMaxRetries((int) (short) 100);
        recovery37.setForgetOrphanedLogEntriesDelay(10000L);
        long long46 = recovery37.getRetryInterval();
        long long47 = recovery37.getDelay();
        java.util.Properties properties48 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        java.lang.Object obj52 = properties48.put((java.lang.Object) atomikosProperties49, (java.lang.Object) 0L);
        java.util.Properties properties53 = new java.util.Properties(properties48);
        java.util.Set<java.lang.Object> objSet54 = properties53.keySet();
        java.lang.Object obj55 = properties16.putIfAbsent((java.lang.Object) recovery37, (java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getConsoleFileName();
        atomikosProperties56.setOutputDir("hi!");
        int int60 = atomikosProperties56.getConsoleFileLimit();
        atomikosProperties56.setDefaultJtaTimeout(1L);
        atomikosProperties56.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties56.getConsoleLogLevel();
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.lang.String str68 = atomikosProperties56.getOutputDir();
        atomikosProperties56.setAllowSubTransactions(false);
        atomikosProperties56.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean73 = properties53.contains((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 86400000L + "'", long19 == 86400000L);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 86400000L + "'", long38 == 86400000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        atomikosProperties10.setLogBaseDir("tm.out");
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean20 = properties9.containsValue((java.lang.Object) false);
        properties9.clear();
        int int22 = properties9.size();
        java.lang.String str24 = properties9.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties30.getConsoleLogLevel();
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel32);
        atomikosProperties28.setSerialJtaTransactions(false);
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        java.lang.Object obj37 = properties25.remove((java.lang.Object) atomikosProperties28);
        java.lang.Class<?> wildcardClass38 = properties25.getClass();
        java.lang.Object obj39 = properties9.remove((java.lang.Object) wildcardClass38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        java.util.Properties properties45 = atomikosProperties40.asProperties();
        java.lang.String str46 = atomikosProperties40.getService();
        atomikosProperties40.setService("hi!");
        atomikosProperties40.setThreadedTwoPhaseCommit(false);
        boolean boolean51 = atomikosProperties40.isThreadedTwoPhaseCommit();
        boolean boolean52 = properties9.containsKey((java.lang.Object) atomikosProperties40);
        java.lang.Class<?> wildcardClass53 = properties9.getClass();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setConsoleFileLimit(32);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties6.entrySet();
        int int8 = properties6.size();
        java.util.Set<java.lang.Object> objSet9 = properties6.keySet();
        int int10 = properties6.size();
        int int11 = properties6.size();
        java.util.Properties properties12 = new java.util.Properties(properties6);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 19 + "'", int8 == 19);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 19 + "'", int10 == 19);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 19 + "'", int11 == 19);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties7.keys();
        boolean boolean46 = properties7.equals((java.lang.Object) 0.0d);
        java.util.Properties properties47 = new java.util.Properties(properties7);
        java.util.Properties properties48 = new java.util.Properties(properties7);
        java.util.Properties properties49 = new java.util.Properties(properties7);
        java.util.Set<java.lang.Object> objSet50 = properties7.keySet();
        java.util.Properties properties51 = new java.util.Properties(properties7);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objSet50);
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setDefaultJtaTimeout((long) 19);
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties4.getRecovery();
        long long12 = recovery11.getForgetOrphanedLogEntriesDelay();
        long long13 = recovery11.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.keys();
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        atomikosProperties14.setEnableLogging(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(false);
        atomikosProperties14.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties14.getConsoleLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        int int11 = atomikosProperties4.getConsoleFileCount();
        atomikosProperties4.setConsoleFileName("hi!");
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        atomikosProperties4.setConsoleFileCount((int) '#');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties4.getRecovery();
        java.lang.String str12 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setEnableLogging(true);
        boolean boolean15 = atomikosProperties4.isEnableLogging();
        java.lang.String str16 = atomikosProperties4.getConsoleFileName();
        boolean boolean17 = atomikosProperties4.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getConsoleFileName();
        java.util.Properties properties7 = atomikosProperties1.asProperties();
        boolean boolean8 = properties7.isEmpty();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        long long44 = recovery28.getRetryInterval();
        int int45 = recovery28.getMaxRetries();
        recovery28.setDelay(32L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        java.util.Properties properties30 = new java.util.Properties(properties22);
        boolean boolean31 = properties22.isEmpty();
        boolean boolean32 = properties1.contains((java.lang.Object) boolean31);
        java.util.Set<java.lang.String> strSet33 = properties1.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        boolean boolean52 = properties37.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount(100);
        atomikosProperties53.setAllowSubTransactions(true);
        java.lang.Object obj58 = properties37.remove((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setAllowSubTransactions(false);
        int int61 = atomikosProperties53.getConsoleFileCount();
        atomikosProperties53.setThreadedTwoPhaseCommit(false);
        atomikosProperties53.setCheckpointInterval((long) (short) -1);
        java.lang.String str66 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setAllowSubTransactions(true);
        boolean boolean69 = properties1.containsKey((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setThreadedTwoPhaseCommit(false);
        atomikosProperties53.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties53.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.lang.String str3 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration4 = properties0.propertyNames();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.String str6 = properties0.toString();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileLimit(100);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        long long8 = atomikosProperties0.getMaxTimeout();
        int int9 = atomikosProperties0.getMaxActives();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel83 = atomikosProperties49.getConsoleLogLevel();
        java.lang.String str84 = atomikosProperties49.getService();
        atomikosProperties49.setAllowSubTransactions(true);
        atomikosProperties49.setConsoleFileCount((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel83 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel83.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setConsoleFileCount((-1));
        atomikosProperties4.setTransactionManagerUniqueName("tm.out");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setConsoleFileLimit((int) (byte) 1);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Collection<java.lang.Object> objCollection18 = properties15.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        boolean boolean25 = properties15.containsValue((java.lang.Object) atomikosProperties19);
        boolean boolean26 = properties15.isEmpty();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        java.lang.Object obj36 = properties28.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties39.getConsoleLogLevel();
        atomikosProperties31.setConsoleLogLevel(atomikosLoggingLevel41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setConsoleFileCount(100);
        atomikosProperties43.setAllowSubTransactions(true);
        boolean boolean48 = atomikosProperties43.isForceShutdownOnVmExit();
        int int49 = atomikosProperties43.getConsoleFileCount();
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        java.lang.Object obj51 = properties15.replace((java.lang.Object) atomikosLoggingLevel41, (java.lang.Object) atomikosProperties43);
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel41);
        boolean boolean53 = properties1.containsKey((java.lang.Object) atomikosProperties4);
        java.lang.String str54 = atomikosProperties4.getOutputDir();
        boolean boolean55 = atomikosProperties4.isAllowSubTransactions();
        atomikosProperties4.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties0.entrySet();
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream4, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEntrySet3);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        int int15 = atomikosProperties4.getMaxActives();
        long long16 = atomikosProperties4.getMaxTimeout();
        atomikosProperties4.setMaxActives(50);
        atomikosProperties4.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties4.setLogBaseName("tm.out");
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        java.lang.Object obj9 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setOutputDir("hi!");
        int int14 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setDefaultJtaTimeout(1L);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setLogBaseDir("tmlog");
        boolean boolean21 = properties5.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount(100);
        atomikosProperties22.setAllowSubTransactions(true);
        boolean boolean27 = atomikosProperties22.isForceShutdownOnVmExit();
        int int28 = atomikosProperties22.getConsoleFileCount();
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        atomikosProperties22.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.lang.String str39 = atomikosProperties34.getService();
        java.lang.String str40 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setOutputDir("tmlog");
        long long43 = atomikosProperties34.getMaxTimeout();
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean46 = atomikosProperties34.isAllowSubTransactions();
        java.lang.Object obj47 = properties5.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosProperties34);
        long long48 = atomikosProperties34.getDefaultJtaTimeout();
        java.util.Properties properties49 = atomikosProperties34.asProperties();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertNotNull(properties49);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setDefaultJtaTimeout(0L);
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties1.getConsoleLogLevel();
        boolean boolean11 = atomikosProperties1.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties1.asProperties();
        java.lang.String str13 = atomikosProperties1.getTransactionManagerUniqueName();
        java.lang.String str14 = atomikosProperties1.getConsoleFileName();
        java.util.Properties properties15 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.Object obj19 = properties15.put((java.lang.Object) atomikosProperties16, (java.lang.Object) 0L);
        java.lang.Object obj22 = properties15.setProperty("", "");
        java.util.Properties properties23 = new java.util.Properties(properties15);
        java.lang.Object obj24 = properties23.clone();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean28 = properties26.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getTransactionManagerUniqueName();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties33.getConsoleLogLevel();
        java.lang.Object obj39 = properties26.putIfAbsent((java.lang.Object) atomikosProperties29, (java.lang.Object) atomikosLoggingLevel38);
        boolean boolean40 = properties23.contains((java.lang.Object) atomikosProperties29);
        int int41 = atomikosProperties29.getMaxActives();
        int int42 = atomikosProperties29.getConsoleFileCount();
        atomikosProperties29.setOutputDir("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setConsoleFileCount((-1));
        java.lang.String str48 = atomikosProperties45.getOutputDir();
        atomikosProperties45.setLogBaseName("tm.out");
        atomikosProperties45.setForceShutdownOnVmExit(true);
        int int53 = atomikosProperties45.getConsoleFileCount();
        atomikosProperties45.setTransactionManagerUniqueName("tm.out");
        atomikosProperties45.setConsoleFileCount((int) (short) 0);
        boolean boolean58 = atomikosProperties45.isAllowSubTransactions();
        int int59 = atomikosProperties45.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties45.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties1.setConsoleLogLevel(atomikosLoggingLevel60);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        java.lang.Object obj17 = properties10.setProperty("", "");
        java.util.Properties properties18 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties19.getConsoleLogLevel();
        java.lang.Object obj25 = properties5.getOrDefault((java.lang.Object) properties10, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long27 = recovery26.getForgetOrphanedLogEntriesDelay();
        recovery26.setDelay((long) (short) 1);
        recovery26.setMaxRetries((int) (byte) 10);
        java.util.Properties properties32 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        java.lang.Object obj36 = properties32.put((java.lang.Object) atomikosProperties33, (java.lang.Object) 0L);
        java.util.Properties properties37 = new java.util.Properties(properties32);
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount(100);
        atomikosProperties39.setAllowSubTransactions(true);
        boolean boolean44 = atomikosProperties39.isAllowSubTransactions();
        int int45 = atomikosProperties39.getConsoleFileLimit();
        atomikosProperties39.setConsoleFileCount((int) (short) 0);
        boolean boolean48 = properties10.replace((java.lang.Object) (byte) 10, (java.lang.Object) properties37, (java.lang.Object) (short) 0);
        properties37.clear();
        java.lang.Object obj50 = properties37.clone();
        java.io.PrintStream printStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties37.list(printStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 86400000L + "'", long27 == 86400000L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.util.Set<java.lang.String> strSet35 = properties22.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection36 = properties22.values();
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.loadFromXML(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(objCollection36);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setAllowSubTransactions(false);
        atomikosProperties6.setMaxActives((-1));
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties18.putIfAbsent((java.lang.Object) atomikosProperties21, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel30);
        java.lang.String str33 = atomikosProperties6.getTransactionManagerUniqueName();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties6.getConsoleLogLevel();
        atomikosProperties6.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isSerialJtaTransactions();
        int int26 = atomikosProperties19.getConsoleFileLimit();
        long long27 = atomikosProperties19.getMaxTimeout();
        java.lang.String str28 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties19.getRecovery();
        recovery31.setMaxRetries((int) (byte) 0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(recovery31);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.lang.String> strSet8 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.lang.Object obj23 = properties18.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean24 = properties14.equals(obj23);
        java.util.Collection<java.lang.Object> objCollection25 = properties14.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties14.entrySet();
        java.util.Enumeration<?> wildcardEnumeration27 = properties14.propertyNames();
        java.util.Set<java.lang.Object> objSet28 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        java.util.Properties properties34 = atomikosProperties29.asProperties();
        java.lang.String str35 = atomikosProperties29.getService();
        atomikosProperties29.setService("hi!");
        atomikosProperties29.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = atomikosProperties29.getRecovery();
        boolean boolean41 = atomikosProperties29.isForceShutdownOnVmExit();
        long long42 = atomikosProperties29.getMaxTimeout();
        java.lang.Object obj43 = properties6.put((java.lang.Object) objSet28, (java.lang.Object) atomikosProperties29);
        atomikosProperties29.setEnableLogging(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(recovery40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        boolean boolean17 = properties1.containsKey((java.lang.Object) properties16);
        java.lang.String str18 = properties1.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean14 = atomikosProperties12.isForceShutdownOnVmExit();
        atomikosProperties12.setAllowSubTransactions(false);
        int int17 = atomikosProperties12.getMaxActives();
        boolean boolean18 = atomikosProperties12.isEnableLogging();
        boolean boolean19 = properties11.contains((java.lang.Object) atomikosProperties12);
        java.util.Properties properties20 = new java.util.Properties(properties11);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties4.getRecovery();
        long long15 = recovery14.getRetryInterval();
        recovery14.setRetryInterval(500L);
        long long18 = recovery14.getDelay();
        recovery14.setDelay((long) 35);
        recovery14.setMaxRetries((int) (short) -1);
        int int23 = recovery14.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties4.getRecovery();
        long long15 = recovery14.getRetryInterval();
        recovery14.setRetryInterval(500L);
        recovery14.setMaxRetries((int) (short) 1);
        recovery14.setRetryInterval((long) (byte) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        java.lang.Object obj9 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean13 = properties11.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getTransactionManagerUniqueName();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        int int22 = atomikosProperties18.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties18.getConsoleLogLevel();
        java.lang.Object obj24 = properties11.putIfAbsent((java.lang.Object) atomikosProperties14, (java.lang.Object) atomikosLoggingLevel23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long32 = recovery31.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        atomikosProperties37.setOutputDir("hi!");
        int int41 = atomikosProperties37.getConsoleFileLimit();
        java.lang.Object obj42 = properties34.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties37.getConsoleLogLevel();
        java.lang.String str44 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setThreadedTwoPhaseCommit(false);
        boolean boolean47 = properties11.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) recovery31, (java.lang.Object) false);
        boolean boolean48 = properties5.containsKey((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        java.lang.String str54 = atomikosProperties49.getService();
        java.lang.String str55 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setOutputDir("tmlog");
        long long58 = atomikosProperties49.getMaxTimeout();
        atomikosProperties49.setEnableLogging(true);
        atomikosProperties49.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj63 = properties5.get((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj64 = null;
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str70 = atomikosProperties69.getConsoleFileName();
        atomikosProperties69.setOutputDir("hi!");
        int int73 = atomikosProperties69.getConsoleFileLimit();
        java.lang.Object obj74 = properties66.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties69);
        atomikosProperties69.setOutputDir("hi!");
        atomikosProperties69.setLogBaseDir("tm.out");
        atomikosProperties69.setOutputDir("tm.out");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = properties5.putIfAbsent(obj64, (java.lang.Object) "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 86400000L + "'", long32 == 86400000L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "hi!" + "'", obj63, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.util.Collection<java.lang.Object> objCollection49 = properties29.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount(100);
        atomikosProperties50.setAllowSubTransactions(true);
        boolean boolean55 = atomikosProperties50.isForceShutdownOnVmExit();
        int int56 = atomikosProperties50.getConsoleFileCount();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Collection<java.lang.Object> objCollection63 = properties60.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getConsoleFileName();
        atomikosProperties64.setOutputDir("hi!");
        int int68 = atomikosProperties64.getConsoleFileLimit();
        java.util.Properties properties69 = atomikosProperties64.asProperties();
        boolean boolean70 = properties60.containsValue((java.lang.Object) atomikosProperties64);
        java.lang.Object obj71 = properties29.getOrDefault((java.lang.Object) int56, (java.lang.Object) atomikosProperties64);
        java.lang.String str72 = atomikosProperties64.getLogBaseDir();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.util.Set<java.lang.String> strSet49 = properties29.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties29.keys();
        java.util.Properties properties51 = new java.util.Properties(properties29);
        int int52 = properties51.size();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties51.elements();
        java.lang.String str56 = properties51.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str56, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setEnableLogging(false);
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long12 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        boolean boolean27 = atomikosProperties14.isSerialJtaTransactions();
        atomikosProperties14.setConsoleFileCount(20);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties14.getRecovery();
        atomikosProperties14.setCheckpointInterval(0L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(recovery30);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("tm.out", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj20 = properties13.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        java.lang.String str25 = atomikosProperties22.getOutputDir();
        atomikosProperties22.setLogBaseName("tm.out");
        boolean boolean28 = properties13.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount(100);
        atomikosProperties29.setAllowSubTransactions(true);
        java.lang.Object obj34 = properties13.remove((java.lang.Object) atomikosProperties29);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.lang.Object obj44 = properties36.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties36.entrySet();
        boolean boolean46 = properties13.containsValue((java.lang.Object) properties36);
        java.util.Properties properties47 = new java.util.Properties(properties36);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.lang.String str50 = properties36.getProperty("");
        java.lang.Object obj53 = properties36.setProperty("", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties36.keys();
        java.util.Properties properties55 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getConsoleFileName();
        java.lang.Object obj59 = properties55.put((java.lang.Object) atomikosProperties56, (java.lang.Object) 0L);
        atomikosProperties56.setThreadedTwoPhaseCommit(false);
        atomikosProperties56.setConsoleFileLimit((int) ' ');
        java.lang.String str64 = atomikosProperties56.getConsoleFileName();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str72 = atomikosProperties71.getConsoleFileName();
        atomikosProperties71.setOutputDir("hi!");
        int int75 = atomikosProperties71.getConsoleFileLimit();
        java.lang.Object obj76 = properties68.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties71);
        boolean boolean77 = atomikosProperties71.isForceShutdownOnVmExit();
        atomikosProperties71.setConsoleFileName("");
        java.lang.String str80 = atomikosProperties71.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = atomikosProperties71.getRecovery();
        long long82 = recovery81.getRetryInterval();
        recovery81.setRetryInterval(500L);
        long long85 = recovery81.getRetryInterval();
        long long86 = recovery81.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj87 = properties36.put((java.lang.Object) atomikosProperties56, (java.lang.Object) recovery81);
        atomikosProperties56.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties56.setMaxTimeout(10000L);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(recovery81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 500L + "'", long85 == 500L);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 86400000L + "'", long86 == 86400000L);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.util.Properties properties50 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties2.elements();
        java.util.Set<java.lang.String> strSet52 = properties2.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties2.keys();
        java.util.Properties properties54 = new java.util.Properties(properties2);
        java.lang.String str55 = properties54.toString();
        java.lang.String str57 = properties54.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getConsoleFileName();
        java.lang.String str60 = atomikosProperties58.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties61.getConsoleLogLevel();
        atomikosProperties58.setConsoleLogLevel(atomikosLoggingLevel63);
        boolean boolean65 = atomikosProperties58.isAllowSubTransactions();
        atomikosProperties58.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties58.getOutputDir();
        java.lang.String str69 = atomikosProperties58.getConsoleFileName();
        boolean boolean70 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setConsoleFileCount(100);
        atomikosProperties71.setAllowSubTransactions(true);
        atomikosProperties71.setMaxTimeout((long) '4');
        atomikosProperties71.setAllowSubTransactions(false);
        atomikosProperties71.setForceShutdownOnVmExit(false);
        atomikosProperties71.setForceShutdownOnVmExit(false);
        atomikosProperties71.setAllowSubTransactions(true);
        java.util.Properties properties86 = atomikosProperties71.asProperties();
        boolean boolean87 = properties54.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) properties86);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties19 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.Object obj23 = properties19.put((java.lang.Object) atomikosProperties20, (java.lang.Object) 0L);
        java.lang.Object obj26 = properties19.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties28.getConsoleLogLevel();
        java.lang.Object obj34 = properties14.getOrDefault((java.lang.Object) properties19, (java.lang.Object) atomikosProperties28);
        boolean boolean35 = properties0.contains((java.lang.Object) properties19);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj44 = properties37.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet45 = properties37.keySet();
        java.lang.Object obj46 = properties19.get((java.lang.Object) objSet45);
        java.util.Collection<java.lang.Object> objCollection47 = properties19.values();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection47);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties5.entrySet();
        int int17 = properties5.size();
        java.util.Properties properties18 = new java.util.Properties(properties5);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties20.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        long long26 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        properties31.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        properties34.clear();
        java.util.Properties properties40 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        java.lang.Object obj44 = properties40.put((java.lang.Object) atomikosProperties41, (java.lang.Object) 0L);
        java.util.Properties properties45 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        atomikosProperties46.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj51 = properties40.remove((java.lang.Object) atomikosProperties46);
        java.lang.Object obj52 = properties29.getOrDefault((java.lang.Object) properties34, (java.lang.Object) properties40);
        java.lang.Object obj53 = properties20.replace((java.lang.Object) atomikosProperties24, obj52);
        atomikosProperties24.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties24.setOutputDir("tmlog");
        boolean boolean58 = atomikosProperties24.isAllowSubTransactions();
        boolean boolean59 = properties5.equals((java.lang.Object) boolean58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        long long62 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties63 = atomikosProperties60.asProperties();
        boolean boolean64 = properties5.containsValue((java.lang.Object) properties63);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 19 + "'", int17 == 19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj45 = properties34.remove((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj48 = properties29.putIfAbsent((java.lang.Object) boolean46, (java.lang.Object) 500L);
        java.util.Set<java.lang.String> strSet49 = properties29.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties29.keys();
        java.util.Properties properties51 = new java.util.Properties(properties29);
        int int52 = properties29.size();
        java.io.PrintStream printStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.list(printStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) '#');
        int int25 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long30 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=32, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000, =}");
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str51 = atomikosProperties50.getConsoleFileName();
        atomikosProperties50.setOutputDir("hi!");
        int int54 = atomikosProperties50.getConsoleFileLimit();
        java.util.Properties properties55 = atomikosProperties50.asProperties();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        java.util.Properties properties65 = atomikosProperties60.asProperties();
        java.lang.String str66 = atomikosProperties60.getService();
        atomikosProperties60.setService("hi!");
        atomikosProperties60.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties60.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getConsoleFileName();
        atomikosProperties72.setOutputDir("hi!");
        java.lang.String str76 = atomikosProperties72.getOutputDir();
        boolean boolean77 = properties26.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties60.getConsoleLogLevel();
        atomikosProperties60.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties60.setLogBaseName("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        java.lang.String str83 = atomikosProperties60.getLogBaseDir();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.keys();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        int int6 = properties5.size();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties10.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet16 = properties10.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setConsoleFileCount((-1));
        java.lang.String str20 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("tm.out");
        int int23 = atomikosProperties17.getConsoleFileCount();
        boolean boolean24 = properties10.containsKey((java.lang.Object) atomikosProperties17);
        boolean boolean25 = properties5.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Set<java.lang.Object> objSet26 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getTransactionManagerUniqueName();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 100);
        java.lang.Object obj31 = properties2.putIfAbsent((java.lang.Object) properties5, (java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setConsoleFileCount(100);
        atomikosProperties32.setAllowSubTransactions(true);
        boolean boolean37 = atomikosProperties32.isForceShutdownOnVmExit();
        java.util.Properties properties38 = atomikosProperties32.asProperties();
        atomikosProperties32.setConsoleFileName("");
        boolean boolean41 = atomikosProperties32.isSerialJtaTransactions();
        boolean boolean42 = atomikosProperties32.isEnableLogging();
        boolean boolean43 = properties5.containsValue((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj48 = properties44.setProperty("hi!", "");
        java.util.Properties properties49 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str51 = atomikosProperties50.getConsoleFileName();
        java.lang.Object obj53 = properties49.put((java.lang.Object) atomikosProperties50, (java.lang.Object) 0L);
        java.lang.Object obj56 = properties49.setProperty("", "");
        java.util.Properties properties57 = new java.util.Properties(properties49);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        int int67 = properties66.size();
        boolean boolean68 = properties66.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties66.keySet();
        java.lang.Object obj70 = properties44.replace((java.lang.Object) properties62, (java.lang.Object) objSet69);
        java.lang.Object obj71 = properties5.remove((java.lang.Object) properties44);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        atomikosProperties11.setLogBaseName("tm.out");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) atomikosProperties11);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount((-1));
        java.lang.String str33 = atomikosProperties30.getOutputDir();
        atomikosProperties30.setLogBaseName("tm.out");
        boolean boolean36 = properties21.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setConsoleFileCount(100);
        atomikosProperties37.setAllowSubTransactions(true);
        java.lang.Object obj42 = properties21.remove((java.lang.Object) atomikosProperties37);
        java.util.Properties properties43 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        atomikosProperties44.setOutputDir("hi!");
        int int48 = atomikosProperties44.getConsoleFileLimit();
        java.lang.String str49 = atomikosProperties44.getService();
        java.lang.String str50 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setOutputDir("tmlog");
        long long53 = atomikosProperties44.getMaxTimeout();
        boolean boolean54 = properties43.contains((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setDefaultJtaTimeout((long) 100);
        java.util.Properties properties57 = atomikosProperties44.asProperties();
        atomikosProperties44.setMaxActives(20);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        recovery60.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long64 = recovery60.getRetryInterval();
        recovery60.setRetryInterval((long) 'a');
        java.lang.Object obj67 = properties9.putIfAbsent((java.lang.Object) atomikosProperties44, (java.lang.Object) 'a');
        int int68 = atomikosProperties44.getConsoleFileLimit();
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10000L + "'", long64 == 10000L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        int int11 = atomikosProperties0.getMaxActives();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str13 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<?> wildcardEnumeration10 = properties7.propertyNames();
        java.lang.Object obj11 = properties7.clone();
        int int12 = properties7.size();
        java.lang.String str13 = properties7.toString();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream14, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        int int11 = atomikosProperties4.getConsoleFileCount();
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        java.lang.String str15 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties4.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(recovery16);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileLimit(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass11 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        properties29.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        int int40 = properties39.size();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        atomikosProperties44.setLogBaseDir("tm.out");
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean55 = properties37.replace((java.lang.Object) objSet42, (java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties44);
        java.lang.String str56 = atomikosProperties44.getService();
        java.lang.Object obj57 = properties29.remove((java.lang.Object) atomikosProperties44);
        java.util.Properties properties58 = new java.util.Properties(properties29);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        boolean boolean64 = properties62.containsValue((java.lang.Object) 10.0d);
        java.lang.Object obj66 = properties60.getOrDefault((java.lang.Object) boolean64, (java.lang.Object) (-1L));
        java.lang.Object obj67 = properties58.get((java.lang.Object) properties60);
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        int int70 = properties69.size();
        boolean boolean71 = properties69.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties69.keySet();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties(properties75);
        properties76.clear();
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Collection<java.lang.Object> objCollection79 = properties76.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str81 = atomikosProperties80.getConsoleFileName();
        atomikosProperties80.setOutputDir("hi!");
        int int84 = atomikosProperties80.getConsoleFileLimit();
        java.util.Properties properties85 = atomikosProperties80.asProperties();
        boolean boolean86 = properties76.containsValue((java.lang.Object) atomikosProperties80);
        boolean boolean87 = properties76.isEmpty();
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Properties properties89 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties69.keys();
        java.lang.Object obj91 = properties69.clone();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.io.PrintWriter printWriter93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.list(printWriter93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objCollection79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tm.out" + "'", str81, "tm.out");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        int int27 = atomikosProperties14.getConsoleFileLimit();
        boolean boolean28 = atomikosProperties14.isForceShutdownOnVmExit();
        java.lang.String str29 = atomikosProperties14.getConsoleFileName();
        java.lang.String str30 = atomikosProperties14.getLogBaseDir();
        atomikosProperties14.setAllowSubTransactions(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        boolean boolean9 = properties7.isEmpty();
        boolean boolean10 = properties1.containsValue((java.lang.Object) boolean9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        atomikosProperties13.setLogBaseDir("tm.out");
        java.lang.String str21 = atomikosProperties13.getLogBaseDir();
        atomikosProperties13.setDefaultJtaTimeout(10L);
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = atomikosProperties13.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = atomikosProperties13.getRecovery();
        java.lang.String str27 = atomikosProperties13.getOutputDir();
        int int28 = atomikosProperties13.getConsoleFileLimit();
        boolean boolean29 = properties1.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties32 = atomikosProperties13.asProperties();
        java.lang.String str35 = properties32.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(recovery25);
        org.junit.Assert.assertNotNull(recovery26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str35, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj7 = properties0.get((java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setConsoleFileCount((-1));
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj21 = properties14.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        java.lang.String str26 = atomikosProperties23.getOutputDir();
        atomikosProperties23.setLogBaseName("tm.out");
        boolean boolean29 = properties14.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setConsoleFileCount(100);
        atomikosProperties30.setAllowSubTransactions(true);
        java.lang.Object obj35 = properties14.remove((java.lang.Object) atomikosProperties30);
        atomikosProperties30.setAllowSubTransactions(false);
        atomikosProperties30.setSerialJtaTransactions(true);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        atomikosProperties44.setOutputDir("hi!");
        int int48 = atomikosProperties44.getConsoleFileLimit();
        java.lang.Object obj49 = properties41.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel50);
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel50);
        atomikosProperties8.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Set<java.lang.String> strSet57 = properties56.stringPropertyNames();
        java.lang.Object obj58 = properties0.replace((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) properties56);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Collection<java.lang.Object> objCollection15 = properties1.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.lang.Object obj25 = properties17.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties20);
        boolean boolean26 = properties1.equals((java.lang.Object) properties17);
        java.util.Properties properties27 = new java.util.Properties(properties1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.lang.String str12 = atomikosProperties6.getService();
        atomikosProperties6.setService("hi!");
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass26 = recovery24.getClass();
        boolean boolean27 = properties22.containsKey((java.lang.Object) wildcardClass26);
        boolean boolean28 = properties1.replace((java.lang.Object) properties19, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass26);
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties29.entrySet();
        boolean boolean31 = properties29.isEmpty();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        int int5 = properties4.size();
        boolean boolean6 = properties4.isEmpty();
        java.lang.Object obj7 = properties0.remove((java.lang.Object) boolean6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj18 = properties11.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.lang.String str23 = atomikosProperties20.getOutputDir();
        atomikosProperties20.setLogBaseName("tm.out");
        boolean boolean26 = properties11.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount(100);
        atomikosProperties27.setAllowSubTransactions(true);
        java.lang.Object obj32 = properties11.remove((java.lang.Object) atomikosProperties27);
        boolean boolean33 = atomikosProperties27.isSerialJtaTransactions();
        int int34 = atomikosProperties27.getConsoleFileLimit();
        long long35 = atomikosProperties27.getMaxTimeout();
        java.lang.Object obj36 = properties0.get((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setAllowSubTransactions(false);
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(properties39);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = properties3.containsKey((java.lang.Object) atomikosProperties10);
        atomikosProperties10.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties10.getRecovery();
        atomikosProperties10.setCheckpointInterval(500L);
        atomikosProperties10.setSerialJtaTransactions(true);
        int int25 = atomikosProperties10.getConsoleFileCount();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        long long12 = atomikosProperties0.getMaxTimeout();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Set<java.lang.Object> objSet12 = properties3.keySet();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean16 = properties14.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getTransactionManagerUniqueName();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties21.getConsoleLogLevel();
        java.lang.Object obj27 = properties14.putIfAbsent((java.lang.Object) atomikosProperties17, (java.lang.Object) atomikosLoggingLevel26);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) (byte) -1);
        java.util.Properties properties31 = new java.util.Properties(properties28);
        boolean boolean32 = properties14.equals((java.lang.Object) properties28);
        java.lang.Object obj33 = properties3.get((java.lang.Object) boolean32);
        boolean boolean34 = properties3.isEmpty();
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(outputStream35, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        int int3 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("");
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{hi!=}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.keys();
        boolean boolean20 = properties18.isEmpty();
        java.util.Properties properties21 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str23 = atomikosProperties22.getConsoleFileName();
        java.lang.Object obj25 = properties21.put((java.lang.Object) atomikosProperties22, (java.lang.Object) 0L);
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.lang.Object obj28 = properties21.get((java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount((-1));
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj42 = properties35.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setConsoleFileCount((-1));
        java.lang.String str47 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("tm.out");
        boolean boolean50 = properties35.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setConsoleFileCount(100);
        atomikosProperties51.setAllowSubTransactions(true);
        java.lang.Object obj56 = properties35.remove((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setAllowSubTransactions(false);
        atomikosProperties51.setSerialJtaTransactions(true);
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        atomikosProperties65.setOutputDir("hi!");
        int int69 = atomikosProperties65.getConsoleFileLimit();
        java.lang.Object obj70 = properties62.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel71);
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel71);
        atomikosProperties29.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Set<java.lang.String> strSet78 = properties77.stringPropertyNames();
        java.lang.Object obj79 = properties21.replace((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) properties77);
        properties77.clear();
        java.util.Properties properties81 = new java.util.Properties(properties77);
        boolean boolean82 = properties18.containsValue((java.lang.Object) properties81);
        java.lang.Object obj85 = properties81.setProperty("{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = properties12.toString();
        java.util.Collection<java.lang.Object> objCollection14 = properties12.values();
        int int15 = properties12.size();
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream16, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=18, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNotNull(properties12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str13, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 20 + "'", int15 == 20);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.lang.Object obj22 = properties15.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setConsoleFileCount((-1));
        java.lang.String str27 = atomikosProperties24.getOutputDir();
        atomikosProperties24.setLogBaseName("tm.out");
        boolean boolean30 = properties15.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        java.lang.Object obj36 = properties15.remove((java.lang.Object) atomikosProperties31);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        java.lang.Object obj46 = properties38.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties38.entrySet();
        boolean boolean48 = properties15.containsValue((java.lang.Object) properties38);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        java.util.Collection<java.lang.Object> objCollection50 = properties38.values();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties11.entrySet();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection54 = properties53.values();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.lang.Object obj63 = properties56.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setConsoleFileCount((-1));
        java.lang.String str68 = atomikosProperties65.getOutputDir();
        atomikosProperties65.setLogBaseName("tm.out");
        boolean boolean71 = properties56.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setConsoleFileCount(100);
        atomikosProperties72.setAllowSubTransactions(true);
        java.lang.Object obj77 = properties56.remove((java.lang.Object) atomikosProperties72);
        java.util.Properties properties78 = new java.util.Properties(properties56);
        java.lang.String str80 = properties78.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj82 = properties11.clone();
        java.lang.String str84 = properties11.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.lang.String str5 = properties2.getProperty("hi!");
        properties2.clear();
        java.util.Collection<java.lang.Object> objCollection7 = properties2.values();
        java.util.Properties properties8 = new java.util.Properties(properties2);
        properties2.clear();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(objCollection7);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.lang.String str8 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties4.getRecovery();
        int int12 = recovery11.getMaxRetries();
        recovery11.setRetryInterval((long) 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.lang.String str8 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        long long10 = recovery9.getDelay();
        recovery9.setRetryInterval(52L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.lang.String str12 = atomikosProperties6.getService();
        atomikosProperties6.setService("hi!");
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass26 = recovery24.getClass();
        boolean boolean27 = properties22.containsKey((java.lang.Object) wildcardClass26);
        boolean boolean28 = properties1.replace((java.lang.Object) properties19, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass26);
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties29.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getConsoleFileName();
        java.lang.String str34 = atomikosProperties32.getTransactionManagerUniqueName();
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        long long37 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setLogBaseDir("tmlog");
        java.lang.Object obj40 = properties29.get((java.lang.Object) atomikosProperties32);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isSerialJtaTransactions();
        int int26 = atomikosProperties19.getConsoleFileLimit();
        long long27 = atomikosProperties19.getMaxTimeout();
        java.lang.String str28 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) 32);
        atomikosProperties19.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        int int12 = atomikosProperties0.getMaxActives();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        java.lang.String str14 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.lang.String str32 = properties29.getProperty("");
        boolean boolean33 = properties3.equals((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.util.Properties properties39 = atomikosProperties34.asProperties();
        java.lang.String str40 = atomikosProperties34.getService();
        atomikosProperties34.setService("hi!");
        atomikosProperties34.setConsoleFileName("tm.out");
        boolean boolean45 = properties3.containsValue((java.lang.Object) atomikosProperties34);
        properties3.clear();
        java.lang.String str47 = properties3.toString();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long22 = recovery21.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.lang.Object obj32 = properties24.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties27);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties27.getConsoleLogLevel();
        java.lang.String str34 = atomikosProperties27.getTransactionManagerUniqueName();
        atomikosProperties27.setThreadedTwoPhaseCommit(false);
        boolean boolean37 = properties1.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) recovery21, (java.lang.Object) false);
        java.lang.String str39 = properties1.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        atomikosProperties40.setConsoleFileName("");
        boolean boolean45 = properties1.containsKey((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet46 = properties1.keySet();
        int int47 = properties1.size();
        java.lang.Object obj50 = properties1.setProperty("{=hi!}", "tmlog");
        java.util.Properties properties51 = new java.util.Properties(properties1);
        java.util.Properties properties52 = new java.util.Properties(properties1);
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.keys();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        properties56.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setOutputDir("hi!");
        int int63 = atomikosProperties59.getConsoleFileLimit();
        java.lang.Object obj64 = properties56.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean65 = atomikosProperties59.isForceShutdownOnVmExit();
        atomikosProperties59.setCheckpointInterval((long) '4');
        java.lang.Object obj68 = properties53.get((java.lang.Object) atomikosProperties59);
        java.lang.String str69 = atomikosProperties59.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 86400000L + "'", long22 == 86400000L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        java.lang.Object obj17 = properties10.setProperty("", "");
        java.util.Properties properties18 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties19.getConsoleLogLevel();
        java.lang.Object obj25 = properties5.getOrDefault((java.lang.Object) properties10, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount(100);
        int int29 = atomikosProperties26.getConsoleFileCount();
        atomikosProperties26.setOutputDir("");
        java.lang.String str32 = atomikosProperties26.getConsoleFileName();
        boolean boolean33 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setConsoleFileCount((-1));
        atomikosProperties37.setConsoleFileName("");
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getConsoleFileName();
        atomikosProperties46.setOutputDir("hi!");
        int int50 = atomikosProperties46.getConsoleFileLimit();
        java.lang.Object obj51 = properties43.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties46);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = atomikosProperties46.getConsoleLogLevel();
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel52);
        int int54 = atomikosProperties37.getConsoleFileCount();
        java.lang.Object obj55 = properties10.put((java.lang.Object) objEnumeration36, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties56 = new java.util.Properties(properties10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream11, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        java.lang.Object obj26 = properties24.clone();
        java.util.Collection<java.lang.Object> objCollection27 = properties24.values();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean31 = properties29.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str33 = atomikosProperties32.getTransactionManagerUniqueName();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties36.getConsoleLogLevel();
        java.lang.Object obj42 = properties29.putIfAbsent((java.lang.Object) atomikosProperties32, (java.lang.Object) atomikosLoggingLevel41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getConsoleFileName();
        atomikosProperties43.setOutputDir("hi!");
        int int47 = atomikosProperties43.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties43.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long50 = recovery49.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str56 = atomikosProperties55.getConsoleFileName();
        atomikosProperties55.setOutputDir("hi!");
        int int59 = atomikosProperties55.getConsoleFileLimit();
        java.lang.Object obj60 = properties52.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties55);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties55.getConsoleLogLevel();
        java.lang.String str62 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        boolean boolean65 = properties29.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) recovery49, (java.lang.Object) false);
        long long66 = recovery49.getRetryInterval();
        recovery49.setRetryInterval(35L);
        boolean boolean69 = properties24.containsKey((java.lang.Object) recovery49);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 86400000L + "'", long50 == 86400000L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tm.out" + "'", str56, "tm.out");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long5 = recovery4.getForgetOrphanedLogEntriesDelay();
        recovery4.setDelay((long) (short) 1);
        recovery4.setRetryInterval(100L);
        boolean boolean10 = properties3.containsValue((java.lang.Object) 100L);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        int int13 = properties12.size();
        boolean boolean14 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        boolean boolean20 = properties18.isEmpty();
        boolean boolean21 = properties12.containsValue((java.lang.Object) boolean20);
        java.util.Properties properties22 = new java.util.Properties(properties12);
        java.util.Enumeration<?> wildcardEnumeration23 = properties22.propertyNames();
        boolean boolean24 = properties3.containsKey((java.lang.Object) properties22);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        java.lang.Object obj34 = properties26.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties29);
        boolean boolean35 = atomikosProperties29.isForceShutdownOnVmExit();
        atomikosProperties29.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties29.getService();
        atomikosProperties29.setForceShutdownOnVmExit(true);
        java.util.Properties properties41 = atomikosProperties29.asProperties();
        java.util.Properties properties42 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getConsoleFileName();
        java.lang.Object obj46 = properties42.put((java.lang.Object) atomikosProperties43, (java.lang.Object) 0L);
        java.util.Properties properties47 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount((-1));
        atomikosProperties48.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj53 = properties42.remove((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setCheckpointInterval((long) 1);
        boolean boolean56 = atomikosProperties48.isThreadedTwoPhaseCommit();
        boolean boolean57 = properties41.contains((java.lang.Object) atomikosProperties48);
        java.util.Properties properties58 = atomikosProperties48.asProperties();
        java.lang.Object obj59 = properties3.get((java.lang.Object) properties58);
        java.lang.String str62 = properties3.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str62, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        atomikosProperties0.setMaxActives((int) (short) 100);
        atomikosProperties0.setDefaultJtaTimeout(0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream16, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=32, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setMaxTimeout(10000L);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setOutputDir("{hi!=}");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=hi!, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        recovery0.setMaxRetries((-1));
        long long5 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((int) (short) 100);
        recovery0.setDelay((long) (short) 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setOutputDir("hi!");
        int int9 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        java.lang.String str11 = atomikosProperties5.getService();
        int int12 = atomikosProperties5.getMaxActives();
        boolean boolean13 = properties1.equals((java.lang.Object) atomikosProperties5);
        int int14 = atomikosProperties5.getConsoleFileCount();
        java.util.Properties properties15 = atomikosProperties5.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.lang.Object obj25 = properties17.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setLogBaseName("tm.out");
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        atomikosProperties20.setSerialJtaTransactions(true);
        atomikosProperties20.setCheckpointInterval(10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        java.lang.String str37 = atomikosProperties33.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setConsoleFileCount((-1));
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj51 = properties44.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setConsoleFileCount((-1));
        java.lang.String str56 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setLogBaseName("tm.out");
        boolean boolean59 = properties44.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setConsoleFileCount(100);
        atomikosProperties60.setAllowSubTransactions(true);
        java.lang.Object obj65 = properties44.remove((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setAllowSubTransactions(false);
        atomikosProperties60.setSerialJtaTransactions(true);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        properties71.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str75 = atomikosProperties74.getConsoleFileName();
        atomikosProperties74.setOutputDir("hi!");
        int int78 = atomikosProperties74.getConsoleFileLimit();
        java.lang.Object obj79 = properties71.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties74);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        atomikosProperties60.setConsoleLogLevel(atomikosLoggingLevel80);
        atomikosProperties38.setConsoleLogLevel(atomikosLoggingLevel80);
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel80);
        atomikosProperties20.setConsoleLogLevel(atomikosLoggingLevel80);
        boolean boolean85 = properties15.containsValue((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        int int88 = atomikosProperties20.getMaxActives();
        long long89 = atomikosProperties20.getCheckpointInterval();
        atomikosProperties20.setCheckpointInterval(10L);
        java.lang.String str92 = atomikosProperties20.getOutputDir();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tm.out" + "'", str75, "tm.out");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 50 + "'", int88 == 50);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 10000L + "'", long89 == 10000L);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        int int17 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        boolean boolean23 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=10}");
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setMaxActives((int) (byte) -1);
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) -1);
        boolean boolean21 = atomikosProperties4.isEnableLogging();
        java.lang.Class<?> wildcardClass22 = atomikosProperties4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet4 = properties1.keySet();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        boolean boolean19 = properties8.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        boolean boolean26 = properties24.isEmpty();
        boolean boolean27 = properties21.equals((java.lang.Object) boolean26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.keys();
        java.util.Set<java.lang.Object> objSet29 = properties21.keySet();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objSet4);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objSet29);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Collection<java.lang.Object> objCollection15 = properties1.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.lang.Object obj25 = properties17.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties20);
        boolean boolean26 = properties1.equals((java.lang.Object) properties17);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj30 = null;
        boolean boolean31 = properties27.equals(obj30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties27.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.elements();
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        boolean boolean39 = properties27.containsValue((java.lang.Object) properties34);
        java.lang.Object obj40 = properties34.clone();
        boolean boolean41 = properties17.contains((java.lang.Object) properties34);
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.store(writer42, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long5 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getDelay();
        long long8 = recovery6.getDelay();
        recovery6.setRetryInterval((long) 35);
        recovery6.setDelay((long) 'a');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        atomikosProperties33.setAllowSubTransactions(false);
        boolean boolean38 = properties3.contains((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery43 = atomikosProperties39.getRecovery();
        recovery43.setDelay((long) 20);
        recovery43.setDelay((long) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount((-1));
        java.lang.String str51 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setLogBaseName("tm.out");
        atomikosProperties48.setLogBaseDir("tm.out");
        boolean boolean56 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setConsoleFileCount(19);
        java.lang.String str59 = atomikosProperties48.getLogBaseName();
        java.util.Properties properties60 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getConsoleFileName();
        java.lang.Object obj64 = properties60.put((java.lang.Object) atomikosProperties61, (java.lang.Object) 0L);
        long long65 = atomikosProperties61.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties61.getService();
        java.util.Properties properties67 = atomikosProperties61.asProperties();
        long long68 = atomikosProperties61.getCheckpointInterval();
        boolean boolean69 = atomikosProperties61.isSerialJtaTransactions();
        java.util.Properties properties70 = atomikosProperties61.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        boolean boolean72 = properties3.replace((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties48, (java.lang.Object) objEnumeration71);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertNotNull(recovery43);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        int int9 = atomikosProperties6.getConsoleFileCount();
        atomikosProperties6.setOutputDir("");
        java.lang.String str12 = atomikosProperties6.getConsoleFileName();
        long long13 = atomikosProperties6.getMaxTimeout();
        atomikosProperties6.setMaxActives(100);
        int int16 = atomikosProperties6.getConsoleFileCount();
        int int17 = atomikosProperties6.getConsoleFileCount();
        java.lang.String str18 = atomikosProperties6.getOutputDir();
        java.lang.String str19 = atomikosProperties6.getConsoleFileName();
        java.lang.String str20 = atomikosProperties6.getService();
        java.lang.String str21 = atomikosProperties6.getService();
        java.util.Properties properties22 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        java.lang.Object obj26 = properties22.put((java.lang.Object) atomikosProperties23, (java.lang.Object) 0L);
        java.util.Properties properties27 = new java.util.Properties(properties22);
        java.util.Set<java.lang.Object> objSet28 = properties27.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getTransactionManagerUniqueName();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 100);
        int int34 = atomikosProperties30.getConsoleFileLimit();
        java.lang.String str35 = atomikosProperties30.getConsoleFileName();
        java.lang.Object obj36 = properties27.putIfAbsent((java.lang.Object) (-1.0f), (java.lang.Object) atomikosProperties30);
        atomikosProperties30.setForceShutdownOnVmExit(true);
        boolean boolean39 = properties5.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) true);
        boolean boolean40 = atomikosProperties6.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties7.keys();
        java.util.Enumeration<?> wildcardEnumeration45 = properties7.propertyNames();
        int int46 = properties7.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties7.entrySet();
        java.util.Enumeration<?> wildcardEnumeration48 = properties7.propertyNames();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long11 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.setMaxRetries((int) '4');
        recovery0.setMaxRetries((int) '#');
        recovery0.setMaxRetries((int) (byte) -1);
        long long10 = recovery0.getDelay();
        recovery0.setMaxRetries(1);
        recovery0.setDelay(2L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.lang.Object obj47 = properties39.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel48);
        boolean boolean51 = properties0.containsKey((java.lang.Object) atomikosProperties6);
        java.lang.String str52 = atomikosProperties6.getTransactionManagerUniqueName();
        java.util.Properties properties53 = atomikosProperties6.asProperties();
        java.lang.String str54 = atomikosProperties6.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        boolean boolean14 = properties3.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.lang.Object obj24 = properties16.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        boolean boolean36 = atomikosProperties31.isForceShutdownOnVmExit();
        int int37 = atomikosProperties31.getConsoleFileCount();
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Object obj39 = properties3.replace((java.lang.Object) atomikosLoggingLevel29, (java.lang.Object) atomikosProperties31);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties3.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getTransactionManagerUniqueName();
        boolean boolean43 = atomikosProperties41.isForceShutdownOnVmExit();
        java.util.Properties properties44 = atomikosProperties41.asProperties();
        java.lang.String str45 = atomikosProperties41.getTransactionManagerUniqueName();
        java.lang.Object obj46 = properties3.remove((java.lang.Object) atomikosProperties41);
        java.lang.Object obj47 = properties3.clone();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.elements();
        java.util.Properties properties7 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        java.lang.Object obj11 = properties7.put((java.lang.Object) atomikosProperties8, (java.lang.Object) 0L);
        boolean boolean12 = properties0.containsValue((java.lang.Object) properties7);
        java.util.Properties properties13 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        atomikosProperties14.setDefaultJtaTimeout(1L);
        atomikosProperties14.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties14.getConsoleLogLevel();
        java.lang.String str24 = atomikosProperties14.getConsoleFileName();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        java.util.Properties properties29 = new java.util.Properties(properties25);
        java.lang.String str30 = properties25.toString();
        java.lang.Object obj31 = properties7.put((java.lang.Object) str24, (java.lang.Object) properties25);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Collection<java.lang.Object> objCollection38 = properties35.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties44 = atomikosProperties39.asProperties();
        boolean boolean45 = properties35.containsValue((java.lang.Object) atomikosProperties39);
        java.lang.String str46 = atomikosProperties39.getService();
        atomikosProperties39.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean49 = atomikosProperties39.isEnableLogging();
        java.lang.Object obj50 = properties25.get((java.lang.Object) boolean49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        atomikosProperties51.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties51.getConsoleLogLevel();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        java.lang.Object obj65 = properties57.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties60);
        atomikosProperties60.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = atomikosProperties68.getConsoleLogLevel();
        atomikosProperties60.setConsoleLogLevel(atomikosLoggingLevel70);
        java.lang.String str72 = atomikosProperties60.getLogBaseDir();
        atomikosProperties60.setTransactionManagerUniqueName("{hi!=}");
        java.lang.Object obj75 = properties25.put((java.lang.Object) atomikosProperties51, (java.lang.Object) "{hi!=}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        boolean boolean10 = properties5.isEmpty();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        int int13 = properties12.size();
        boolean boolean14 = properties12.isEmpty();
        java.util.Properties properties15 = new java.util.Properties(properties12);
        java.util.Properties properties16 = new java.util.Properties(properties12);
        int int17 = properties12.size();
        java.util.Properties properties18 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        java.lang.String str25 = atomikosProperties19.getService();
        atomikosProperties19.setService("hi!");
        java.lang.Object obj29 = properties18.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties34.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        int int47 = atomikosProperties41.getConsoleFileCount();
        boolean boolean48 = properties34.containsKey((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = atomikosProperties41.getRecovery();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean55 = properties53.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties60.getConsoleLogLevel();
        java.lang.Object obj66 = properties53.putIfAbsent((java.lang.Object) atomikosProperties56, (java.lang.Object) atomikosLoggingLevel65);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.get((java.lang.Object) (byte) -1);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        boolean boolean71 = properties53.equals((java.lang.Object) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties53.keys();
        java.lang.Object obj73 = properties12.getOrDefault((java.lang.Object) atomikosProperties41, (java.lang.Object) properties53);
        atomikosProperties41.setForceShutdownOnVmExit(true);
        java.lang.String str76 = atomikosProperties41.getOutputDir();
        java.lang.String str77 = atomikosProperties41.getLogBaseName();
        java.util.Properties properties78 = atomikosProperties41.asProperties();
        boolean boolean79 = properties5.equals((java.lang.Object) atomikosProperties41);
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection81 = properties80.values();
        java.util.Properties properties82 = new java.util.Properties(properties80);
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties82.elements();
        java.lang.String str85 = properties82.getProperty("tmlog");
        java.util.Properties properties86 = new java.util.Properties(properties82);
        boolean boolean87 = properties5.contains((java.lang.Object) properties82);
        java.util.Set<java.lang.Object> objSet88 = properties82.keySet();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(recovery51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tm.out" + "'", str77, "tm.out");
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objSet88);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        boolean boolean12 = properties0.isEmpty();
        java.util.Properties properties13 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        boolean boolean19 = atomikosProperties14.isForceShutdownOnVmExit();
        boolean boolean20 = atomikosProperties14.isForceShutdownOnVmExit();
        java.lang.String str21 = atomikosProperties14.getService();
        int int22 = atomikosProperties14.getConsoleFileLimit();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Properties properties48 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        java.lang.String str54 = atomikosProperties49.getService();
        java.lang.String str55 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setOutputDir("tmlog");
        long long58 = atomikosProperties49.getMaxTimeout();
        boolean boolean59 = properties48.contains((java.lang.Object) atomikosProperties49);
        java.util.Properties properties60 = new java.util.Properties(properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileCount(100);
        int int64 = atomikosProperties61.getConsoleFileCount();
        atomikosProperties61.setOutputDir("");
        java.lang.String str67 = atomikosProperties61.getConsoleFileName();
        int int68 = atomikosProperties61.getConsoleFileCount();
        boolean boolean69 = atomikosProperties61.isEnableLogging();
        java.lang.String str70 = atomikosProperties61.getConsoleFileName();
        boolean boolean71 = atomikosProperties61.isSerialJtaTransactions();
        atomikosProperties61.setService("tm.out");
        boolean boolean74 = properties60.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties75 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str77 = atomikosProperties76.getConsoleFileName();
        java.lang.Object obj79 = properties75.put((java.lang.Object) atomikosProperties76, (java.lang.Object) 0L);
        java.lang.Object obj82 = properties75.setProperty("", "");
        java.lang.Object obj85 = properties75.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str87 = atomikosProperties86.getTransactionManagerUniqueName();
        atomikosProperties86.setAllowSubTransactions(false);
        boolean boolean90 = properties75.containsKey((java.lang.Object) atomikosProperties86);
        atomikosProperties86.setConsoleFileLimit(100);
        boolean boolean94 = properties60.remove((java.lang.Object) atomikosProperties86, (java.lang.Object) 50);
        java.lang.String str95 = atomikosProperties86.getOutputDir();
        java.lang.Object obj96 = properties13.getOrDefault((java.lang.Object) atomikosProperties14, (java.lang.Object) atomikosProperties86);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tm.out" + "'", str77, "tm.out");
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getService();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long10 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int9 = atomikosProperties0.getConsoleFileCount();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        java.lang.Class<?> wildcardClass11 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str16 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        java.util.Collection<java.lang.Object> objCollection11 = properties1.values();
        java.util.Properties properties12 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        java.lang.String str17 = atomikosProperties13.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj31 = properties24.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        java.lang.String str36 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setLogBaseName("tm.out");
        boolean boolean39 = properties24.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount(100);
        atomikosProperties40.setAllowSubTransactions(true);
        java.lang.Object obj45 = properties24.remove((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setAllowSubTransactions(false);
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        atomikosProperties54.setOutputDir("hi!");
        int int58 = atomikosProperties54.getConsoleFileLimit();
        java.lang.Object obj59 = properties51.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties13.setConsoleLogLevel(atomikosLoggingLevel60);
        boolean boolean64 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setDefaultJtaTimeout(2L);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties12.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setConsoleFileCount(100);
        int int18 = atomikosProperties15.getConsoleFileCount();
        atomikosProperties15.setOutputDir("");
        java.lang.String str21 = atomikosProperties15.getConsoleFileName();
        boolean boolean22 = atomikosProperties15.isEnableLogging();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        atomikosProperties15.setAllowSubTransactions(true);
        boolean boolean26 = atomikosProperties15.isForceShutdownOnVmExit();
        long long27 = atomikosProperties15.getCheckpointInterval();
        long long28 = atomikosProperties15.getDefaultJtaTimeout();
        java.lang.Object obj29 = properties12.remove((java.lang.Object) long28);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 500L + "'", long27 == 500L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str51 = atomikosProperties50.getConsoleFileName();
        atomikosProperties50.setOutputDir("hi!");
        int int54 = atomikosProperties50.getConsoleFileLimit();
        java.util.Properties properties55 = atomikosProperties50.asProperties();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        java.util.Properties properties65 = atomikosProperties60.asProperties();
        java.lang.String str66 = atomikosProperties60.getService();
        atomikosProperties60.setService("hi!");
        atomikosProperties60.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties60.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getConsoleFileName();
        atomikosProperties72.setOutputDir("hi!");
        java.lang.String str76 = atomikosProperties72.getOutputDir();
        boolean boolean77 = properties26.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties60.getConsoleLogLevel();
        java.util.Properties properties79 = atomikosProperties60.asProperties();
        atomikosProperties60.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        atomikosProperties60.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean84 = atomikosProperties60.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        boolean boolean15 = properties13.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getTransactionManagerUniqueName();
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties20.getConsoleLogLevel();
        java.lang.Object obj26 = properties13.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosLoggingLevel25);
        java.util.Collection<java.lang.Object> objCollection27 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        recovery28.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long32 = recovery28.getDelay();
        boolean boolean33 = properties13.contains((java.lang.Object) recovery28);
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount(100);
        atomikosProperties40.setAllowSubTransactions(true);
        boolean boolean45 = atomikosProperties40.isForceShutdownOnVmExit();
        boolean boolean46 = properties39.contains((java.lang.Object) atomikosProperties40);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        atomikosProperties51.setOutputDir("hi!");
        int int55 = atomikosProperties51.getConsoleFileLimit();
        java.lang.Object obj56 = properties48.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties51);
        boolean boolean57 = atomikosProperties51.isForceShutdownOnVmExit();
        atomikosProperties51.setConsoleFileName("");
        java.lang.String str60 = atomikosProperties51.getService();
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.lang.Object obj63 = properties39.get((java.lang.Object) "");
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties65 = new java.util.Properties(properties64);
        int int66 = properties65.size();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Set<java.lang.Object> objSet68 = properties65.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setConsoleFileCount((-1));
        java.lang.String str72 = atomikosProperties69.getOutputDir();
        atomikosProperties69.setLogBaseName("tm.out");
        atomikosProperties69.setLogBaseDir("tm.out");
        java.lang.String str77 = atomikosProperties69.getLogBaseDir();
        atomikosProperties69.setDefaultJtaTimeout(10L);
        java.util.Properties properties80 = atomikosProperties69.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = atomikosProperties69.getRecovery();
        java.lang.Object obj82 = properties13.putIfAbsent((java.lang.Object) objSet68, (java.lang.Object) atomikosProperties69);
        boolean boolean83 = properties13.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setConsoleFileCount(100);
        atomikosProperties84.setAllowSubTransactions(true);
        boolean boolean89 = atomikosProperties84.isForceShutdownOnVmExit();
        int int90 = atomikosProperties84.getConsoleFileCount();
        boolean boolean91 = atomikosProperties84.isEnableLogging();
        atomikosProperties84.setSerialJtaTransactions(false);
        boolean boolean94 = properties13.equals((java.lang.Object) false);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tm.out" + "'", str77, "tm.out");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNotNull(recovery81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long12 = recovery11.getForgetOrphanedLogEntriesDelay();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long16 = recovery15.getForgetOrphanedLogEntriesDelay();
        recovery15.setDelay((long) (short) 1);
        recovery15.setMaxRetries((int) (byte) 10);
        java.lang.Object obj21 = properties5.getOrDefault((java.lang.Object) (byte) 100, (java.lang.Object) (byte) 10);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties5.keys();
        java.util.Properties properties23 = new java.util.Properties(properties5);
        java.util.Properties properties24 = new java.util.Properties(properties5);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 10 + "'", obj21, (byte) 10);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.lang.String str10 = properties8.toString();
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        boolean boolean15 = properties13.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getTransactionManagerUniqueName();
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties20.getConsoleLogLevel();
        java.lang.Object obj26 = properties13.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties16.isSerialJtaTransactions();
        long long28 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str29 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setMaxActives(20);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties16.getRecovery();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.lang.Object obj41 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj50 = properties43.setProperty("", "hi!");
        java.util.Properties properties51 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet52 = properties43.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection53 = properties43.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.lang.Object obj57 = null;
        boolean boolean58 = properties54.equals(obj57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties54.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties54.elements();
        java.lang.Object obj61 = properties34.put((java.lang.Object) properties43, (java.lang.Object) properties54);
        java.lang.Object obj62 = properties8.getOrDefault((java.lang.Object) recovery32, (java.lang.Object) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel67);
        atomikosProperties63.setSerialJtaTransactions(false);
        java.util.Properties properties71 = atomikosProperties63.asProperties();
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.lang.String str74 = atomikosProperties63.getService();
        java.lang.Object obj75 = properties8.get((java.lang.Object) atomikosProperties63);
        java.lang.Object obj76 = properties8.clone();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.util.Properties properties7 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.util.Properties properties13 = atomikosProperties8.asProperties();
        java.lang.String str14 = atomikosProperties8.getService();
        atomikosProperties8.setService("hi!");
        java.lang.Object obj18 = properties7.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        properties1.clear();
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.Object obj31 = properties23.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties26);
        boolean boolean32 = atomikosProperties26.isForceShutdownOnVmExit();
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str35 = atomikosProperties26.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = atomikosProperties26.getRecovery();
        long long37 = recovery36.getDelay();
        recovery36.setMaxRetries(1);
        boolean boolean40 = properties1.equals((java.lang.Object) recovery36);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(recovery36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        int int6 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str14 = atomikosProperties7.getService();
        atomikosProperties7.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties7.setConsoleFileCount((int) (short) 0);
        java.util.Properties properties19 = atomikosProperties7.asProperties();
        boolean boolean20 = atomikosProperties7.isAllowSubTransactions();
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.setConsoleFileLimit(35);
        boolean boolean25 = atomikosProperties7.isAllowSubTransactions();
        atomikosProperties7.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties4.getRecovery();
        java.lang.String str12 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        atomikosProperties15.setDefaultJtaTimeout(1L);
        atomikosProperties15.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel24);
        atomikosProperties4.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        int int10 = atomikosProperties0.getMaxActives();
        java.lang.String str11 = atomikosProperties0.getService();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Properties properties4 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        java.lang.Object obj8 = properties4.put((java.lang.Object) atomikosProperties5, (java.lang.Object) 0L);
        long long9 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str10 = atomikosProperties5.getConsoleFileName();
        boolean boolean11 = properties1.containsValue((java.lang.Object) str10);
        boolean boolean12 = properties1.isEmpty();
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, 100={}, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        atomikosProperties11.setLogBaseName("tm.out");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) atomikosProperties11);
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        atomikosProperties11.setMaxTimeout((long) 18);
        java.util.Properties properties21 = atomikosProperties11.asProperties();
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.loadFromXML(inputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("tm.out", "");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount(100);
        atomikosProperties10.setAllowSubTransactions(true);
        boolean boolean15 = atomikosProperties10.isForceShutdownOnVmExit();
        int int16 = atomikosProperties10.getConsoleFileCount();
        java.lang.Object obj17 = properties9.get((java.lang.Object) atomikosProperties10);
        java.util.Set<java.lang.Object> objSet18 = properties9.keySet();
        java.io.InputStream inputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(inputStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        atomikosProperties1.setDefaultJtaTimeout(0L);
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getOutputDir();
        atomikosProperties1.setConsoleFileLimit((int) (short) 0);
        atomikosProperties1.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties1.setOutputDir("{10=10.0}");
        boolean boolean16 = atomikosProperties1.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) '4');
        int int7 = recovery0.getMaxRetries();
        recovery0.setMaxRetries(1);
        int int10 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) '#');
        recovery0.setDelay((long) 52);
        recovery0.setMaxRetries((int) (byte) 100);
        recovery0.setDelay(10L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 86400000L + "'", long4 == 86400000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties19 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.Object obj23 = properties19.put((java.lang.Object) atomikosProperties20, (java.lang.Object) 0L);
        java.lang.Object obj26 = properties19.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties28.getConsoleLogLevel();
        java.lang.Object obj34 = properties14.getOrDefault((java.lang.Object) properties19, (java.lang.Object) atomikosProperties28);
        boolean boolean35 = properties0.contains((java.lang.Object) properties19);
        java.util.Properties properties36 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        java.lang.Object obj40 = properties36.put((java.lang.Object) atomikosProperties37, (java.lang.Object) 0L);
        java.lang.Object obj43 = properties36.setProperty("", "");
        java.lang.Object obj46 = properties36.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setAllowSubTransactions(false);
        boolean boolean51 = properties36.containsKey((java.lang.Object) atomikosProperties47);
        java.lang.Object obj52 = properties19.remove((java.lang.Object) properties36);
        java.util.Properties properties53 = new java.util.Properties(properties19);
        java.lang.String str54 = properties53.toString();
        properties53.clear();
        java.lang.String str58 = properties53.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=5}", "{tm.out=}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{tm.out=}" + "'", str58, "{tm.out=}");
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setConsoleFileCount(100);
        int int41 = atomikosProperties38.getConsoleFileCount();
        atomikosProperties38.setOutputDir("");
        java.lang.String str44 = atomikosProperties38.getConsoleFileName();
        int int45 = atomikosProperties38.getConsoleFileCount();
        boolean boolean46 = atomikosProperties38.isEnableLogging();
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        boolean boolean48 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setService("tm.out");
        boolean boolean51 = properties37.containsKey((java.lang.Object) "tm.out");
        java.io.PrintStream printStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties37.list(printStream52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        atomikosProperties29.setOutputDir("hi!");
        int int33 = atomikosProperties29.getConsoleFileLimit();
        java.lang.Object obj34 = properties26.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties26.entrySet();
        boolean boolean36 = properties3.containsValue((java.lang.Object) properties26);
        java.util.Properties properties37 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj19 = properties12.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setConsoleFileCount((-1));
        java.lang.String str24 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setLogBaseName("tm.out");
        boolean boolean27 = properties12.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setConsoleFileCount(100);
        atomikosProperties28.setAllowSubTransactions(true);
        java.lang.Object obj33 = properties12.remove((java.lang.Object) atomikosProperties28);
        atomikosProperties28.setAllowSubTransactions(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.lang.Object obj47 = properties39.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel48);
        boolean boolean51 = properties0.containsKey((java.lang.Object) atomikosProperties6);
        java.lang.String str52 = atomikosProperties6.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        long long11 = recovery10.getDelay();
        long long12 = recovery10.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str27 = properties25.getProperty("");
        java.util.Map<java.lang.Object, java.lang.Object> objMap28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.putAll(objMap28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.lang.Object obj22 = properties14.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties17);
        atomikosProperties17.setLogBaseName("tm.out");
        long long25 = atomikosProperties17.getDefaultJtaTimeout();
        atomikosProperties17.setSerialJtaTransactions(true);
        atomikosProperties17.setCheckpointInterval(10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        atomikosProperties30.setOutputDir("hi!");
        java.lang.String str34 = atomikosProperties30.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj48 = properties41.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setConsoleFileCount((-1));
        java.lang.String str53 = atomikosProperties50.getOutputDir();
        atomikosProperties50.setLogBaseName("tm.out");
        boolean boolean56 = properties41.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount(100);
        atomikosProperties57.setAllowSubTransactions(true);
        java.lang.Object obj62 = properties41.remove((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setAllowSubTransactions(false);
        atomikosProperties57.setSerialJtaTransactions(true);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str72 = atomikosProperties71.getConsoleFileName();
        atomikosProperties71.setOutputDir("hi!");
        int int75 = atomikosProperties71.getConsoleFileLimit();
        java.lang.Object obj76 = properties68.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties71);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties71.getConsoleLogLevel();
        atomikosProperties57.setConsoleLogLevel(atomikosLoggingLevel77);
        atomikosProperties35.setConsoleLogLevel(atomikosLoggingLevel77);
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel77);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel77);
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel77);
        atomikosProperties6.setOutputDir("hi!");
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean87 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean88 = atomikosProperties6.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setMaxActives(35);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj32 = properties3.get((java.lang.Object) properties29);
        java.util.Properties properties33 = new java.util.Properties(properties3);
        int int34 = properties3.size();
        java.lang.Object obj35 = properties3.clone();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{10=10.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{10=10.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{10=10.0}");
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties0.getRecovery();
        recovery17.setRetryInterval((long) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(recovery17);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.util.Properties properties50 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties2.elements();
        java.util.Set<java.lang.String> strSet52 = properties2.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties2.keys();
        java.util.Properties properties54 = new java.util.Properties(properties2);
        java.lang.String str55 = properties54.toString();
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.lang.Object obj59 = properties56.setProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        boolean boolean17 = properties1.containsKey((java.lang.Object) properties16);
        java.util.Set<java.lang.Object> objSet18 = properties16.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount((-1));
        atomikosProperties19.setTransactionManagerUniqueName("tm.out");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        atomikosProperties19.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties19.setConsoleFileCount((int) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = atomikosProperties19.getRecovery();
        long long30 = recovery29.getDelay();
        recovery29.setDelay((long) 18);
        boolean boolean33 = properties16.containsKey((java.lang.Object) 18);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(recovery29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        int int27 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        atomikosProperties19.setCheckpointInterval((long) (short) 100);
        boolean boolean32 = atomikosProperties19.isAllowSubTransactions();
        boolean boolean33 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setAllowSubTransactions(true);
        java.util.Properties properties38 = atomikosProperties19.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties38);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setService("hi!");
        int int27 = atomikosProperties14.getConsoleFileLimit();
        boolean boolean28 = atomikosProperties14.isThreadedTwoPhaseCommit();
        atomikosProperties14.setSerialJtaTransactions(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileCount((-1));
        atomikosProperties33.setConsoleFileName("");
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.lang.Object obj47 = properties39.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel48);
        int int50 = atomikosProperties33.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties14.setConsoleLogLevel(atomikosLoggingLevel51);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.setCheckpointInterval(0L);
        java.lang.String str20 = atomikosProperties7.getOutputDir();
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        java.lang.String str25 = atomikosProperties22.getOutputDir();
        atomikosProperties22.setLogBaseName("tm.out");
        atomikosProperties22.setLogBaseDir("tm.out");
        java.lang.String str30 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setDefaultJtaTimeout(10L);
        atomikosProperties22.setLogBaseDir("");
        boolean boolean35 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setConsoleFileLimit(1);
        boolean boolean38 = atomikosProperties22.isAllowSubTransactions();
        boolean boolean39 = atomikosProperties22.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Collection<java.lang.Object> objCollection46 = properties43.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        atomikosProperties47.setOutputDir("hi!");
        int int51 = atomikosProperties47.getConsoleFileLimit();
        java.util.Properties properties52 = atomikosProperties47.asProperties();
        boolean boolean53 = properties43.containsValue((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setTransactionManagerUniqueName("tmlog");
        atomikosProperties47.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties47.getConsoleLogLevel();
        atomikosProperties22.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties7.setConsoleLogLevel(atomikosLoggingLevel58);
        int int61 = atomikosProperties7.getMaxActives();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj18 = properties11.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.lang.String str23 = atomikosProperties20.getOutputDir();
        atomikosProperties20.setLogBaseName("tm.out");
        boolean boolean26 = properties11.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount(100);
        atomikosProperties27.setAllowSubTransactions(true);
        java.lang.Object obj32 = properties11.remove((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setAllowSubTransactions(false);
        long long35 = atomikosProperties27.getCheckpointInterval();
        boolean boolean36 = atomikosProperties27.isSerialJtaTransactions();
        boolean boolean37 = properties7.equals((java.lang.Object) atomikosProperties27);
        java.util.Properties properties38 = new java.util.Properties(properties7);
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Set<java.lang.String> strSet40 = properties39.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties(properties39);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet40);
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties3.get(obj10);
        java.util.Collection<java.lang.Object> objCollection12 = properties3.values();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setDefaultJtaTimeout((long) (byte) 100);
        int int19 = atomikosProperties15.getConsoleFileLimit();
        atomikosProperties15.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        boolean boolean22 = atomikosProperties15.isAllowSubTransactions();
        boolean boolean23 = properties14.equals((java.lang.Object) atomikosProperties15);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.keys();
        java.util.Collection<java.lang.Object> objCollection11 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.String str17 = atomikosProperties12.getService();
        java.lang.String str18 = atomikosProperties12.getService();
        int int19 = atomikosProperties12.getConsoleFileLimit();
        atomikosProperties12.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties22 = atomikosProperties12.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties24 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.storeToXML(outputStream25, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties22);
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        atomikosProperties4.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setMaxActives((int) (byte) -1);
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) -1);
        boolean boolean21 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setMaxActives(0);
        atomikosProperties4.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean26 = atomikosProperties4.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.lang.Object obj19 = properties11.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setLogBaseName("tm.out");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties7.containsValue((java.lang.Object) atomikosProperties14);
        java.util.Properties properties25 = new java.util.Properties(properties7);
        boolean boolean27 = properties7.contains((java.lang.Object) "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=32, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("{tm.out=}");
        atomikosProperties0.setConsoleFileCount((int) 'a');
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        long long15 = atomikosProperties0.getMaxTimeout();
        boolean boolean16 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getConsoleFileName();
        java.util.Properties properties7 = atomikosProperties1.asProperties();
        boolean boolean8 = atomikosProperties1.isEnableLogging();
        java.lang.String str9 = atomikosProperties1.getService();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties1.getConsoleLogLevel();
        atomikosProperties1.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        boolean boolean13 = atomikosProperties1.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties7.getConsoleLogLevel();
        atomikosProperties5.setConsoleLogLevel(atomikosLoggingLevel9);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel9);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setConsoleFileCount(100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel18);
        boolean boolean20 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties0.containsValue((java.lang.Object) 10000L);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.Object obj12 = properties0.putIfAbsent((java.lang.Object) (byte) 1, (java.lang.Object) properties8);
        java.lang.Object obj15 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount((-1));
        java.lang.String str19 = atomikosProperties16.getOutputDir();
        java.lang.Class<?> wildcardClass20 = atomikosProperties16.getClass();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj29 = properties22.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        boolean boolean30 = properties22.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties22.entrySet();
        boolean boolean33 = properties8.remove((java.lang.Object) atomikosProperties16, (java.lang.Object) properties22);
        java.util.Properties properties34 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getConsoleFileName();
        java.lang.Object obj38 = properties34.put((java.lang.Object) atomikosProperties35, (java.lang.Object) 0L);
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        java.lang.Object obj43 = properties39.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.lang.Object obj44 = properties8.remove((java.lang.Object) "hi!");
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.Object obj55 = properties48.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileCount((-1));
        java.lang.String str60 = atomikosProperties57.getOutputDir();
        atomikosProperties57.setLogBaseName("tm.out");
        boolean boolean63 = properties48.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setConsoleFileCount(100);
        atomikosProperties64.setAllowSubTransactions(true);
        java.lang.Object obj69 = properties48.remove((java.lang.Object) atomikosProperties64);
        java.util.Set<java.lang.Object> objSet70 = properties48.keySet();
        int int71 = properties48.size();
        java.util.Properties properties72 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties48.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties48.elements();
        boolean boolean75 = properties8.contains((java.lang.Object) properties48);
        java.io.Reader reader76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(reader76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        atomikosProperties0.setMaxActives((int) (short) 100);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        boolean boolean16 = properties15.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream18, "{10=10.0, {com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties6.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet12 = properties6.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setConsoleFileCount((-1));
        java.lang.String str16 = atomikosProperties13.getOutputDir();
        atomikosProperties13.setLogBaseName("tm.out");
        int int19 = atomikosProperties13.getConsoleFileCount();
        boolean boolean20 = properties6.containsKey((java.lang.Object) atomikosProperties13);
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj32 = properties25.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount((-1));
        java.lang.String str37 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setLogBaseName("tm.out");
        boolean boolean40 = properties25.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        java.lang.Object obj46 = properties25.remove((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setAllowSubTransactions(false);
        atomikosProperties41.setSerialJtaTransactions(true);
        boolean boolean51 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setOutputDir("{}");
        boolean boolean54 = atomikosProperties41.isAllowSubTransactions();
        atomikosProperties41.setAllowSubTransactions(false);
        atomikosProperties41.setCheckpointInterval((long) 5);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection60 = properties59.values();
        java.util.Properties properties61 = new java.util.Properties(properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel66 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel66);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean70 = properties61.containsValue((java.lang.Object) atomikosProperties62);
        java.util.Collection<java.lang.Object> objCollection71 = properties61.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str73 = atomikosProperties72.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel74 = atomikosProperties72.getConsoleLogLevel();
        atomikosProperties72.setMaxTimeout(1L);
        int int77 = atomikosProperties72.getMaxActives();
        boolean boolean78 = properties1.replace((java.lang.Object) atomikosProperties41, (java.lang.Object) properties61, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setConsoleFileCount(100);
        atomikosProperties79.setAllowSubTransactions(true);
        atomikosProperties79.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj86 = properties1.get((java.lang.Object) atomikosProperties79);
        atomikosProperties79.setConsoleFileLimit(0);
        atomikosProperties79.setMaxActives(19);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tm.out" + "'", str73, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel74 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel74.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties44 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        java.lang.Object obj48 = properties44.put((java.lang.Object) atomikosProperties45, (java.lang.Object) 0L);
        properties44.clear();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.lang.String str52 = properties50.getProperty("{}");
        boolean boolean53 = properties7.containsKey((java.lang.Object) "{}");
        java.util.Set<java.lang.Object> objSet54 = properties7.keySet();
        java.lang.String str56 = properties7.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj59 = properties7.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tmlog, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long5 = atomikosProperties0.getMaxTimeout();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setMaxTimeout(0L);
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        atomikosProperties1.setOutputDir("hi!");
        int int5 = atomikosProperties1.getConsoleFileLimit();
        java.util.Properties properties6 = atomikosProperties1.asProperties();
        java.lang.String str7 = atomikosProperties1.getService();
        atomikosProperties1.setService("hi!");
        java.lang.Object obj11 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.util.Properties properties18 = atomikosProperties13.asProperties();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<?> wildcardEnumeration23 = properties20.propertyNames();
        java.lang.Object obj24 = properties20.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        java.util.Properties properties30 = atomikosProperties25.asProperties();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties34.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean40 = properties30.equals(obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties30.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        java.util.Properties properties47 = atomikosProperties42.asProperties();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        properties49.clear();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount((-1));
        java.lang.String str55 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setLogBaseName("tm.out");
        int int58 = atomikosProperties52.getMaxActives();
        boolean boolean59 = properties30.remove((java.lang.Object) properties47, (java.lang.Object) int58);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        boolean boolean61 = properties47.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.io.Writer writer63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer63, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.lang.String str32 = properties29.getProperty("");
        boolean boolean33 = properties3.equals((java.lang.Object) "");
        java.util.Enumeration<?> wildcardEnumeration34 = properties3.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties3.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        java.util.Properties properties41 = atomikosProperties36.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.Object obj50 = properties45.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean51 = properties41.equals(obj50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties41.entrySet();
        int int53 = properties41.size();
        java.util.Properties properties54 = new java.util.Properties(properties41);
        java.lang.Object obj55 = properties3.remove((java.lang.Object) properties54);
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.loadFromXML(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 19 + "'", int53 == 19);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties16 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        java.lang.Object obj20 = properties16.put((java.lang.Object) atomikosProperties17, (java.lang.Object) 0L);
        java.lang.Object obj23 = properties16.setProperty("", "");
        java.util.Properties properties24 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str26 = atomikosProperties25.getConsoleFileName();
        atomikosProperties25.setOutputDir("hi!");
        int int29 = atomikosProperties25.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties25.getConsoleLogLevel();
        java.lang.Object obj31 = properties11.getOrDefault((java.lang.Object) properties16, (java.lang.Object) atomikosProperties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long33 = recovery32.getForgetOrphanedLogEntriesDelay();
        recovery32.setDelay((long) (short) 1);
        recovery32.setMaxRetries((int) (byte) 10);
        java.util.Properties properties38 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        java.lang.Object obj42 = properties38.put((java.lang.Object) atomikosProperties39, (java.lang.Object) 0L);
        java.util.Properties properties43 = new java.util.Properties(properties38);
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setConsoleFileCount(100);
        atomikosProperties45.setAllowSubTransactions(true);
        boolean boolean50 = atomikosProperties45.isAllowSubTransactions();
        int int51 = atomikosProperties45.getConsoleFileLimit();
        atomikosProperties45.setConsoleFileCount((int) (short) 0);
        boolean boolean54 = properties16.replace((java.lang.Object) (byte) 10, (java.lang.Object) properties43, (java.lang.Object) (short) 0);
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        properties56.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setOutputDir("hi!");
        int int63 = atomikosProperties59.getConsoleFileLimit();
        java.lang.Object obj64 = properties56.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean65 = atomikosProperties59.isForceShutdownOnVmExit();
        atomikosProperties59.setConsoleFileName("");
        java.lang.String str68 = atomikosProperties59.getService();
        java.util.Properties properties69 = atomikosProperties59.asProperties();
        java.lang.Object obj72 = properties69.setProperty("tmlog", "tm.out");
        java.lang.Object obj73 = properties1.putIfAbsent((java.lang.Object) boolean54, (java.lang.Object) "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties1.keys();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties5.getConsoleLogLevel();
        atomikosProperties3.setConsoleLogLevel(atomikosLoggingLevel7);
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean11 = properties2.containsValue((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getOutputDir();
        atomikosProperties3.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        long long4 = recovery0.getRetryInterval();
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long6 = recovery0.getDelay();
        long long7 = recovery0.getRetryInterval();
        long long8 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((-1));
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 86400000L + "'", long1 == 86400000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setDelay((long) 5);
        int int3 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) 'a');
        long long6 = recovery0.getRetryInterval();
        long long7 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long8 = recovery0.getRetryInterval();
        recovery0.setMaxRetries(10);
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 97L + "'", long6 == 97L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 97L + "'", long8 == 97L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setAllowSubTransactions(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getConsoleFileName();
        atomikosProperties26.setOutputDir("hi!");
        int int30 = atomikosProperties26.getConsoleFileLimit();
        java.lang.String str31 = atomikosProperties26.getService();
        java.lang.String str32 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setOutputDir("tmlog");
        long long35 = atomikosProperties26.getMaxTimeout();
        boolean boolean36 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties25);
        java.util.Properties properties38 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.keys();
        java.util.Properties properties40 = new java.util.Properties(properties38);
        properties40.clear();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        int int26 = properties3.size();
        java.util.Properties properties27 = new java.util.Properties(properties3);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj38 = properties31.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setConsoleFileCount((-1));
        java.lang.String str43 = atomikosProperties40.getOutputDir();
        atomikosProperties40.setLogBaseName("tm.out");
        boolean boolean46 = properties31.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setConsoleFileCount(100);
        atomikosProperties47.setAllowSubTransactions(true);
        java.lang.Object obj52 = properties31.remove((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setAllowSubTransactions(false);
        int int55 = atomikosProperties47.getConsoleFileCount();
        java.util.Properties properties56 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties47.getConsoleLogLevel();
        boolean boolean58 = properties3.equals((java.lang.Object) atomikosLoggingLevel57);
        java.util.Set<java.lang.Object> objSet59 = properties3.keySet();
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(outputStream60, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objSet59);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        java.lang.Object obj24 = properties20.put((java.lang.Object) atomikosProperties21, (java.lang.Object) 0L);
        java.util.Properties properties25 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        atomikosProperties26.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj31 = properties20.remove((java.lang.Object) atomikosProperties26);
        boolean boolean32 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean37 = properties35.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getConsoleFileName();
        atomikosProperties42.setOutputDir("hi!");
        int int46 = atomikosProperties42.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties42.getConsoleLogLevel();
        java.lang.Object obj48 = properties35.putIfAbsent((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosLoggingLevel47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties49.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long56 = recovery55.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getConsoleFileName();
        atomikosProperties61.setOutputDir("hi!");
        int int65 = atomikosProperties61.getConsoleFileLimit();
        java.lang.Object obj66 = properties58.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties61.getConsoleLogLevel();
        java.lang.String str68 = atomikosProperties61.getTransactionManagerUniqueName();
        atomikosProperties61.setThreadedTwoPhaseCommit(false);
        boolean boolean71 = properties35.replace((java.lang.Object) atomikosProperties49, (java.lang.Object) recovery55, (java.lang.Object) false);
        java.lang.Object obj72 = properties15.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery73.setDelay((long) 5);
        recovery73.setMaxRetries((-1));
        int int78 = recovery73.getMaxRetries();
        java.lang.Object obj79 = properties35.get((java.lang.Object) int78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties35.elements();
        java.lang.Object obj83 = properties35.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean14 = atomikosProperties12.isForceShutdownOnVmExit();
        atomikosProperties12.setAllowSubTransactions(false);
        int int17 = atomikosProperties12.getMaxActives();
        boolean boolean18 = atomikosProperties12.isEnableLogging();
        boolean boolean19 = properties11.contains((java.lang.Object) atomikosProperties12);
        int int20 = properties11.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.lang.String str26 = atomikosProperties21.getService();
        java.lang.String str27 = atomikosProperties21.getOutputDir();
        atomikosProperties21.setOutputDir("tmlog");
        long long30 = atomikosProperties21.getMaxTimeout();
        java.lang.String str31 = atomikosProperties21.getLogBaseName();
        int int32 = atomikosProperties21.getConsoleFileCount();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties35 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        java.lang.Object obj39 = properties35.put((java.lang.Object) atomikosProperties36, (java.lang.Object) 0L);
        long long40 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties36.getService();
        java.util.Properties properties42 = atomikosProperties36.asProperties();
        long long43 = atomikosProperties36.getCheckpointInterval();
        java.util.Properties properties44 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        java.lang.Object obj48 = properties44.put((java.lang.Object) atomikosProperties45, (java.lang.Object) 0L);
        atomikosProperties45.setThreadedTwoPhaseCommit(false);
        atomikosProperties45.setConsoleFileLimit((int) ' ');
        java.lang.String str53 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel56 = atomikosProperties45.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel56);
        atomikosProperties36.setAllowSubTransactions(false);
        java.lang.String str60 = atomikosProperties36.getTransactionManagerUniqueName();
        atomikosProperties36.setTransactionManagerUniqueName("");
        java.lang.Object obj63 = properties11.putIfAbsent((java.lang.Object) true, (java.lang.Object) "");
        java.io.InputStream inputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.loadFromXML(inputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 19 + "'", int20 == 19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 500L + "'", long40 == 500L);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 500L + "'", long43 == 500L);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel56 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel56.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties6.getConsoleLogLevel();
        atomikosProperties6.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties6.setMaxTimeout(0L);
        atomikosProperties6.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties6.setConsoleFileLimit(52);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean23 = properties21.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getTransactionManagerUniqueName();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getConsoleFileName();
        atomikosProperties28.setOutputDir("hi!");
        int int32 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties28.getConsoleLogLevel();
        java.lang.Object obj34 = properties21.putIfAbsent((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosLoggingLevel33);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.get((java.lang.Object) (byte) -1);
        java.util.Properties properties38 = new java.util.Properties(properties35);
        boolean boolean39 = properties21.equals((java.lang.Object) properties35);
        java.util.Properties properties40 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        java.lang.Object obj44 = properties40.put((java.lang.Object) atomikosProperties41, (java.lang.Object) 0L);
        java.util.Properties properties45 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        atomikosProperties46.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj51 = properties40.remove((java.lang.Object) atomikosProperties46);
        boolean boolean52 = atomikosProperties46.isForceShutdownOnVmExit();
        java.util.Properties properties53 = atomikosProperties46.asProperties();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        boolean boolean57 = properties55.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str59 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setOutputDir("hi!");
        int int66 = atomikosProperties62.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties62.getConsoleLogLevel();
        java.lang.Object obj68 = properties55.putIfAbsent((java.lang.Object) atomikosProperties58, (java.lang.Object) atomikosLoggingLevel67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str70 = atomikosProperties69.getConsoleFileName();
        atomikosProperties69.setOutputDir("hi!");
        int int73 = atomikosProperties69.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel74 = atomikosProperties69.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery75 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long76 = recovery75.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties77 = new java.util.Properties();
        java.util.Properties properties78 = new java.util.Properties(properties77);
        properties78.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str82 = atomikosProperties81.getConsoleFileName();
        atomikosProperties81.setOutputDir("hi!");
        int int85 = atomikosProperties81.getConsoleFileLimit();
        java.lang.Object obj86 = properties78.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties81);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel87 = atomikosProperties81.getConsoleLogLevel();
        java.lang.String str88 = atomikosProperties81.getTransactionManagerUniqueName();
        atomikosProperties81.setThreadedTwoPhaseCommit(false);
        boolean boolean91 = properties55.replace((java.lang.Object) atomikosProperties69, (java.lang.Object) recovery75, (java.lang.Object) false);
        java.lang.Object obj92 = properties35.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) properties55);
        java.lang.String str94 = properties35.getProperty("{hi!=10}");
        java.util.Properties properties95 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration96 = properties35.keys();
        java.util.Collection<java.lang.Object> objCollection97 = properties35.values();
        java.lang.Object obj98 = properties3.getOrDefault((java.lang.Object) 52, (java.lang.Object) objCollection97);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel74 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel74.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 86400000L + "'", long76 == 86400000L);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel87 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel87.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(objEnumeration96);
        org.junit.Assert.assertNotNull(objCollection97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "[]");
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str3 = atomikosProperties2.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties2.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int8 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        java.lang.Object obj15 = properties11.put((java.lang.Object) atomikosProperties12, (java.lang.Object) 0L);
        java.util.Properties properties16 = new java.util.Properties(properties11);
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        java.lang.Object obj20 = properties16.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        atomikosProperties21.setDefaultJtaTimeout(1L);
        atomikosProperties21.setForceShutdownOnVmExit(false);
        atomikosProperties21.setLogBaseDir("tmlog");
        boolean boolean32 = properties16.containsValue((java.lang.Object) "tmlog");
        java.util.Collection<java.lang.Object> objCollection33 = properties16.values();
        boolean boolean34 = properties9.remove((java.lang.Object) '4', (java.lang.Object) objCollection33);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount(100);
        atomikosProperties36.setAllowSubTransactions(true);
        boolean boolean41 = atomikosProperties36.isForceShutdownOnVmExit();
        int int42 = atomikosProperties36.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery43 = atomikosProperties36.getRecovery();
        int int44 = atomikosProperties36.getConsoleFileCount();
        boolean boolean45 = properties9.equals((java.lang.Object) atomikosProperties36);
        java.lang.String str46 = properties9.toString();
        java.util.Enumeration<?> wildcardEnumeration47 = properties9.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setOutputDir("hi!");
        int int52 = atomikosProperties48.getConsoleFileLimit();
        java.lang.String str53 = atomikosProperties48.getService();
        java.lang.String str54 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setConsoleFileLimit((int) (byte) -1);
        java.util.Properties properties57 = atomikosProperties48.asProperties();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Properties properties63 = new java.util.Properties(properties62);
        properties63.clear();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.lang.Object obj68 = properties61.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setConsoleFileCount((-1));
        java.lang.String str73 = atomikosProperties70.getOutputDir();
        atomikosProperties70.setLogBaseName("tm.out");
        boolean boolean76 = properties61.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setConsoleFileCount(100);
        atomikosProperties77.setAllowSubTransactions(true);
        java.lang.Object obj82 = properties61.remove((java.lang.Object) atomikosProperties77);
        atomikosProperties77.setAllowSubTransactions(false);
        int int85 = atomikosProperties77.getConsoleFileCount();
        java.util.Properties properties86 = atomikosProperties77.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel87 = atomikosProperties77.getConsoleLogLevel();
        atomikosProperties77.setDefaultJtaTimeout((long) 20);
        java.util.Properties properties90 = atomikosProperties77.asProperties();
        java.lang.Object obj91 = properties9.replace((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties77);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tm.out" + "'", str3, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(recovery43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str46, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel87 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel87.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getService();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxTimeout(35L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties5.keySet();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        int int4 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=100}");
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.Object obj17 = properties9.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        boolean boolean18 = atomikosProperties12.isForceShutdownOnVmExit();
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties12.getService();
        java.util.Properties properties22 = atomikosProperties12.asProperties();
        java.lang.Object obj23 = null;
        boolean boolean24 = properties22.equals(obj23);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean28 = properties26.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getTransactionManagerUniqueName();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties33.getConsoleLogLevel();
        java.lang.Object obj39 = properties26.putIfAbsent((java.lang.Object) atomikosProperties29, (java.lang.Object) atomikosLoggingLevel38);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery40.setRetryInterval((long) (byte) 10);
        int int43 = recovery40.getMaxRetries();
        recovery40.setDelay(10L);
        recovery40.setRetryInterval((long) (short) 10);
        java.lang.Object obj48 = properties22.replace((java.lang.Object) atomikosLoggingLevel38, (java.lang.Object) recovery40);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel38);
        boolean boolean50 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long12 = recovery11.getForgetOrphanedLogEntriesDelay();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long16 = recovery15.getForgetOrphanedLogEntriesDelay();
        recovery15.setDelay((long) (short) 1);
        recovery15.setMaxRetries((int) (byte) 10);
        java.lang.Object obj21 = properties5.getOrDefault((java.lang.Object) (byte) 100, (java.lang.Object) (byte) 10);
        int int22 = properties5.size();
        java.lang.Object obj25 = properties5.setProperty("", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getTransactionManagerUniqueName();
        boolean boolean28 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties29 = atomikosProperties26.asProperties();
        atomikosProperties26.setAllowSubTransactions(false);
        int int32 = atomikosProperties26.getConsoleFileCount();
        java.lang.String str33 = atomikosProperties26.getService();
        atomikosProperties26.setTransactionManagerUniqueName("{tm.out=}");
        java.lang.Object obj36 = properties5.remove((java.lang.Object) atomikosProperties26);
        java.util.Properties properties37 = new java.util.Properties(properties5);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 10 + "'", obj21, (byte) 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 19 + "'", int22 == 19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        boolean boolean25 = properties1.equals((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount((-1));
        java.lang.String str29 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setLogBaseName("tm.out");
        atomikosProperties26.setLogBaseDir("tm.out");
        java.lang.String str34 = atomikosProperties26.getLogBaseDir();
        atomikosProperties26.setDefaultJtaTimeout(10L);
        atomikosProperties26.setLogBaseDir("");
        boolean boolean39 = atomikosProperties26.isSerialJtaTransactions();
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = properties23.getOrDefault((java.lang.Object) boolean39, obj40);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.lang.Object obj52 = properties45.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setConsoleFileCount((-1));
        java.lang.String str57 = atomikosProperties54.getOutputDir();
        atomikosProperties54.setLogBaseName("tm.out");
        boolean boolean60 = properties45.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileCount(100);
        atomikosProperties61.setAllowSubTransactions(true);
        java.lang.Object obj66 = properties45.remove((java.lang.Object) atomikosProperties61);
        java.lang.String str67 = atomikosProperties61.getLogBaseDir();
        int int68 = atomikosProperties61.getConsoleFileLimit();
        atomikosProperties61.setMaxTimeout(300000L);
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str76 = atomikosProperties75.getConsoleFileName();
        atomikosProperties75.setOutputDir("hi!");
        int int79 = atomikosProperties75.getConsoleFileLimit();
        java.lang.Object obj80 = properties72.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties75);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = atomikosProperties75.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setConsoleFileCount((-1));
        atomikosProperties82.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str88 = atomikosProperties87.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str90 = atomikosProperties89.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel91 = atomikosProperties89.getConsoleLogLevel();
        atomikosProperties87.setConsoleLogLevel(atomikosLoggingLevel91);
        atomikosProperties82.setConsoleLogLevel(atomikosLoggingLevel91);
        atomikosProperties75.setConsoleLogLevel(atomikosLoggingLevel91);
        java.lang.Object obj95 = properties23.putIfAbsent((java.lang.Object) atomikosProperties61, (java.lang.Object) atomikosLoggingLevel91);
        atomikosProperties61.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tm.out" + "'", str76, "tm.out");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tm.out" + "'", str90, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel91 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel91.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.lang.Object obj10 = properties0.setProperty("", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setAllowSubTransactions(false);
        boolean boolean15 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setConsoleFileLimit(100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        atomikosProperties18.setTransactionManagerUniqueName("tm.out");
        java.lang.String str23 = atomikosProperties18.getLogBaseName();
        atomikosProperties18.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties18.setService("tm.out");
        boolean boolean28 = atomikosProperties18.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getConsoleFileName();
        java.lang.String str31 = atomikosProperties29.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties29.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel32);
        atomikosProperties11.setConsoleLogLevel(atomikosLoggingLevel32);
        int int35 = atomikosProperties11.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        boolean boolean43 = atomikosProperties19.isEnableLogging();
        int int44 = atomikosProperties19.getConsoleFileCount();
        int int45 = atomikosProperties19.getMaxActives();
        long long46 = atomikosProperties19.getDefaultJtaTimeout();
        java.lang.String str47 = atomikosProperties19.getService();
        atomikosProperties19.setAllowSubTransactions(true);
        boolean boolean50 = atomikosProperties19.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties19.getConsoleLogLevel();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        int int8 = properties7.size();
        boolean boolean9 = properties7.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Properties properties11 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.lang.String str18 = atomikosProperties12.getService();
        atomikosProperties12.setService("hi!");
        atomikosProperties12.setForceShutdownOnVmExit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties25 = atomikosProperties12.asProperties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long31 = recovery30.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass32 = recovery30.getClass();
        boolean boolean33 = properties28.containsKey((java.lang.Object) wildcardClass32);
        boolean boolean34 = properties7.replace((java.lang.Object) properties25, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass32);
        java.util.Properties properties35 = new java.util.Properties(properties25);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        java.lang.Object obj45 = properties37.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties40.getService();
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        boolean boolean51 = properties1.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getConsoleFileName();
        atomikosProperties52.setOutputDir("hi!");
        int int56 = atomikosProperties52.getConsoleFileLimit();
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties57.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery63 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long64 = recovery63.getForgetOrphanedLogEntriesDelay();
        recovery63.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long68 = recovery67.getForgetOrphanedLogEntriesDelay();
        recovery67.setDelay((long) (short) 1);
        recovery67.setMaxRetries((int) (byte) 10);
        java.lang.Object obj73 = properties57.getOrDefault((java.lang.Object) (byte) 100, (java.lang.Object) (byte) 10);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties57.keys();
        boolean boolean75 = properties1.contains((java.lang.Object) properties57);
        java.lang.String str77 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Properties properties81 = new java.util.Properties(properties80);
        properties81.clear();
        properties79.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        java.lang.Object obj86 = properties81.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties87 = new java.util.Properties(properties81);
        java.util.Properties properties88 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str90 = atomikosProperties89.getConsoleFileName();
        java.lang.Object obj92 = properties88.put((java.lang.Object) atomikosProperties89, (java.lang.Object) 0L);
        atomikosProperties89.setLogBaseName("tm.out");
        java.lang.Object obj95 = properties87.remove((java.lang.Object) atomikosProperties89);
        atomikosProperties89.setAllowSubTransactions(false);
        boolean boolean98 = properties1.containsValue((java.lang.Object) atomikosProperties89);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 86400000L + "'", long31 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 86400000L + "'", long64 == 86400000L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 86400000L + "'", long68 == 86400000L);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 10 + "'", obj73, (byte) 10);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tm.out" + "'", str90, "tm.out");
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj20 = properties13.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setConsoleFileCount((-1));
        java.lang.String str25 = atomikosProperties22.getOutputDir();
        atomikosProperties22.setLogBaseName("tm.out");
        boolean boolean28 = properties13.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setConsoleFileCount(100);
        atomikosProperties29.setAllowSubTransactions(true);
        java.lang.Object obj34 = properties13.remove((java.lang.Object) atomikosProperties29);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet44 = properties36.keySet();
        boolean boolean45 = properties36.isEmpty();
        java.lang.Object obj46 = properties13.remove((java.lang.Object) boolean45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setConsoleFileCount(100);
        atomikosProperties47.setAllowSubTransactions(true);
        boolean boolean52 = atomikosProperties47.isForceShutdownOnVmExit();
        int int53 = atomikosProperties47.getConsoleFileCount();
        java.util.Properties properties54 = atomikosProperties47.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.keys();
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties8.put((java.lang.Object) boolean45, (java.lang.Object) properties56);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str63 = atomikosProperties62.getConsoleFileName();
        atomikosProperties62.setOutputDir("hi!");
        int int66 = atomikosProperties62.getConsoleFileLimit();
        java.lang.Object obj67 = properties59.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties70.getConsoleLogLevel();
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties62.setMaxActives((int) ' ');
        boolean boolean76 = properties8.equals((java.lang.Object) atomikosProperties62);
        java.util.Properties properties77 = atomikosProperties62.asProperties();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(properties77);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        recovery13.setForgetOrphanedLogEntriesDelay(300000L);
        recovery13.setRetryInterval((-1L));
        recovery13.setDelay((long) (short) 0);
        recovery13.setRetryInterval((long) 32);
        long long22 = recovery13.getRetryInterval();
        recovery13.setRetryInterval(0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 32L + "'", long22 == 32L);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getTransactionManagerUniqueName();
        boolean boolean17 = atomikosProperties15.isForceShutdownOnVmExit();
        java.util.Properties properties18 = atomikosProperties15.asProperties();
        int int19 = atomikosProperties15.getConsoleFileCount();
        java.lang.Object obj20 = properties14.get((java.lang.Object) atomikosProperties15);
        int int21 = properties14.size();
        java.util.Enumeration<?> wildcardEnumeration22 = properties14.propertyNames();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.lang.Object obj32 = properties24.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties27);
        boolean boolean33 = atomikosProperties27.isForceShutdownOnVmExit();
        atomikosProperties27.setConsoleFileName("");
        java.lang.String str36 = atomikosProperties27.getService();
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getTransactionManagerUniqueName();
        boolean boolean40 = atomikosProperties38.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties38.asProperties();
        int int42 = atomikosProperties38.getConsoleFileCount();
        java.lang.Object obj43 = properties37.get((java.lang.Object) atomikosProperties38);
        long long44 = atomikosProperties38.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties38.getConsoleLogLevel();
        java.util.Properties properties46 = atomikosProperties38.asProperties();
        java.lang.Object obj47 = properties14.get((java.lang.Object) atomikosProperties38);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 19 + "'", int21 == 19);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        java.util.Properties properties37 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection38 = properties15.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection38);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        java.lang.Class<?> wildcardClass7 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) (byte) -1);
        java.lang.Object obj5 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        boolean boolean24 = properties9.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setConsoleFileCount(100);
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setAllowSubTransactions(false);
        int int33 = atomikosProperties25.getConsoleFileCount();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setCheckpointInterval((long) (short) -1);
        boolean boolean38 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setConsoleFileLimit(18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount(100);
        atomikosProperties41.setAllowSubTransactions(true);
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        atomikosProperties41.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties41.setConsoleLogLevel(atomikosLoggingLevel51);
        boolean boolean53 = atomikosProperties41.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties41.asProperties();
        boolean boolean55 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) atomikosProperties41);
        boolean boolean56 = atomikosProperties25.isForceShutdownOnVmExit();
        boolean boolean57 = atomikosProperties25.isSerialJtaTransactions();
        atomikosProperties25.setForceShutdownOnVmExit(true);
        atomikosProperties25.setDefaultJtaTimeout((long) 3);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount((-1));
        atomikosProperties6.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj11 = properties0.remove((java.lang.Object) atomikosProperties6);
        boolean boolean12 = atomikosProperties6.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        java.lang.String str14 = properties13.toString();
        int int15 = properties13.size();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        int int19 = properties18.size();
        boolean boolean20 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        recovery24.setDelay((long) (short) 1);
        long long28 = recovery24.getRetryInterval();
        long long29 = recovery24.getForgetOrphanedLogEntriesDelay();
        int int30 = recovery24.getMaxRetries();
        recovery24.setRetryInterval((long) '4');
        long long33 = recovery24.getRetryInterval();
        int int34 = recovery24.getMaxRetries();
        boolean boolean35 = properties22.equals((java.lang.Object) int34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setConsoleFileCount((-1));
        java.lang.String str39 = atomikosProperties36.getOutputDir();
        atomikosProperties36.setLogBaseName("tm.out");
        atomikosProperties36.setForceShutdownOnVmExit(true);
        int int44 = atomikosProperties36.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = atomikosProperties36.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount(100);
        atomikosProperties46.setAllowSubTransactions(true);
        atomikosProperties46.setMaxTimeout((long) '4');
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        boolean boolean54 = atomikosProperties46.isForceShutdownOnVmExit();
        atomikosProperties46.setLogBaseDir("tm.out");
        java.util.Properties properties57 = atomikosProperties46.asProperties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties22.remove((java.lang.Object) atomikosProperties36, (java.lang.Object) properties58);
        java.lang.Object obj60 = properties13.get((java.lang.Object) boolean59);
        java.util.Enumeration<?> wildcardEnumeration61 = properties13.propertyNames();
        java.util.Properties properties62 = new java.util.Properties(properties13);
        java.util.Properties properties63 = new java.util.Properties(properties62);
        boolean boolean64 = properties62.isEmpty();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 19 + "'", int15 == 19);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 86400000L + "'", long29 == 86400000L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 52L + "'", long33 == 52L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(recovery45);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(wildcardEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str3 = atomikosProperties2.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties2.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileCount((int) (short) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tm.out" + "'", str3, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.String str7 = properties6.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        atomikosProperties8.setDefaultJtaTimeout(1L);
        atomikosProperties8.setConsoleFileLimit(35);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.lang.Object obj26 = properties18.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties21);
        boolean boolean27 = atomikosProperties21.isForceShutdownOnVmExit();
        atomikosProperties21.setConsoleFileName("");
        int int30 = atomikosProperties21.getMaxActives();
        boolean boolean31 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.Object obj32 = properties6.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties21);
        long long33 = atomikosProperties21.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties6);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str7, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setConsoleFileCount((-1));
        atomikosProperties4.setTransactionManagerUniqueName("tm.out");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setConsoleFileLimit((int) (byte) 1);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Collection<java.lang.Object> objCollection18 = properties15.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getConsoleFileName();
        atomikosProperties19.setOutputDir("hi!");
        int int23 = atomikosProperties19.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        boolean boolean25 = properties15.containsValue((java.lang.Object) atomikosProperties19);
        boolean boolean26 = properties15.isEmpty();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setOutputDir("hi!");
        int int35 = atomikosProperties31.getConsoleFileLimit();
        java.lang.Object obj36 = properties28.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties39.getConsoleLogLevel();
        atomikosProperties31.setConsoleLogLevel(atomikosLoggingLevel41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setConsoleFileCount(100);
        atomikosProperties43.setAllowSubTransactions(true);
        boolean boolean48 = atomikosProperties43.isForceShutdownOnVmExit();
        int int49 = atomikosProperties43.getConsoleFileCount();
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        java.lang.Object obj51 = properties15.replace((java.lang.Object) atomikosLoggingLevel41, (java.lang.Object) atomikosProperties43);
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel41);
        boolean boolean53 = properties1.containsKey((java.lang.Object) atomikosProperties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties4.getRecovery();
        int int55 = recovery54.getMaxRetries();
        recovery54.setRetryInterval((long) 'a');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties4.getService();
        boolean boolean14 = atomikosProperties4.isEnableLogging();
        int int15 = atomikosProperties4.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties4.getRecovery();
        recovery16.setDelay(10000L);
        recovery16.setRetryInterval((long) 5);
        long long21 = recovery16.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel13);
        atomikosProperties9.setSerialJtaTransactions(false);
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(false);
        java.lang.Object obj20 = properties1.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.lang.String str26 = atomikosProperties21.getService();
        boolean boolean27 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setConsoleFileCount((int) '4');
        java.util.Properties properties30 = atomikosProperties21.asProperties();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj35 = properties31.setProperty("hi!", "");
        java.util.Properties properties36 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getConsoleFileName();
        java.lang.Object obj40 = properties36.put((java.lang.Object) atomikosProperties37, (java.lang.Object) 0L);
        java.lang.Object obj43 = properties36.setProperty("", "");
        java.util.Properties properties44 = new java.util.Properties(properties36);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount(100);
        atomikosProperties46.setAllowSubTransactions(true);
        atomikosProperties46.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj53 = properties44.remove((java.lang.Object) "tm.out");
        java.lang.Object obj54 = properties1.putIfAbsent((java.lang.Object) properties30, (java.lang.Object) properties44);
        int int55 = properties44.size();
        java.util.Properties properties56 = new java.util.Properties(properties44);
        java.lang.Object obj59 = properties56.setProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}", "hi!");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        java.lang.String str10 = properties1.getProperty("{10=10.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setConsoleFileCount(100);
        atomikosProperties11.setAllowSubTransactions(true);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        int int17 = atomikosProperties11.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties11.getRecovery();
        int int19 = atomikosProperties11.getConsoleFileCount();
        atomikosProperties11.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean22 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj23 = properties1.get((java.lang.Object) boolean22);
        java.util.Set<java.lang.Object> objSet24 = properties1.keySet();
        java.lang.Object obj27 = properties1.setProperty("tmlog", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str14 = atomikosProperties13.getConsoleFileName();
        atomikosProperties13.setOutputDir("hi!");
        int int17 = atomikosProperties13.getConsoleFileLimit();
        java.lang.Object obj18 = properties10.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setLogBaseName("tm.out");
        boolean boolean21 = properties3.containsKey((java.lang.Object) "tm.out");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties25.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.lang.String str32 = properties29.getProperty("");
        boolean boolean33 = properties3.equals((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setConsoleFileCount((-1));
        java.lang.String str37 = atomikosProperties34.getOutputDir();
        atomikosProperties34.setLogBaseName("tm.out");
        atomikosProperties34.setLogBaseDir("tm.out");
        atomikosProperties34.setForceShutdownOnVmExit(true);
        boolean boolean44 = atomikosProperties34.isAllowSubTransactions();
        atomikosProperties34.setMaxActives((int) 'a');
        java.util.Properties properties47 = atomikosProperties34.asProperties();
        boolean boolean48 = atomikosProperties34.isThreadedTwoPhaseCommit();
        boolean boolean49 = properties3.equals((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getTransactionManagerUniqueName();
        int int10 = atomikosProperties1.getConsoleFileLimit();
        atomikosProperties1.setLogBaseName("{tm.out=}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str4 = atomikosProperties3.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties3.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel5);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet12 = properties11.keySet();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.lang.String str14 = properties13.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        java.lang.String str17 = atomikosProperties15.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties15.setConsoleLogLevel(atomikosLoggingLevel20);
        boolean boolean22 = atomikosProperties15.isAllowSubTransactions();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties15.isForceShutdownOnVmExit();
        java.util.Properties properties26 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.lang.String str32 = atomikosProperties27.getService();
        java.lang.String str33 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setOutputDir("tmlog");
        long long36 = atomikosProperties27.getMaxTimeout();
        java.lang.String str37 = atomikosProperties27.getLogBaseName();
        int int38 = atomikosProperties27.getConsoleFileCount();
        atomikosProperties27.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setOutputDir("hi!");
        int int45 = atomikosProperties41.getConsoleFileLimit();
        boolean boolean46 = atomikosProperties41.isForceShutdownOnVmExit();
        java.lang.Object obj47 = properties26.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) boolean46);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection49 = properties48.values();
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.keys();
        java.lang.Object obj52 = properties26.get((java.lang.Object) objEnumeration51);
        boolean boolean53 = properties13.contains((java.lang.Object) properties26);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream54, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream10, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties15 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getConsoleFileName();
        java.lang.Object obj19 = properties15.put((java.lang.Object) atomikosProperties16, (java.lang.Object) 0L);
        java.util.Properties properties20 = new java.util.Properties(properties15);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long24 = recovery23.getForgetOrphanedLogEntriesDelay();
        recovery23.setDelay((long) (short) 1);
        long long27 = recovery23.getRetryInterval();
        long long28 = recovery23.getForgetOrphanedLogEntriesDelay();
        int int29 = recovery23.getMaxRetries();
        recovery23.setRetryInterval((long) '4');
        long long32 = recovery23.getRetryInterval();
        int int33 = recovery23.getMaxRetries();
        long long34 = recovery23.getDelay();
        recovery23.setRetryInterval((long) 35);
        java.lang.Object obj37 = properties21.get((java.lang.Object) recovery23);
        java.util.Properties properties38 = new java.util.Properties(properties21);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean42 = properties40.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getTransactionManagerUniqueName();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getConsoleFileName();
        atomikosProperties47.setOutputDir("hi!");
        int int51 = atomikosProperties47.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = atomikosProperties47.getConsoleLogLevel();
        java.lang.Object obj53 = properties40.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosLoggingLevel52);
        boolean boolean54 = atomikosProperties43.isSerialJtaTransactions();
        atomikosProperties43.setTransactionManagerUniqueName("{=hi!}");
        long long57 = atomikosProperties43.getMaxTimeout();
        boolean boolean58 = properties21.contains((java.lang.Object) atomikosProperties43);
        java.io.PrintStream printStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.list(printStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 86400000L + "'", long28 == 86400000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 52L + "'", long32 == 52L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 300000L + "'", long57 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setConsoleFileCount(100);
        atomikosProperties4.setAllowSubTransactions(true);
        boolean boolean9 = atomikosProperties4.isForceShutdownOnVmExit();
        int int10 = atomikosProperties4.getConsoleFileCount();
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties1.equals((java.lang.Object) atomikosProperties4);
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet14 = properties13.keySet();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objSet14);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj10 = properties3.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setConsoleFileCount((-1));
        java.lang.String str15 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseName("tm.out");
        boolean boolean18 = properties3.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setConsoleFileCount(100);
        atomikosProperties19.setAllowSubTransactions(true);
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties19.setDefaultJtaTimeout((long) 10);
        atomikosProperties19.setTransactionManagerUniqueName("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!}");
        java.util.Properties properties45 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileCount((-1));
        java.lang.String str49 = atomikosProperties46.getOutputDir();
        atomikosProperties46.setLogBaseName("tm.out");
        atomikosProperties46.setForceShutdownOnVmExit(true);
        int int54 = atomikosProperties46.getConsoleFileCount();
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setService("{}");
        atomikosProperties46.setTransactionManagerUniqueName("tmlog");
        atomikosProperties46.setEnableLogging(false);
        boolean boolean63 = atomikosProperties46.isEnableLogging();
        java.util.Properties properties64 = atomikosProperties46.asProperties();
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.lang.Object obj66 = properties65.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties65.entrySet();
        boolean boolean68 = properties45.equals((java.lang.Object) objEntrySet67);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        properties12.clear();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet13);
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        atomikosProperties0.setMaxActives(100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet6 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 100);
        int int12 = atomikosProperties8.getConsoleFileLimit();
        java.lang.String str13 = atomikosProperties8.getConsoleFileName();
        java.lang.Object obj14 = properties5.putIfAbsent((java.lang.Object) (-1.0f), (java.lang.Object) atomikosProperties8);
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setOutputDir("hi!");
        int int25 = atomikosProperties21.getConsoleFileLimit();
        java.lang.Object obj26 = properties18.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties21);
        atomikosProperties21.setLogBaseName("tm.out");
        atomikosProperties21.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties21.setConsoleFileLimit((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel33);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.util.Properties properties22 = atomikosProperties17.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount((-1));
        java.lang.String str30 = atomikosProperties27.getOutputDir();
        atomikosProperties27.setLogBaseName("tm.out");
        int int33 = atomikosProperties27.getMaxActives();
        boolean boolean34 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) int33);
        java.util.Set<java.lang.String> strSet35 = properties22.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties22);
        java.util.Properties properties37 = new java.util.Properties(properties22);
        java.util.Properties properties38 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        java.lang.Object obj42 = properties38.put((java.lang.Object) atomikosProperties39, (java.lang.Object) 0L);
        atomikosProperties39.setThreadedTwoPhaseCommit(false);
        atomikosProperties39.setConsoleFileLimit((int) ' ');
        java.lang.String str47 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = atomikosProperties39.getConsoleLogLevel();
        boolean boolean51 = properties37.containsKey((java.lang.Object) atomikosLoggingLevel50);
        properties37.clear();
        java.util.Enumeration<?> wildcardEnumeration53 = properties37.propertyNames();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel50 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel50.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getService();
        atomikosProperties1.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str9 = atomikosProperties1.getOutputDir();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Collection<java.lang.Object> objCollection15 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int17 = recovery16.getMaxRetries();
        recovery16.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long20 = recovery16.getDelay();
        boolean boolean21 = properties1.contains((java.lang.Object) recovery16);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = null;
        boolean boolean26 = properties22.equals(obj25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties22.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.elements();
        java.util.Properties properties29 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str31 = atomikosProperties30.getConsoleFileName();
        java.lang.Object obj33 = properties29.put((java.lang.Object) atomikosProperties30, (java.lang.Object) 0L);
        boolean boolean34 = properties22.containsValue((java.lang.Object) properties29);
        java.util.Properties properties35 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getConsoleFileName();
        atomikosProperties36.setOutputDir("hi!");
        int int40 = atomikosProperties36.getConsoleFileLimit();
        atomikosProperties36.setDefaultJtaTimeout(1L);
        atomikosProperties36.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties36.getConsoleLogLevel();
        java.lang.String str46 = atomikosProperties36.getConsoleFileName();
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.keys();
        java.util.Properties properties51 = new java.util.Properties(properties47);
        java.lang.String str52 = properties47.toString();
        java.lang.Object obj53 = properties29.put((java.lang.Object) str46, (java.lang.Object) properties47);
        java.util.Properties properties54 = new java.util.Properties(properties29);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        java.util.Set<java.lang.String> strSet83 = properties6.stringPropertyNames();
        java.io.Reader reader84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(reader84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(strSet83);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean5 = atomikosProperties0.isAllowSubTransactions();
        int int6 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setCheckpointInterval(500L);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        int int12 = atomikosProperties0.getMaxActives();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setConsoleFileCount(100);
        atomikosProperties14.setAllowSubTransactions(true);
        atomikosProperties14.setMaxTimeout((long) '4');
        java.lang.String str21 = atomikosProperties14.getLogBaseDir();
        int int22 = atomikosProperties14.getConsoleFileCount();
        int int23 = atomikosProperties14.getMaxActives();
        atomikosProperties14.setEnableLogging(false);
        atomikosProperties14.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties14.getRecovery();
        long long29 = atomikosProperties14.getDefaultJtaTimeout();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = null;
        boolean boolean34 = properties30.equals(obj33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        int int38 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties41.getConsoleLogLevel();
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel43);
        atomikosProperties39.setSerialJtaTransactions(false);
        int int47 = atomikosProperties39.getConsoleFileLimit();
        java.util.Properties properties48 = atomikosProperties39.asProperties();
        java.util.Properties properties50 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str52 = atomikosProperties51.getConsoleFileName();
        java.lang.Object obj54 = properties50.put((java.lang.Object) atomikosProperties51, (java.lang.Object) 0L);
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Set<java.lang.Object> objSet56 = properties55.keySet();
        java.lang.Object obj59 = properties55.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        atomikosProperties60.setDefaultJtaTimeout(1L);
        atomikosProperties60.setForceShutdownOnVmExit(false);
        atomikosProperties60.setLogBaseDir("tmlog");
        boolean boolean71 = properties55.containsValue((java.lang.Object) "tmlog");
        java.util.Collection<java.lang.Object> objCollection72 = properties55.values();
        boolean boolean73 = properties48.remove((java.lang.Object) '4', (java.lang.Object) objCollection72);
        java.util.Properties properties74 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery76 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long77 = recovery76.getForgetOrphanedLogEntriesDelay();
        recovery76.setDelay((long) (short) 1);
        long long80 = recovery76.getRetryInterval();
        long long81 = recovery76.getForgetOrphanedLogEntriesDelay();
        int int82 = recovery76.getMaxRetries();
        long long83 = recovery76.getForgetOrphanedLogEntriesDelay();
        long long84 = recovery76.getRetryInterval();
        java.lang.Object obj85 = properties30.put((java.lang.Object) objEntrySet75, (java.lang.Object) recovery76);
        boolean boolean86 = properties13.remove((java.lang.Object) long29, (java.lang.Object) recovery76);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEntrySet75);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 86400000L + "'", long77 == 86400000L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 86400000L + "'", long81 == 86400000L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 86400000L + "'", long83 == 86400000L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileCount(100);
        atomikosProperties6.setAllowSubTransactions(true);
        boolean boolean11 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean12 = properties5.contains((java.lang.Object) atomikosProperties6);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str18 = atomikosProperties17.getConsoleFileName();
        atomikosProperties17.setOutputDir("hi!");
        int int21 = atomikosProperties17.getConsoleFileLimit();
        java.lang.Object obj22 = properties14.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties17);
        boolean boolean23 = atomikosProperties17.isForceShutdownOnVmExit();
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties17.getService();
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj29 = properties5.get((java.lang.Object) "");
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        int int32 = properties31.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        properties31.clear();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        properties36.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getConsoleFileName();
        atomikosProperties39.setOutputDir("hi!");
        int int43 = atomikosProperties39.getConsoleFileLimit();
        java.lang.Object obj44 = properties36.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties39);
        boolean boolean45 = atomikosProperties39.isForceShutdownOnVmExit();
        atomikosProperties39.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties39.getService();
        boolean boolean49 = atomikosProperties39.isEnableLogging();
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (short) 1);
        boolean boolean53 = properties31.contains((java.lang.Object) atomikosProperties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getConsoleFileName();
        atomikosProperties54.setOutputDir("hi!");
        int int58 = atomikosProperties54.getConsoleFileLimit();
        java.lang.String str59 = atomikosProperties54.getService();
        java.lang.String str60 = atomikosProperties54.getService();
        long long61 = atomikosProperties54.getCheckpointInterval();
        java.lang.Object obj62 = properties31.get((java.lang.Object) long61);
        java.lang.Object obj63 = properties31.clone();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean5 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        int int10 = atomikosProperties0.getMaxActives();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str12 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        boolean boolean10 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setOutputDir("hi!");
        int int15 = atomikosProperties11.getConsoleFileLimit();
        java.lang.String str16 = atomikosProperties11.getService();
        java.lang.String str17 = atomikosProperties11.getOutputDir();
        boolean boolean18 = properties1.contains((java.lang.Object) str17);
        java.util.Set<java.lang.Object> objSet19 = properties1.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean23 = properties21.containsValue((java.lang.Object) 10L);
        boolean boolean25 = properties21.contains((java.lang.Object) 5L);
        java.lang.String str26 = properties21.toString();
        java.util.Collection<java.lang.Object> objCollection27 = properties21.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        properties32.clear();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj37 = properties30.setProperty("", "hi!");
        java.util.Properties properties38 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount((-1));
        java.lang.String str42 = atomikosProperties39.getOutputDir();
        atomikosProperties39.setLogBaseName("tm.out");
        atomikosProperties39.setLogBaseDir("tm.out");
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean49 = properties38.containsValue((java.lang.Object) false);
        properties38.clear();
        java.lang.Object obj51 = properties1.putIfAbsent((java.lang.Object) properties21, (java.lang.Object) properties38);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.lang.Object obj18 = properties11.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.lang.String str23 = atomikosProperties20.getOutputDir();
        atomikosProperties20.setLogBaseName("tm.out");
        boolean boolean26 = properties11.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setConsoleFileCount(100);
        atomikosProperties27.setAllowSubTransactions(true);
        java.lang.Object obj32 = properties11.remove((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setAllowSubTransactions(false);
        long long35 = atomikosProperties27.getCheckpointInterval();
        boolean boolean36 = atomikosProperties27.isSerialJtaTransactions();
        boolean boolean37 = properties7.equals((java.lang.Object) atomikosProperties27);
        boolean boolean38 = atomikosProperties27.isAllowSubTransactions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        int int8 = properties7.size();
        boolean boolean9 = properties7.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Properties properties11 = new java.util.Properties(properties7);
        int int12 = properties7.size();
        java.util.Properties properties13 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getConsoleFileName();
        atomikosProperties14.setOutputDir("hi!");
        int int18 = atomikosProperties14.getConsoleFileLimit();
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        java.lang.String str20 = atomikosProperties14.getService();
        atomikosProperties14.setService("hi!");
        java.lang.Object obj24 = properties13.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        properties7.clear();
        java.util.Properties properties27 = new java.util.Properties(properties7);
        boolean boolean28 = properties0.contains((java.lang.Object) properties27);
        properties0.clear();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        atomikosProperties1.setThreadedTwoPhaseCommit(false);
        atomikosProperties1.setConsoleFileLimit((int) ' ');
        java.lang.String str9 = atomikosProperties1.getConsoleFileName();
        atomikosProperties1.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties1.getConsoleLogLevel();
        java.lang.String str13 = atomikosProperties1.getService();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        long long5 = atomikosProperties1.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties1.getConsoleFileName();
        java.util.Properties properties7 = atomikosProperties1.asProperties();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.lang.Object obj17 = properties9.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        boolean boolean18 = atomikosProperties12.isForceShutdownOnVmExit();
        atomikosProperties12.setOutputDir("tm.out");
        java.lang.String str21 = atomikosProperties12.getLogBaseDir();
        java.lang.String str22 = atomikosProperties12.getTransactionManagerUniqueName();
        atomikosProperties12.setAllowSubTransactions(false);
        boolean boolean25 = properties7.containsKey((java.lang.Object) false);
        java.lang.String str27 = properties7.getProperty("{hi!=10}");
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties7.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        properties32.clear();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj37 = properties32.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet38 = properties32.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setConsoleFileCount((-1));
        java.lang.String str42 = atomikosProperties39.getOutputDir();
        atomikosProperties39.setLogBaseName("tm.out");
        int int45 = atomikosProperties39.getConsoleFileCount();
        boolean boolean46 = properties32.containsKey((java.lang.Object) atomikosProperties39);
        atomikosProperties39.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties39.getRecovery();
        atomikosProperties39.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean52 = properties7.containsKey((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=2, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.PrintStream printStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        atomikosProperties4.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties12.getConsoleLogLevel();
        atomikosProperties4.setConsoleLogLevel(atomikosLoggingLevel14);
        java.lang.String str16 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setTransactionManagerUniqueName("{hi!=}");
        boolean boolean19 = atomikosProperties4.isThreadedTwoPhaseCommit();
        atomikosProperties4.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties22 = atomikosProperties4.asProperties();
        atomikosProperties4.setConsoleFileLimit(0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties22);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        int int12 = properties11.size();
        boolean boolean13 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        boolean boolean19 = properties17.isEmpty();
        boolean boolean20 = properties11.containsValue((java.lang.Object) boolean19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties11.elements();
        properties11.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setConsoleFileCount((-1));
        java.lang.String str26 = atomikosProperties23.getOutputDir();
        atomikosProperties23.setLogBaseName("tm.out");
        atomikosProperties23.setForceShutdownOnVmExit(true);
        int int31 = atomikosProperties23.getConsoleFileCount();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long37 = recovery36.getForgetOrphanedLogEntriesDelay();
        recovery36.setDelay((long) (short) 1);
        long long40 = recovery36.getRetryInterval();
        long long41 = recovery36.getForgetOrphanedLogEntriesDelay();
        int int42 = recovery36.getMaxRetries();
        java.lang.Object obj43 = properties11.put((java.lang.Object) atomikosProperties23, (java.lang.Object) recovery36);
        java.lang.Object obj44 = properties9.get((java.lang.Object) atomikosProperties23);
        boolean boolean45 = atomikosProperties23.isEnableLogging();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 86400000L + "'", long37 == 86400000L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 86400000L + "'", long41 == 86400000L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        boolean boolean5 = properties1.contains((java.lang.Object) 5L);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties9.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet18 = properties6.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        int int21 = properties20.size();
        boolean boolean22 = properties20.isEmpty();
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        int int25 = properties20.size();
        java.util.Properties properties26 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        atomikosProperties27.setService("hi!");
        java.lang.Object obj37 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) 10L);
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj47 = properties42.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setConsoleFileCount((-1));
        java.lang.String str52 = atomikosProperties49.getOutputDir();
        atomikosProperties49.setLogBaseName("tm.out");
        int int55 = atomikosProperties49.getConsoleFileCount();
        boolean boolean56 = properties42.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties49.getRecovery();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean63 = properties61.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str65 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties61.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosLoggingLevel73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.get((java.lang.Object) (byte) -1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties61.equals((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties61.keys();
        java.lang.Object obj81 = properties20.getOrDefault((java.lang.Object) atomikosProperties49, (java.lang.Object) properties61);
        java.lang.Object obj82 = properties1.getOrDefault((java.lang.Object) properties6, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setConsoleFileCount(100);
        int int86 = atomikosProperties83.getConsoleFileCount();
        atomikosProperties83.setOutputDir("");
        java.lang.String str89 = atomikosProperties83.getConsoleFileName();
        int int90 = atomikosProperties83.getConsoleFileCount();
        boolean boolean91 = atomikosProperties83.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel92 = atomikosProperties83.getConsoleLogLevel();
        boolean boolean93 = properties6.equals((java.lang.Object) atomikosProperties83);
        atomikosProperties83.setAllowSubTransactions(false);
        atomikosProperties83.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str98 = atomikosProperties83.getLogBaseName();
        java.util.Properties properties99 = atomikosProperties83.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tm.out" + "'", str89, "tm.out");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel92 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel92.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str98, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(properties99);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setConsoleFileName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties3.get(obj10);
        boolean boolean12 = properties3.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        properties16.clear();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Collection<java.lang.Object> objCollection19 = properties16.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        atomikosProperties20.setOutputDir("hi!");
        int int24 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        boolean boolean26 = properties16.containsValue((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj39 = properties32.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setConsoleFileCount((-1));
        java.lang.String str44 = atomikosProperties41.getOutputDir();
        atomikosProperties41.setLogBaseName("tm.out");
        boolean boolean47 = properties32.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setConsoleFileCount(100);
        atomikosProperties48.setAllowSubTransactions(true);
        java.lang.Object obj53 = properties32.remove((java.lang.Object) atomikosProperties48);
        java.lang.Object obj56 = properties32.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tm.out, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.lang.Object obj57 = properties3.put((java.lang.Object) "tmlog", (java.lang.Object) properties32);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getConsoleFileName();
        atomikosProperties7.setOutputDir("hi!");
        int int11 = atomikosProperties7.getConsoleFileLimit();
        java.util.Properties properties12 = atomikosProperties7.asProperties();
        boolean boolean13 = properties3.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        atomikosProperties7.setEnableLogging(false);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = atomikosProperties7.asProperties();
        java.util.Enumeration<?> wildcardEnumeration20 = properties19.propertyNames();
        java.util.Set<java.lang.Object> objSet21 = properties19.keySet();
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        int int19 = atomikosProperties15.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long22 = recovery21.getForgetOrphanedLogEntriesDelay();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.lang.Object obj32 = properties24.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties27);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties27.getConsoleLogLevel();
        java.lang.String str34 = atomikosProperties27.getTransactionManagerUniqueName();
        atomikosProperties27.setThreadedTwoPhaseCommit(false);
        boolean boolean37 = properties1.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) recovery21, (java.lang.Object) false);
        java.lang.String str39 = properties1.getProperty("tm.out");
        java.util.Properties properties40 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.storeToXML(outputStream41, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=50, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 86400000L + "'", long22 == 86400000L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str25 = atomikosProperties24.getConsoleFileName();
        atomikosProperties24.setOutputDir("hi!");
        int int28 = atomikosProperties24.getConsoleFileLimit();
        java.lang.Object obj29 = properties21.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties24);
        boolean boolean30 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties24.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties24.getRecovery();
        long long35 = recovery34.getDelay();
        boolean boolean36 = properties15.containsValue((java.lang.Object) recovery34);
        recovery34.setDelay((long) 0);
        long long39 = recovery34.getRetryInterval();
        recovery34.setMaxRetries((int) '4');
        recovery34.setRetryInterval((long) 52);
        recovery34.setRetryInterval(10000L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties3.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet9 = properties3.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setConsoleFileCount((-1));
        java.lang.String str13 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setLogBaseName("tm.out");
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = properties3.containsKey((java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long19 = recovery18.getForgetOrphanedLogEntriesDelay();
        recovery18.setDelay((long) (short) 1);
        recovery18.setRetryInterval(100L);
        java.lang.Object obj24 = properties3.get((java.lang.Object) 100L);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean28 = properties26.containsValue((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection29 = properties26.values();
        java.lang.String str31 = properties26.getProperty("hi!");
        java.util.Set<java.lang.String> strSet32 = properties26.stringPropertyNames();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection34 = properties33.values();
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("hi!");
        java.lang.Object obj39 = properties3.getOrDefault((java.lang.Object) strSet32, (java.lang.Object) "hi!");
        java.util.Properties properties40 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str42 = atomikosProperties41.getConsoleFileName();
        java.lang.Object obj44 = properties40.put((java.lang.Object) atomikosProperties41, (java.lang.Object) 0L);
        java.lang.Object obj47 = properties40.setProperty("", "");
        java.util.Properties properties48 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getConsoleFileName();
        atomikosProperties49.setOutputDir("hi!");
        int int53 = atomikosProperties49.getConsoleFileLimit();
        java.util.Properties properties54 = atomikosProperties49.asProperties();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        properties56.clear();
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Properties properties59 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        java.lang.Object obj63 = properties59.put((java.lang.Object) atomikosProperties60, (java.lang.Object) 0L);
        java.lang.Object obj66 = properties59.setProperty("", "");
        java.util.Properties properties67 = new java.util.Properties(properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str69 = atomikosProperties68.getConsoleFileName();
        atomikosProperties68.setOutputDir("hi!");
        int int72 = atomikosProperties68.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties68.getConsoleLogLevel();
        java.lang.Object obj74 = properties54.getOrDefault((java.lang.Object) properties59, (java.lang.Object) atomikosProperties68);
        boolean boolean75 = properties40.contains((java.lang.Object) properties59);
        boolean boolean76 = properties3.containsValue((java.lang.Object) properties59);
        java.util.Collection<java.lang.Object> objCollection77 = properties59.values();
        java.util.Properties properties78 = new java.util.Properties(properties59);
        java.util.Set<java.lang.Object> objSet79 = properties59.keySet();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 86400000L + "'", long19 == 86400000L);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "hi!" + "'", obj39, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNotNull(objSet79);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getConsoleFileName();
        atomikosProperties4.setOutputDir("hi!");
        int int8 = atomikosProperties4.getConsoleFileLimit();
        java.lang.Object obj9 = properties1.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties4);
        boolean boolean10 = atomikosProperties4.isForceShutdownOnVmExit();
        atomikosProperties4.setOutputDir("tm.out");
        java.lang.String str13 = atomikosProperties4.getLogBaseDir();
        java.lang.String str14 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str17 = atomikosProperties4.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties4.asProperties();
        atomikosProperties4.setMaxTimeout(500L);
        atomikosProperties4.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str23 = atomikosProperties4.getOutputDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj11 = properties4.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet12 = properties4.keySet();
        boolean boolean13 = properties4.isEmpty();
        java.util.Properties properties14 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getConsoleFileName();
        atomikosProperties15.setOutputDir("hi!");
        java.lang.String str19 = atomikosProperties15.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setConsoleFileCount((-1));
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        atomikosProperties42.setAllowSubTransactions(false);
        atomikosProperties42.setSerialJtaTransactions(true);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str57 = atomikosProperties56.getConsoleFileName();
        atomikosProperties56.setOutputDir("hi!");
        int int60 = atomikosProperties56.getConsoleFileLimit();
        java.lang.Object obj61 = properties53.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties56);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties56.getConsoleLogLevel();
        atomikosProperties42.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties20.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties15.setConsoleLogLevel(atomikosLoggingLevel62);
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) properties14, (java.lang.Object) atomikosLoggingLevel62);
        java.util.Set<java.lang.Object> objSet67 = properties14.keySet();
        java.util.Set<java.lang.Object> objSet68 = properties14.keySet();
        boolean boolean69 = properties14.isEmpty();
        java.util.Properties properties70 = new java.util.Properties(properties14);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", obj66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) (byte) -1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        boolean boolean19 = properties1.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        int int24 = properties23.size();
        boolean boolean25 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties23.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str28 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setOutputDir("hi!");
        int int31 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        java.lang.String str33 = atomikosProperties27.getService();
        int int34 = atomikosProperties27.getMaxActives();
        boolean boolean35 = properties23.equals((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setMaxActives((int) (short) 0);
        boolean boolean38 = properties21.containsKey((java.lang.Object) atomikosProperties27);
        java.util.Properties properties39 = new java.util.Properties(properties21);
        java.util.Properties properties40 = new java.util.Properties(properties39);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet6 = properties5.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.Object obj16 = properties11.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setConsoleFileCount((-1));
        java.lang.String str21 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseName("tm.out");
        int int24 = atomikosProperties18.getConsoleFileCount();
        boolean boolean25 = properties11.containsKey((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setConsoleFileCount((int) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties18.getRecovery();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getConsoleFileName();
        atomikosProperties33.setOutputDir("hi!");
        int int37 = atomikosProperties33.getConsoleFileLimit();
        java.lang.Object obj38 = properties30.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseName("tm.out");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties7.replace((java.lang.Object) recovery28, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties44 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str46 = atomikosProperties45.getConsoleFileName();
        java.lang.Object obj48 = properties44.put((java.lang.Object) atomikosProperties45, (java.lang.Object) 0L);
        properties44.clear();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.lang.String str52 = properties50.getProperty("{}");
        boolean boolean53 = properties7.containsKey((java.lang.Object) "{}");
        java.util.Properties properties54 = new java.util.Properties(properties7);
        java.lang.String str55 = properties7.toString();
        java.util.Set<java.lang.String> strSet56 = properties7.stringPropertyNames();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNotNull(strSet56);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) '#');
        atomikosProperties0.setConsoleFileLimit(20);
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream9, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setOutputDir("tmlog");
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setConsoleFileLimit(32);
        atomikosProperties0.setLogBaseDir("{tm.out=}");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=false, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxTimeout(86400000L);
        int int22 = atomikosProperties0.getConsoleFileLimit();
        long long23 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.elements();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        int int8 = properties7.size();
        boolean boolean9 = properties7.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Properties properties11 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getConsoleFileName();
        atomikosProperties12.setOutputDir("hi!");
        int int16 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties12.asProperties();
        java.lang.String str18 = atomikosProperties12.getService();
        atomikosProperties12.setService("hi!");
        atomikosProperties12.setForceShutdownOnVmExit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties25 = atomikosProperties12.asProperties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long31 = recovery30.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass32 = recovery30.getClass();
        boolean boolean33 = properties28.containsKey((java.lang.Object) wildcardClass32);
        boolean boolean34 = properties7.replace((java.lang.Object) properties25, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass32);
        java.util.Properties properties35 = new java.util.Properties(properties25);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getConsoleFileName();
        atomikosProperties40.setOutputDir("hi!");
        int int44 = atomikosProperties40.getConsoleFileLimit();
        java.lang.Object obj45 = properties37.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isForceShutdownOnVmExit();
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties40.getService();
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        boolean boolean51 = properties1.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties40);
        java.util.Properties properties52 = new java.util.Properties(properties1);
        properties1.clear();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 86400000L + "'", long31 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj14 = properties9.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        boolean boolean15 = properties5.equals(obj14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties5.entrySet();
        int int17 = properties5.size();
        java.util.Set<java.lang.Object> objSet18 = properties5.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str21 = atomikosProperties20.getConsoleFileName();
        java.lang.Object obj23 = properties19.put((java.lang.Object) atomikosProperties20, (java.lang.Object) 0L);
        java.lang.Object obj26 = properties19.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties19);
        java.lang.Object obj28 = properties27.clone();
        java.lang.String str29 = properties27.toString();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        properties31.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setOutputDir("hi!");
        int int38 = atomikosProperties34.getConsoleFileLimit();
        java.lang.Object obj39 = properties31.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties34);
        boolean boolean40 = atomikosProperties34.isForceShutdownOnVmExit();
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties34.getService();
        atomikosProperties34.setTransactionManagerUniqueName("");
        atomikosProperties34.setOutputDir("hi!");
        atomikosProperties34.setSerialJtaTransactions(true);
        boolean boolean50 = atomikosProperties34.isEnableLogging();
        boolean boolean51 = properties27.containsValue((java.lang.Object) atomikosProperties34);
        boolean boolean52 = properties5.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties(properties5);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj62 = properties57.replace((java.lang.Object) (-1), (java.lang.Object) (short) -1);
        java.util.Properties properties63 = new java.util.Properties(properties57);
        java.util.Properties properties64 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str66 = atomikosProperties65.getConsoleFileName();
        java.lang.Object obj68 = properties64.put((java.lang.Object) atomikosProperties65, (java.lang.Object) 0L);
        atomikosProperties65.setLogBaseName("tm.out");
        java.lang.Object obj71 = properties63.remove((java.lang.Object) atomikosProperties65);
        java.util.Properties properties72 = atomikosProperties65.asProperties();
        java.lang.String str74 = properties72.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration75 = properties72.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration76 = properties72.propertyNames();
        int int77 = properties72.size();
        boolean boolean78 = properties53.contains((java.lang.Object) int77);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 19 + "'", int17 == 19);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tm.out" + "'", str66, "tm.out");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 18 + "'", int77 == 18);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setLogBaseDir("tm.out");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileCount(19);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str10 = atomikosProperties9.getConsoleFileName();
        atomikosProperties9.setOutputDir("hi!");
        int int13 = atomikosProperties9.getConsoleFileLimit();
        java.lang.Object obj14 = properties6.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel15);
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("tm.out");
        int int23 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties0.getRecovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        long long26 = recovery24.getDelay();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean3 = properties1.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str5 = atomikosProperties4.getTransactionManagerUniqueName();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str9 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("hi!");
        int int12 = atomikosProperties8.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Object obj14 = properties1.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosLoggingLevel13);
        boolean boolean15 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setService("");
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties4.getOutputDir();
        java.util.Properties properties21 = atomikosProperties4.asProperties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Set<java.lang.String> strSet24 = properties23.stringPropertyNames();
        java.lang.Object obj25 = properties21.get((java.lang.Object) strSet24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet27 = properties21.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(objSet27);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        boolean boolean15 = properties9.equals((java.lang.Object) (-1.0d));
        java.lang.Object obj16 = properties4.remove((java.lang.Object) properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties4.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str24 = atomikosProperties23.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties21.setSerialJtaTransactions(false);
        java.util.Properties properties29 = atomikosProperties21.asProperties();
        java.lang.Object obj30 = properties18.remove((java.lang.Object) atomikosProperties21);
        java.lang.String str31 = atomikosProperties21.getLogBaseName();
        atomikosProperties21.setEnableLogging(false);
        java.lang.Object obj34 = properties2.getOrDefault((java.lang.Object) objEntrySet17, (java.lang.Object) atomikosProperties21);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties2.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean39 = properties37.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getTransactionManagerUniqueName();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getConsoleFileName();
        atomikosProperties44.setOutputDir("hi!");
        int int48 = atomikosProperties44.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = atomikosProperties44.getConsoleLogLevel();
        java.lang.Object obj50 = properties37.putIfAbsent((java.lang.Object) atomikosProperties40, (java.lang.Object) atomikosLoggingLevel49);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.get((java.lang.Object) (byte) -1);
        java.util.Properties properties54 = new java.util.Properties(properties51);
        boolean boolean55 = properties37.equals((java.lang.Object) properties51);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getConsoleFileName();
        atomikosProperties60.setOutputDir("hi!");
        int int64 = atomikosProperties60.getConsoleFileLimit();
        java.lang.Object obj65 = properties57.put((java.lang.Object) 1, (java.lang.Object) atomikosProperties60);
        boolean boolean66 = atomikosProperties60.isForceShutdownOnVmExit();
        atomikosProperties60.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties60.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = atomikosProperties60.getRecovery();
        long long71 = recovery70.getDelay();
        boolean boolean72 = properties51.containsValue((java.lang.Object) recovery70);
        recovery70.setDelay((long) 0);
        long long75 = recovery70.getRetryInterval();
        java.util.Properties properties76 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getConsoleFileName();
        java.lang.Object obj80 = properties76.put((java.lang.Object) atomikosProperties77, (java.lang.Object) 0L);
        java.util.Properties properties81 = new java.util.Properties(properties76);
        java.lang.Object obj82 = properties76.clone();
        java.lang.Object obj83 = properties2.putIfAbsent((java.lang.Object) recovery70, (java.lang.Object) properties76);
        int int84 = recovery70.getMaxRetries();
        long long85 = recovery70.getDelay();
        recovery70.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(recovery70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10000L + "'", long71 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setOutputDir("hi!");
        int int4 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getService();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval(5L);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tm.out" + "'", str1, "tm.out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setAllowSubTransactions(false);
        int int5 = atomikosProperties0.getMaxActives();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount((-1));
        java.lang.String str3 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        int int12 = atomikosProperties0.getMaxActives();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str15 = properties13.getProperty("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties0.setProperty("hi!", "");
        java.util.Properties properties5 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        java.lang.Object obj9 = properties5.put((java.lang.Object) atomikosProperties6, (java.lang.Object) 0L);
        java.lang.Object obj12 = properties5.setProperty("", "");
        java.util.Properties properties13 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setConsoleFileCount(100);
        atomikosProperties15.setAllowSubTransactions(true);
        atomikosProperties15.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj22 = properties13.remove((java.lang.Object) "tm.out");
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        properties26.clear();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection29 = properties26.values();
        java.util.Properties properties30 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        atomikosProperties31.setAllowSubTransactions(true);
        java.lang.String str36 = atomikosProperties31.getConsoleFileName();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties31.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = atomikosProperties31.getConsoleLogLevel();
        boolean boolean41 = properties30.contains((java.lang.Object) atomikosLoggingLevel40);
        java.util.Properties properties42 = new java.util.Properties(properties30);
        java.lang.Object obj43 = properties30.clone();
        java.util.Enumeration<?> wildcardEnumeration44 = properties30.propertyNames();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.String str47 = properties30.getProperty("{10=10.0}");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel40 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel40.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setOutputDir("hi!");
        int int10 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.lang.String str12 = atomikosProperties6.getService();
        atomikosProperties6.setService("hi!");
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        int int23 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long25 = recovery24.getForgetOrphanedLogEntriesDelay();
        java.lang.Class<?> wildcardClass26 = recovery24.getClass();
        boolean boolean27 = properties22.containsKey((java.lang.Object) wildcardClass26);
        boolean boolean28 = properties1.replace((java.lang.Object) properties19, (java.lang.Object) 1.0f, (java.lang.Object) wildcardClass26);
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setConsoleFileCount(100);
        int int34 = atomikosProperties31.getConsoleFileCount();
        atomikosProperties31.setOutputDir("");
        java.lang.String str37 = atomikosProperties31.getConsoleFileName();
        long long38 = atomikosProperties31.getMaxTimeout();
        atomikosProperties31.setMaxActives(100);
        int int41 = atomikosProperties31.getConsoleFileCount();
        int int42 = atomikosProperties31.getConsoleFileCount();
        java.lang.String str43 = atomikosProperties31.getOutputDir();
        atomikosProperties31.setEnableLogging(false);
        java.lang.String str46 = atomikosProperties31.getTransactionManagerUniqueName();
        java.util.Properties properties47 = atomikosProperties31.asProperties();
        java.lang.Object obj48 = properties47.clone();
        java.util.Collection<java.lang.Object> objCollection49 = properties47.values();
        boolean boolean50 = properties29.contains((java.lang.Object) objCollection49);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tm.out" + "'", str37, "tm.out");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        boolean boolean4 = properties2.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj15 = properties8.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean20 = properties18.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        properties28.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.lang.Object obj33 = properties26.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) 10.0d);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setConsoleFileCount((-1));
        java.lang.String str38 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setLogBaseName("tm.out");
        boolean boolean41 = properties26.containsKey((java.lang.Object) "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setConsoleFileCount(100);
        atomikosProperties42.setAllowSubTransactions(true);
        java.lang.Object obj47 = properties26.remove((java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet48 = properties26.keySet();
        boolean boolean49 = properties2.replace((java.lang.Object) properties8, (java.lang.Object) objEntrySet22, (java.lang.Object) properties26);
        java.lang.String str51 = properties8.getProperty("{}");
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties8.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties8.keys();
        java.util.Properties properties54 = new java.util.Properties(properties8);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean58 = properties56.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getTransactionManagerUniqueName();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getConsoleFileName();
        atomikosProperties63.setOutputDir("hi!");
        int int67 = atomikosProperties63.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties63.getConsoleLogLevel();
        java.lang.Object obj69 = properties56.putIfAbsent((java.lang.Object) atomikosProperties59, (java.lang.Object) atomikosLoggingLevel68);
        boolean boolean70 = atomikosProperties59.isSerialJtaTransactions();
        atomikosProperties59.setService("");
        boolean boolean73 = properties54.containsValue((java.lang.Object) atomikosProperties59);
        atomikosProperties59.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        properties3.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.lang.Object obj8 = properties1.setProperty("", "hi!");
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getConsoleFileName();
        java.lang.Object obj14 = properties10.put((java.lang.Object) atomikosProperties11, (java.lang.Object) 0L);
        java.util.Properties properties15 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileCount((-1));
        atomikosProperties16.setTransactionManagerUniqueName("tm.out");
        java.lang.Object obj21 = properties10.remove((java.lang.Object) atomikosProperties16);
        boolean boolean22 = atomikosProperties16.isForceShutdownOnVmExit();
        java.util.Properties properties23 = atomikosProperties16.asProperties();
        java.lang.String str24 = properties23.toString();
        boolean boolean25 = properties9.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setConsoleFileCount(100);
        int int29 = atomikosProperties26.getConsoleFileCount();
        atomikosProperties26.setOutputDir("");
        java.lang.String str32 = atomikosProperties26.getConsoleFileName();
        boolean boolean33 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        boolean boolean36 = properties9.containsValue((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setConsoleFileCount((-1));
        java.lang.String str40 = atomikosProperties37.getOutputDir();
        atomikosProperties37.setLogBaseName("tm.out");
        atomikosProperties37.setForceShutdownOnVmExit(true);
        atomikosProperties37.setConsoleFileCount((int) (byte) 0);
        java.lang.String str47 = atomikosProperties37.getLogBaseDir();
        boolean boolean48 = atomikosProperties37.isAllowSubTransactions();
        java.lang.String str49 = atomikosProperties37.getTransactionManagerUniqueName();
        java.lang.String str50 = atomikosProperties37.getLogBaseName();
        boolean boolean51 = properties9.containsValue((java.lang.Object) str50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setConsoleFileCount(100);
        int int55 = atomikosProperties52.getConsoleFileCount();
        atomikosProperties52.setOutputDir("");
        java.lang.String str58 = atomikosProperties52.getConsoleFileName();
        long long59 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setMaxActives(100);
        int int62 = atomikosProperties52.getConsoleFileCount();
        int int63 = atomikosProperties52.getConsoleFileCount();
        java.lang.String str64 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setEnableLogging(false);
        java.lang.String str67 = atomikosProperties52.getTransactionManagerUniqueName();
        java.util.Properties properties68 = atomikosProperties52.asProperties();
        java.lang.Object obj69 = properties68.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getConsoleFileName();
        atomikosProperties70.setOutputDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery74 = atomikosProperties70.getRecovery();
        recovery74.setMaxRetries((int) (short) 0);
        recovery74.setRetryInterval(1L);
        java.lang.Object obj79 = properties9.put((java.lang.Object) properties68, (java.lang.Object) recovery74);
        int int80 = recovery74.getMaxRetries();
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str24, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tm.out" + "'", str50, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(obj69);
// flaky:         org.junit.Assert.assertEquals(obj69.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=100, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertNotNull(recovery74);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setMaxActives(97);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str2 = atomikosProperties1.getConsoleFileName();
        java.lang.Object obj4 = properties0.put((java.lang.Object) atomikosProperties1, (java.lang.Object) 0L);
        java.lang.Object obj7 = properties0.setProperty("", "");
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.lang.Object obj9 = properties8.clone();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean13 = properties11.containsValue((java.lang.Object) 10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str15 = atomikosProperties14.getTransactionManagerUniqueName();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setOutputDir("hi!");
        int int22 = atomikosProperties18.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties18.getConsoleLogLevel();
        java.lang.Object obj24 = properties11.putIfAbsent((java.lang.Object) atomikosProperties14, (java.lang.Object) atomikosLoggingLevel23);
        boolean boolean25 = properties8.contains((java.lang.Object) atomikosProperties14);
        int int26 = atomikosProperties14.getMaxActives();
        int int27 = atomikosProperties14.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties14.getConsoleLogLevel();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tm.out" + "'", str2, "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }
}
